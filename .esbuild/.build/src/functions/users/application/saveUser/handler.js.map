{
  "version": 3,
  "sources": ["../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/helpers.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/utils/lambda/LambdaInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/utils/lambda/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/Utility.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/config/ConfigService.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/config/EnvironmentVariablesService.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/config/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/samples/resources/contexts/hello-world.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/samples/resources/contexts/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/samples/resources/events/custom/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/samples/resources/events/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/types/middy.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/types/utils.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/version.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/awsSdk/utils.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/awsSdk/userAgentMiddleware.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/awsSdk/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/formatter/LogFormatter.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/formatter/LogFormatterInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/formatter/PowertoolLogFormatter.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/formatter/index.js", "../../../../../../../node_modules/lodash.merge/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/log/LogItem.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/log/LogItemInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/log/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/config/ConfigServiceInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/config/EnvironmentVariablesService.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/config/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/Logger.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/middleware/constants.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/middleware/cleanupMiddlewares.js", "../../../../../../../node_modules/@aws-lambda-powertools/commons/lib/middleware/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/middleware/middy.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/middleware/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/logger/lib/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/config/ConfigServiceInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/config/EnvironmentVariablesService.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/config/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/constants.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/types/Metrics.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/types/MetricUnit.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/types/MetricResolution.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/types/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/Metrics.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/MetricsInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/middleware/middy.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/middleware/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/helpers.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/config/ConfigServiceInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/config/EnvironmentVariablesService.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/config/index.js", "../../../../../../../node_modules/shimmer/index.js", "../../../../../../../node_modules/emitter-listener/listener.js", "../../../../../../../node_modules/cls-hooked/context.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/logger.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/attributes/captured_exception.js", "../../../../../../../node_modules/atomic-batcher/index.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/daemon_config.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segment_emitter.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/attributes/trace_id.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/utils.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/segment_utils.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/attributes/remote_request_data.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/attributes/subsegment.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/segment.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/context_utils.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/incoming_request_data.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/local_reservoir.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/resources/default_sampling_rules.json", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/local_sampler.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/reservoir.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/sampling_rule.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/service_connector.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/rule_cache.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/rule_poller.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/target_poller.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/sampling/default_sampler.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/middleware/mw_utils.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/env/aws_lambda.js", "../../../../../../../node_modules/aws-xray-sdk-core/package.json", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/plugins/plugin.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/plugins/ec2_plugin.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/plugins/ecs_plugin.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/plugins/elastic_beanstalk_plugin.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/resources/aws_whitelist.json", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/patchers/call_capturer.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/segments/attributes/aws.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/capture.js", "../../../../../../../node_modules/semver/internal/constants.js", "../../../../../../../node_modules/semver/internal/debug.js", "../../../../../../../node_modules/semver/internal/re.js", "../../../../../../../node_modules/semver/internal/parse-options.js", "../../../../../../../node_modules/semver/internal/identifiers.js", "../../../../../../../node_modules/semver/classes/semver.js", "../../../../../../../node_modules/semver/functions/parse.js", "../../../../../../../node_modules/semver/functions/valid.js", "../../../../../../../node_modules/semver/functions/clean.js", "../../../../../../../node_modules/semver/functions/inc.js", "../../../../../../../node_modules/semver/functions/diff.js", "../../../../../../../node_modules/semver/functions/major.js", "../../../../../../../node_modules/semver/functions/minor.js", "../../../../../../../node_modules/semver/functions/patch.js", "../../../../../../../node_modules/semver/functions/prerelease.js", "../../../../../../../node_modules/semver/functions/compare.js", "../../../../../../../node_modules/semver/functions/rcompare.js", "../../../../../../../node_modules/semver/functions/compare-loose.js", "../../../../../../../node_modules/semver/functions/compare-build.js", "../../../../../../../node_modules/semver/functions/sort.js", "../../../../../../../node_modules/semver/functions/rsort.js", "../../../../../../../node_modules/semver/functions/gt.js", "../../../../../../../node_modules/semver/functions/lt.js", "../../../../../../../node_modules/semver/functions/eq.js", "../../../../../../../node_modules/semver/functions/neq.js", "../../../../../../../node_modules/semver/functions/gte.js", "../../../../../../../node_modules/semver/functions/lte.js", "../../../../../../../node_modules/semver/functions/cmp.js", "../../../../../../../node_modules/semver/functions/coerce.js", "../../../../../../../node_modules/yallist/iterator.js", "../../../../../../../node_modules/yallist/yallist.js", "../../../../../../../node_modules/lru-cache/index.js", "../../../../../../../node_modules/semver/classes/range.js", "../../../../../../../node_modules/semver/classes/comparator.js", "../../../../../../../node_modules/semver/functions/satisfies.js", "../../../../../../../node_modules/semver/ranges/to-comparators.js", "../../../../../../../node_modules/semver/ranges/max-satisfying.js", "../../../../../../../node_modules/semver/ranges/min-satisfying.js", "../../../../../../../node_modules/semver/ranges/min-version.js", "../../../../../../../node_modules/semver/ranges/valid.js", "../../../../../../../node_modules/semver/ranges/outside.js", "../../../../../../../node_modules/semver/ranges/gtr.js", "../../../../../../../node_modules/semver/ranges/ltr.js", "../../../../../../../node_modules/semver/ranges/intersects.js", "../../../../../../../node_modules/semver/ranges/simplify.js", "../../../../../../../node_modules/semver/ranges/subset.js", "../../../../../../../node_modules/semver/index.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/patchers/aws_p.js", "../../../../../../../node_modules/@smithy/service-error-classification/dist-cjs/index.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/patchers/aws3_p.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/patchers/http_p.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/patchers/promise_p.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/database/sql_data.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/aws-xray.js", "../../../../../../../node_modules/aws-xray-sdk-core/dist/lib/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/provider/ProviderService.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/provider/ProviderServiceInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/provider/index.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/Tracer.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/TracerInterface.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/middleware/middy.js", "../../../../../../../node_modules/@aws-lambda-powertools/tracer/lib/index.js", "../../../../../../../node_modules/jwt-decode/lib/atob.js", "../../../../../../../node_modules/jwt-decode/lib/base64_url_decode.js", "../../../../../../../node_modules/jwt-decode/lib/index.js", "../../../../../../../node_modules/postgres-array/index.js", "../../../../../../../node_modules/pg-types/lib/arrayParser.js", "../../../../../../../node_modules/postgres-date/index.js", "../../../../../../../node_modules/xtend/mutable.js", "../../../../../../../node_modules/postgres-interval/index.js", "../../../../../../../node_modules/postgres-bytea/index.js", "../../../../../../../node_modules/pg-types/lib/textParsers.js", "../../../../../../../node_modules/pg-int8/index.js", "../../../../../../../node_modules/pg-types/lib/binaryParsers.js", "../../../../../../../node_modules/pg-types/lib/builtins.js", "../../../../../../../node_modules/pg-types/index.js", "../../../../../../../node_modules/pg/lib/defaults.js", "../../../../../../../node_modules/pg/lib/utils.js", "../../../../../../../node_modules/pg/lib/crypto/utils-legacy.js", "../../../../../../../node_modules/pg/lib/crypto/utils-webcrypto.js", "../../../../../../../node_modules/pg/lib/crypto/utils.js", "../../../../../../../node_modules/pg/lib/crypto/sasl.js", "../../../../../../../node_modules/pg/lib/type-overrides.js", "../../../../../../../node_modules/pg-connection-string/index.js", "../../../../../../../node_modules/pg/lib/connection-parameters.js", "../../../../../../../node_modules/pg/lib/result.js", "../../../../../../../node_modules/pg/lib/query.js", "../../../../../../../node_modules/pg-protocol/src/messages.ts", "../../../../../../../node_modules/pg-protocol/src/buffer-writer.ts", "../../../../../../../node_modules/pg-protocol/src/serializer.ts", "../../../../../../../node_modules/pg-protocol/src/buffer-reader.ts", "../../../../../../../node_modules/pg-protocol/src/parser.ts", "../../../../../../../node_modules/pg-protocol/src/index.ts", "../../../../../../../node_modules/pg-cloudflare/src/empty.ts", "../../../../../../../node_modules/pg/lib/stream.js", "../../../../../../../node_modules/pg/lib/connection.js", "../../../../../../../node_modules/pgpass/node_modules/split2/index.js", "../../../../../../../node_modules/pgpass/lib/helper.js", "../../../../../../../node_modules/pgpass/lib/index.js", "../../../../../../../node_modules/pg/lib/client.js", "../../../../../../../node_modules/pg-pool/index.js", "../../../../../../../node_modules/pg/lib/native/query.js", "../../../../../../../node_modules/pg/lib/native/client.js", "../../../../../../../node_modules/pg/lib/native/index.js", "../../../../../../../node_modules/pg/lib/index.js", "../../../../../../../node_modules/uuid4/index.js", "../../../../../../../src/functions/users/application/saveUser/handler.ts", "../../../../../../../src/libs/powertools.ts", "../../../../../../../src/infraestructure/persistence/postgresql/ParseQuery.ts", "../../../../../../../src/infraestructure/persistence/postgresql/PostgreSqlRepository.ts", "../../../../../../../src/functions/users/persistence/UserPostgreRepository.ts", "../../../../../../../src/infraestructure/http/HttpResponse.ts", "../../../../../../../src/infraestructure/log/AddLog.ts", "../../../../../../../src/infraestructure/persistence/postgresql/PostgreSqlClientFactory.ts", "../../../../../../../src/infraestructure/log/ILogEntry.ts", "../../../../../../../src/infraestructure/log/LogRepository.ts", "../../../../../../../src/infraestructure/log/persistence/MemoryDataPersistence.ts", "../../../../../../../src/infraestructure/log/prepareLog.ts", "../../../../../../../src/libs/parseBody.ts", "../../../../../../../node_modules/@middy/core/index.js", "../../../../../../../node_modules/@middy/input-output-logger/index.js", "../../../../../../../src/functions/users/domain/User.ts", "../../../../../../../src/infraestructure/error/CustomError.ts", "../../../../../../../src/functions/users/application/saveUser/saveUser.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLogger = void 0;\nconst _1 = require(\".\");\n/**\n * Create a new logger instance with the given options.\n *\n * @deprecated - This function will be removed in the next major release. Use the Logger class directly instead.\n */\nconst createLogger = (options = {}) => new _1.Logger(options);\nexports.createLogger = createLogger;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./LambdaInterface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Utility = void 0;\n/**\n * ## Intro\n * Utility is a base class that other Powertools for AWS Lambda (TypeScript) utilites can extend to inherit shared logic.\n *\n *\n * ## Key features\n *   * Cold Start heuristic to determine if the current\n *\n * ## Usage\n *\n * ### Cold Start\n *\n * Cold start is a term commonly used to describe the `Init` phase of a Lambda function. In this phase, Lambda creates or unfreezes an execution environment with the configured resources, downloads the code for the function and all layers, initializes any extensions, initializes the runtime, and then runs the function\u2019s initialization code (the code outside the main handler). The Init phase happens either during the first invocation, or in advance of function invocations if you have enabled provisioned concurrency.\n *\n * To learn more about the Lambda execution environment lifecycle, see the [Execution environment section](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) of the AWS Lambda documentation.\n *\n * As a Powertools for AWS Lambda (TypeScript) user you probably won't be using this class directly, in fact if you use other Powertools for AWS utilities the cold start heuristic found here is already used to:\n * * Add a `coldStart` key to the structured logs when injecting context information in `Logger`\n * * Emit a metric during a cold start function invocation in `Metrics`\n * * Annotate the invocation segment with a `coldStart` key in `Tracer`\n *\n * If you want to use this logic in your own utilities, `Utility` provides two methods:\n *\n * #### `getColdStart()`\n *\n * Since the `Utility` class is instantiated outside of the Lambda handler it will persist across invocations of the same execution environment. This means that if you call `getColdStart()` multiple times, it will return `true` during the first invocation, and `false` afterwards.\n *\n * @example\n * ```typescript\n * import { Utility } from '@aws-lambda-powertools/commons';\n *\n * const utility = new Utility();\n *\n * export const handler = async (_event: any, _context: any) => {\n *   utility.getColdStart();\n * };\n * ```\n *\n * #### `isColdStart()`\n *\n * This method is an alias of `getColdStart()` and is exposed for convenience and better readability in certain usages.\n *\n * @example\n * ```typescript\n * import { Utility } from '@aws-lambda-powertools/commons';\n *\n * const utility = new Utility();\n *\n * export const handler = async (_event: any, _context: any) => {\n *   if (utility.isColdStart()) {\n *     // do something, this block is only executed on the first invocation of the function\n *   } else {\n *     // do something else, this block gets executed on all subsequent invocations\n *   }\n * };\n * ```\n */\nclass Utility {\n    constructor() {\n        this.coldStart = true;\n        this.defaultServiceName = 'service_undefined';\n    }\n    getColdStart() {\n        if (this.coldStart) {\n            this.coldStart = false;\n            return true;\n        }\n        return false;\n    }\n    isColdStart() {\n        return this.getColdStart();\n    }\n    getDefaultServiceName() {\n        return this.defaultServiceName;\n    }\n    /**\n     * Validate that the service name provided is valid.\n     * Used internally during initialization.\n     *\n     * @param serviceName - Service name to validate\n     */\n    isValidServiceName(serviceName) {\n        return typeof serviceName === 'string' && serviceName.trim().length > 0;\n    }\n}\nexports.Utility = Utility;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigService = void 0;\n/**\n * Abstract class ConfigService\n *\n * This class defines common methods and variables that can be set by the developer\n * in the runtime.\n *\n * @class\n * @abstract\n */\nclass ConfigService {\n}\nexports.ConfigService = ConfigService;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnvironmentVariablesService = void 0;\n/**\n * Class EnvironmentVariablesService\n *\n * This class is used to return environment variables that are available in the runtime of\n * the current Lambda invocation.\n * These variables can be a mix of runtime environment variables set by AWS and\n * variables that can be set by the developer additionally.\n *\n * @class\n * @extends {ConfigService}\n * @see https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime\n * @see https://docs.powertools.aws.dev/lambda/typescript/latest/#environment-variables\n */\nclass EnvironmentVariablesService {\n    constructor() {\n        /**\n         * @see https://docs.powertools.aws.dev/lambda/typescript/latest/#environment-variables\n         * @protected\n         */\n        this.devModeVariable = 'POWERTOOLS_DEV';\n        this.serviceNameVariable = 'POWERTOOLS_SERVICE_NAME';\n        // Reserved environment variables\n        this.xRayTraceIdVariable = '_X_AMZN_TRACE_ID';\n    }\n    /**\n     * It returns the value of an environment variable that has given name.\n     *\n     * @param {string} name\n     * @returns {string}\n     */\n    get(name) {\n        return process.env[name]?.trim() || '';\n    }\n    /**\n     * It returns the value of the POWERTOOLS_SERVICE_NAME environment variable.\n     *\n     * @returns {string}\n     */\n    getServiceName() {\n        return this.get(this.serviceNameVariable);\n    }\n    /**\n     * It returns the value of the _X_AMZN_TRACE_ID environment variable.\n     *\n     * The AWS X-Ray Trace data available in the environment variable has this format:\n     * `Root=1-5759e988-bd862e3fe1be46a994272793;Parent=557abcec3ee5a047;Sampled=1`,\n     *\n     * The actual Trace ID is: `1-5759e988-bd862e3fe1be46a994272793`.\n     *\n     * @returns {string}\n     */\n    getXrayTraceId() {\n        const xRayTraceData = this.getXrayTraceData();\n        return xRayTraceData?.Root;\n    }\n    /**\n     * It returns true if the Sampled flag is set in the _X_AMZN_TRACE_ID environment variable.\n     *\n     * The AWS X-Ray Trace data available in the environment variable has this format:\n     * `Root=1-5759e988-bd862e3fe1be46a994272793;Parent=557abcec3ee5a047;Sampled=1`,\n     *\n     * @returns {boolean}\n     */\n    getXrayTraceSampled() {\n        const xRayTraceData = this.getXrayTraceData();\n        return xRayTraceData?.Sampled === '1';\n    }\n    /**\n     * It returns true if the `POWERTOOLS_DEV` environment variable is set to truthy value.\n     *\n     * @returns {boolean}\n     */\n    isDevMode() {\n        return this.isValueTrue(this.get(this.devModeVariable));\n    }\n    /**\n     * It returns true if the string value represents a boolean true value.\n     *\n     * @param {string} value\n     * @returns boolean\n     */\n    isValueTrue(value) {\n        const truthyValues = ['1', 'y', 'yes', 't', 'true', 'on'];\n        return truthyValues.includes(value.toLowerCase());\n    }\n    /**\n     * It parses the key/value data present in the _X_AMZN_TRACE_ID environment variable\n     * and returns it as an object when available.\n     */\n    getXrayTraceData() {\n        const xRayTraceEnv = this.get(this.xRayTraceIdVariable);\n        if (xRayTraceEnv === '')\n            return undefined;\n        if (!xRayTraceEnv.includes('='))\n            return { Root: xRayTraceEnv };\n        const xRayTraceData = {};\n        xRayTraceEnv.split(';').forEach((field) => {\n            const [key, value] = field.split('=');\n            xRayTraceData[key] = value;\n        });\n        return xRayTraceData;\n    }\n}\nexports.EnvironmentVariablesService = EnvironmentVariablesService;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ConfigService\"), exports);\n__exportStar(require(\"./EnvironmentVariablesService\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.helloworldContext = void 0;\nconst helloworldContext = {\n    callbackWaitsForEmptyEventLoop: true,\n    functionVersion: '$LATEST',\n    functionName: 'foo-bar-function',\n    memoryLimitInMB: '128',\n    logGroupName: '/aws/lambda/foo-bar-function-123456abcdef',\n    logStreamName: '2021/03/09/[$LATEST]abcdef123456abcdef123456abcdef123456',\n    invokedFunctionArn: 'arn:aws:lambda:eu-west-1:123456789012:function:foo-bar-function',\n    awsRequestId: 'c6af9ac6-7b61-11e6-9a41-93e812345678',\n    getRemainingTimeInMillis: () => 1234,\n    done: () => console.log('Done!'),\n    fail: () => console.log('Failed!'),\n    succeed: () => console.log('Succeeded!'),\n};\nexports.helloworldContext = helloworldContext;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./hello-world\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomEvent = void 0;\nexports.CustomEvent = {\n    key1: 'value1',\n    key2: 'value2',\n    key3: 'value3',\n};\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Custom = void 0;\nexports.Custom = __importStar(require(\"./custom\"));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNullOrUndefined = exports.isTruthy = exports.isString = exports.isRecord = void 0;\n/**\n * Returns true if the passed value is a record (object).\n *\n * @param value\n */\nconst isRecord = (value) => {\n    return (Object.prototype.toString.call(value) === '[object Object]' &&\n        !Object.is(value, null));\n};\nexports.isRecord = isRecord;\n/**\n * Returns true if the passed value is truthy.\n *\n * @param value\n */\nconst isTruthy = (value) => {\n    if (typeof value === 'string') {\n        return value !== '';\n    }\n    else if (typeof value === 'number') {\n        return value !== 0;\n    }\n    else if (typeof value === 'boolean') {\n        return value;\n    }\n    else if (Array.isArray(value)) {\n        return value.length > 0;\n    }\n    else if (isRecord(value)) {\n        return Object.keys(value).length > 0;\n    }\n    else {\n        return false;\n    }\n};\nexports.isTruthy = isTruthy;\n/**\n * Returns true if the passed value is null or undefined.\n *\n * @param value\n */\nconst isNullOrUndefined = (value) => {\n    return Object.is(value, null) || Object.is(value, undefined);\n};\nexports.isNullOrUndefined = isNullOrUndefined;\n/**\n * Returns true if the passed value is a string.\n * @param value\n * @returns\n */\nconst isString = (value) => {\n    return typeof value === 'string';\n};\nexports.isString = isString;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PT_VERSION = void 0;\n// this file is auto generated, do not modify\nexports.PT_VERSION = '1.17.0';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSdkClient = void 0;\n/**\n * @internal\n * Type guard to check if the client provided is a valid AWS SDK v3 client\n */\nconst isSdkClient = (client) => typeof client === 'object' &&\n    client !== null &&\n    'send' in client &&\n    typeof client.send === 'function' &&\n    'config' in client &&\n    client.config !== undefined &&\n    typeof client.config === 'object' &&\n    client.config !== null &&\n    'middlewareStack' in client &&\n    client.middlewareStack !== undefined &&\n    typeof client.middlewareStack === 'object' &&\n    client.middlewareStack !== null &&\n    'identify' in client.middlewareStack &&\n    typeof client.middlewareStack.identify === 'function' &&\n    'addRelativeTo' in client.middlewareStack &&\n    typeof client.middlewareStack.addRelativeTo === 'function';\nexports.isSdkClient = isSdkClient;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addUserAgentMiddleware = exports.customUserAgentMiddleware = void 0;\nconst version_1 = require(\"../version\");\nconst utils_1 = require(\"./utils\");\n/**\n * @internal\n */\nconst EXEC_ENV = process.env.AWS_EXECUTION_ENV || 'NA';\nconst middlewareOptions = {\n    relation: 'after',\n    toMiddleware: 'getUserAgentMiddleware',\n    name: 'addPowertoolsToUserAgent',\n    tags: ['POWERTOOLS', 'USER_AGENT'],\n};\n/**\n * @internal\n * returns a middleware function for the MiddlewareStack, that can be used for the SDK clients\n * @param feature\n */\nconst customUserAgentMiddleware = (feature) => {\n    return (next) => async (args) => {\n        const powertoolsUserAgent = `PT/${feature}/${version_1.PT_VERSION} PTEnv/${EXEC_ENV}`;\n        args.request.headers['user-agent'] =\n            `${args.request.headers['user-agent']} ${powertoolsUserAgent}`;\n        return await next(args);\n    };\n};\nexports.customUserAgentMiddleware = customUserAgentMiddleware;\n/**\n * @internal\n * Checks if the middleware stack already has the Powertools UA middleware\n */\nconst hasPowertools = (middlewareStack) => {\n    let found = false;\n    for (const middleware of middlewareStack) {\n        if (middleware.includes('addPowertoolsToUserAgent')) {\n            found = true;\n        }\n    }\n    return found;\n};\nconst addUserAgentMiddleware = (client, feature) => {\n    try {\n        if ((0, utils_1.isSdkClient)(client)) {\n            if (hasPowertools(client.middlewareStack.identify())) {\n                return;\n            }\n            client.middlewareStack.addRelativeTo(customUserAgentMiddleware(feature), middlewareOptions);\n        }\n        else {\n            throw new Error(`The client provided does not match the expected interface`);\n        }\n    }\n    catch (error) {\n        console.warn('Failed to add user agent middleware', error);\n    }\n};\nexports.addUserAgentMiddleware = addUserAgentMiddleware;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSdkClient = exports.addUserAgentMiddleware = void 0;\nvar userAgentMiddleware_1 = require(\"./userAgentMiddleware\");\nObject.defineProperty(exports, \"addUserAgentMiddleware\", { enumerable: true, get: function () { return userAgentMiddleware_1.addUserAgentMiddleware; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"isSdkClient\", { enumerable: true, get: function () { return utils_1.isSdkClient; } });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Events = exports.ContextExamples = void 0;\n__exportStar(require(\"./utils/lambda\"), exports);\n__exportStar(require(\"./Utility\"), exports);\n__exportStar(require(\"./config\"), exports);\nexports.ContextExamples = __importStar(require(\"./samples/resources/contexts\"));\nexports.Events = __importStar(require(\"./samples/resources/events\"));\n__exportStar(require(\"./types/middy\"), exports);\n__exportStar(require(\"./types/utils\"), exports);\n__exportStar(require(\"./awsSdk\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogFormatter = void 0;\n/**\n * Typeguard to monkey patch Error to add a cause property.\n *\n * This is needed because the `cause` property is present in ES2022 or newer.\n * Since we want to be able to format errors in Node 16.x, we need to\n * add this property ourselves. We can remove this once we drop support\n * for Node 16.x.\n *\n * @see https://nodejs.org/api/errors.html#errors_error_cause\n */\nconst isErrorWithCause = (error) => {\n    return 'cause' in error;\n};\n/**\n * This class defines and implements common methods for the formatting of log attributes.\n *\n * @class\n * @abstract\n * @implements {LogFormatterInterface}\n */\nclass LogFormatter {\n    /**\n     * It formats a given Error parameter.\n     *\n     * @param {Error} error\n     * @returns {LogAttributes}\n     */\n    formatError(error) {\n        return {\n            name: error.name,\n            location: this.getCodeLocation(error.stack),\n            message: error.message,\n            stack: error.stack,\n            cause: isErrorWithCause(error)\n                ? error.cause instanceof Error\n                    ? this.formatError(error.cause)\n                    : error.cause\n                : undefined,\n        };\n    }\n    /**\n     * It formats a date into a string in simplified extended ISO format (ISO 8601).\n     *\n     * @param {Date} now\n     * @returns {string}\n     */\n    formatTimestamp(now) {\n        return now.toISOString();\n    }\n    /**\n     * It returns a string containing the location of an error, given a particular stack trace.\n     *\n     * @param stack\n     * @returns {string}\n     */\n    getCodeLocation(stack) {\n        if (!stack) {\n            return '';\n        }\n        const stackLines = stack.split('\\n');\n        const regex = /\\((.*):(\\d+):(\\d+)\\)\\\\?$/;\n        let i;\n        for (i = 0; i < stackLines.length; i++) {\n            const match = regex.exec(stackLines[i]);\n            if (Array.isArray(match)) {\n                return `${match[1]}:${Number(match[2])}`;\n            }\n        }\n        return '';\n    }\n}\nexports.LogFormatter = LogFormatter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PowertoolLogFormatter = void 0;\nconst _1 = require(\".\");\n/**\n * This class is used to transform a set of log key-value pairs\n * in the AWS Lambda Powertools' default structure log format.\n *\n * @class\n * @extends {LogFormatter}\n */\nclass PowertoolLogFormatter extends _1.LogFormatter {\n    /**\n     * It formats key-value pairs of log attributes.\n     *\n     * @param {UnformattedAttributes} attributes\n     * @returns {PowertoolLog}\n     */\n    formatAttributes(attributes) {\n        return {\n            cold_start: attributes.lambdaContext?.coldStart,\n            function_arn: attributes.lambdaContext?.invokedFunctionArn,\n            function_memory_size: attributes.lambdaContext?.memoryLimitInMB,\n            function_name: attributes.lambdaContext?.functionName,\n            function_request_id: attributes.lambdaContext?.awsRequestId,\n            level: attributes.logLevel,\n            message: attributes.message,\n            sampling_rate: attributes.sampleRateValue,\n            service: attributes.serviceName,\n            timestamp: this.formatTimestamp(attributes.timestamp),\n            xray_trace_id: attributes.xRayTraceId,\n        };\n    }\n}\nexports.PowertoolLogFormatter = PowertoolLogFormatter;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./LogFormatter\"), exports);\n__exportStar(require(\"./LogFormatterInterface\"), exports);\n__exportStar(require(\"./PowertoolLogFormatter\"), exports);\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogItem = void 0;\nconst lodash_merge_1 = __importDefault(require(\"lodash.merge\"));\nclass LogItem {\n    constructor(params) {\n        this.attributes = {};\n        // Add attributes in the log item in this order:\n        // - Base attributes supported by the Powertool by default\n        // - Persistent attributes provided by developer, not formatted\n        // - Ephemeral attributes provided as parameters for a single log item (done later)\n        this.addAttributes(params.baseAttributes);\n        this.addAttributes(params.persistentAttributes);\n    }\n    addAttributes(attributes) {\n        this.attributes = (0, lodash_merge_1.default)(this.attributes, attributes);\n        return this;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    prepareForPrint() {\n        this.setAttributes(this.removeEmptyKeys(this.getAttributes()));\n    }\n    removeEmptyKeys(attributes) {\n        const newAttributes = {};\n        for (const key in attributes) {\n            if (attributes[key] !== undefined &&\n                attributes[key] !== '' &&\n                attributes[key] !== null) {\n                newAttributes[key] = attributes[key];\n            }\n        }\n        return newAttributes;\n    }\n    setAttributes(attributes) {\n        this.attributes = attributes;\n    }\n}\nexports.LogItem = LogItem;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./LogItem\"), exports);\n__exportStar(require(\"./LogItemInterface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnvironmentVariablesService = void 0;\nconst commons_1 = require(\"@aws-lambda-powertools/commons\");\n/**\n * Class EnvironmentVariablesService\n *\n * This class is used to return environment variables that are available in the runtime of\n * the current Lambda invocation.\n * These variables can be a mix of runtime environment variables set by AWS and\n * variables that can be set by the developer additionally.\n *\n * @class\n * @extends {CommonEnvironmentVariablesService}\n * @implements {ConfigServiceInterface}\n * @see https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime\n * @see https://docs.powertools.aws.dev/lambda/typescript/latest/#environment-variables\n */\nclass EnvironmentVariablesService extends commons_1.EnvironmentVariablesService {\n    constructor() {\n        super(...arguments);\n        // Reserved environment variables\n        this.awsLogLevelVariable = 'AWS_LAMBDA_LOG_LEVEL';\n        this.awsRegionVariable = 'AWS_REGION';\n        this.currentEnvironmentVariable = 'ENVIRONMENT';\n        this.functionNameVariable = 'AWS_LAMBDA_FUNCTION_NAME';\n        this.functionVersionVariable = 'AWS_LAMBDA_FUNCTION_VERSION';\n        this.logEventVariable = 'POWERTOOLS_LOGGER_LOG_EVENT';\n        this.logLevelVariable = 'POWERTOOLS_LOG_LEVEL';\n        this.logLevelVariableLegacy = 'LOG_LEVEL';\n        this.memoryLimitInMBVariable = 'AWS_LAMBDA_FUNCTION_MEMORY_SIZE';\n        this.sampleRateValueVariable = 'POWERTOOLS_LOGGER_SAMPLE_RATE';\n    }\n    /**\n     * It returns the value of the `AWS_LAMBDA_LOG_LEVEL` environment variable.\n     *\n     * The `AWS_LAMBDA_LOG_LEVEL` environment variable is set by AWS Lambda when configuring\n     * the function's log level using the Advanced Logging Controls feature. This value always\n     * takes precedence over other means of configuring the log level.\n     *\n     * @note we need to map the `FATAL` log level to `CRITICAL`, see {@link https://docs.aws.amazon.com/lambda/latest/dg/configuration-logging.html#configuration-logging-log-levels AWS Lambda Log Levels}.\n     *\n     * @returns {string}\n     */\n    getAwsLogLevel() {\n        const awsLogLevelVariable = this.get(this.awsLogLevelVariable);\n        return awsLogLevelVariable === 'FATAL' ? 'CRITICAL' : awsLogLevelVariable;\n    }\n    /**\n     * It returns the value of the AWS_REGION environment variable.\n     *\n     * @returns {string}\n     */\n    getAwsRegion() {\n        return this.get(this.awsRegionVariable);\n    }\n    /**\n     * It returns the value of the ENVIRONMENT environment variable.\n     *\n     * @returns {string}\n     */\n    getCurrentEnvironment() {\n        return this.get(this.currentEnvironmentVariable);\n    }\n    /**\n     * It returns the value of the AWS_LAMBDA_FUNCTION_MEMORY_SIZE environment variable.\n     *\n     * @returns {string}\n     */\n    getFunctionMemory() {\n        const value = this.get(this.memoryLimitInMBVariable);\n        return Number(value);\n    }\n    /**\n     * It returns the value of the AWS_LAMBDA_FUNCTION_NAME environment variable.\n     *\n     * @returns {string}\n     */\n    getFunctionName() {\n        return this.get(this.functionNameVariable);\n    }\n    /**\n     * It returns the value of the AWS_LAMBDA_FUNCTION_VERSION environment variable.\n     *\n     * @returns {string}\n     */\n    getFunctionVersion() {\n        return this.get(this.functionVersionVariable);\n    }\n    /**\n     * It returns the value of the POWERTOOLS_LOGGER_LOG_EVENT environment variable.\n     *\n     * @returns {boolean}\n     */\n    getLogEvent() {\n        const value = this.get(this.logEventVariable);\n        return this.isValueTrue(value);\n    }\n    /**\n     * It returns the value of the `POWERTOOLS_LOG_LEVEL, or `LOG_LEVEL` (legacy) environment variables\n     * when the first one is not set.\n     *\n     * @note The `LOG_LEVEL` environment variable is considered legacy and will be removed in a future release.\n     * @note The `AWS_LAMBDA_LOG_LEVEL` environment variable always takes precedence over the ones above.\n     *\n     * @returns {string}\n     */\n    getLogLevel() {\n        const logLevelVariable = this.get(this.logLevelVariable);\n        const logLevelVariableAlias = this.get(this.logLevelVariableLegacy);\n        return logLevelVariable !== '' ? logLevelVariable : logLevelVariableAlias;\n    }\n    /**\n     * It returns the value of the POWERTOOLS_LOGGER_SAMPLE_RATE environment variable.\n     *\n     * @returns {string|undefined}\n     */\n    getSampleRateValue() {\n        const value = this.get(this.sampleRateValueVariable);\n        return value && value.length > 0 ? Number(value) : undefined;\n    }\n}\nexports.EnvironmentVariablesService = EnvironmentVariablesService;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ConfigServiceInterface\"), exports);\n__exportStar(require(\"./EnvironmentVariablesService\"), exports);\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst node_crypto_1 = require(\"node:crypto\");\nconst node_console_1 = require(\"node:console\");\nconst node_util_1 = require(\"node:util\");\nconst commons_1 = require(\"@aws-lambda-powertools/commons\");\nconst formatter_1 = require(\"./formatter\");\nconst log_1 = require(\"./log\");\nconst lodash_merge_1 = __importDefault(require(\"lodash.merge\"));\nconst config_1 = require(\"./config\");\n/**\n * ## Intro\n * The Logger utility provides an opinionated logger with output structured as JSON.\n *\n * ## Key features\n *  * Capture key fields from Lambda context, cold start and structures logging output as JSON\n *  * Log Lambda context when instructed (disabled by default)\n *  * Log sampling prints all logs for a percentage of invocations (disabled by default)\n *  * Append additional keys to structured log at any point in time\n *\n * ## Usage\n *\n * For more usage examples, see [our documentation](https://docs.powertools.aws.dev/lambda/typescript/latest/core/logger/).\n *\n * ### Basic usage\n *\n * @example\n * ```typescript\n * import { Logger } from '@aws-lambda-powertools/logger';\n *\n * // Logger parameters fetched from the environment variables:\n * const logger = new Logger();\n * ```\n *\n * ### Functions usage with middleware\n *\n * If you use function-based Lambda handlers you can use the [injectLambdaContext()](#injectLambdaContext)\n * middy middleware to automatically add context to your Lambda logs.\n *\n * @example\n * ```typescript\n * import { Logger, injectLambdaContext } from '@aws-lambda-powertools/logger';\n * import middy from '@middy/core';\n *\n * const logger = new Logger();\n *\n * const lambdaHandler = async (_event: unknown, _context: unknown) => {\n *     logger.info('This is an INFO log with some context');\n * };\n *\n * export const handler = middy(lambdaHandler).use(injectLambdaContext(logger));\n * ```\n *\n * ### Object oriented usage with decorators\n *\n * If instead you use TypeScript classes to wrap your Lambda handler you can use the [@logger.injectLambdaContext()](./_aws_lambda_powertools_logger.Logger.html#injectLambdaContext) decorator.\n *\n * @example\n * ```typescript\n * import { Logger } from '@aws-lambda-powertools/logger';\n * import { LambdaInterface } from '@aws-lambda-powertools/commons';\n *\n * const logger = new Logger();\n *\n * class Lambda implements LambdaInterface {\n *     // Decorate your handler class method\n *     \u2063@logger.injectLambdaContext()\n *     public async handler(_event: unknown, _context: unknown): Promise<void> {\n *         logger.info('This is an INFO log with some context');\n *     }\n * }\n *\n * const handlerClass = new Lambda();\n * export const handler = handlerClass.handler.bind(handlerClass);\n * ```\n *\n * ### Functions usage with manual instrumentation\n *\n * If you prefer to manually instrument your Lambda handler you can use the methods in the Logger class directly.\n *\n * @example\n * ```typescript\n * import { Logger } from '@aws-lambda-powertools/logger';\n *\n * const logger = new Logger();\n *\n * export const handler = async (_event, context) => {\n *     logger.addContext(context);\n *     logger.info('This is an INFO log with some context');\n * };\n * ```\n *\n * @class\n * @implements {ClassThatLogs}\n * @see https://docs.powertools.aws.dev/lambda/typescript/latest/core/logger/\n */\nclass Logger extends commons_1.Utility {\n    /**\n     * Log level used by the current instance of Logger.\n     *\n     * Returns the log level as a number. The higher the number, the less verbose the logs.\n     * To get the log level name, use the {@link getLevelName()} method.\n     */\n    get level() {\n        return this.logLevel;\n    }\n    /**\n     * It initializes the Logger class with an optional set of options (settings).\n     * *\n     * @param {ConstructorOptions} options\n     */\n    constructor(options = {}) {\n        super();\n        this.logEvent = false;\n        this.logIndentation = 0 /* LogJsonIndent.COMPACT */;\n        /**\n         * Log level used internally by the current instance of Logger.\n         */\n        this.logLevel = 12;\n        /**\n         * Log level thresholds used internally by the current instance of Logger.\n         *\n         * The levels are in ascending order from the most verbose to the least verbose (no logs).\n         */\n        this.logLevelThresholds = {\n            DEBUG: 8,\n            INFO: 12,\n            WARN: 16,\n            ERROR: 20,\n            CRITICAL: 24,\n            SILENT: 28,\n        };\n        this.logsSampled = false;\n        this.persistentLogAttributes = {};\n        this.powertoolLogData = {};\n        this.setOptions(options);\n    }\n    /**\n     * It adds the current Lambda function's invocation context data to the powertoolLogData property of the instance.\n     * This context data will be part of all printed log items.\n     *\n     * @param {Context} context\n     * @returns {void}\n     */\n    addContext(context) {\n        const lambdaContext = {\n            invokedFunctionArn: context.invokedFunctionArn,\n            coldStart: this.getColdStart(),\n            awsRequestId: context.awsRequestId,\n            memoryLimitInMB: Number(context.memoryLimitInMB),\n            functionName: context.functionName,\n            functionVersion: context.functionVersion,\n        };\n        this.addToPowertoolLogData({\n            lambdaContext,\n        });\n    }\n    /**\n     * It adds the given attributes (key-value pairs) to all log items generated by this Logger instance.\n     *\n     * @param {LogAttributes} attributes\n     * @returns {void}\n     */\n    addPersistentLogAttributes(attributes) {\n        (0, lodash_merge_1.default)(this.persistentLogAttributes, attributes);\n    }\n    /**\n     * Alias for addPersistentLogAttributes.\n     *\n     * @param {LogAttributes} attributes\n     * @returns {void}\n     */\n    appendKeys(attributes) {\n        this.addPersistentLogAttributes(attributes);\n    }\n    /**\n     * It creates a separate Logger instance, identical to the current one\n     * It's possible to overwrite the new instance options by passing them.\n     *\n     * @param {ConstructorOptions} options\n     * @returns {Logger}\n     */\n    createChild(options = {}) {\n        const parentsOptions = {\n            logLevel: this.getLevelName(),\n            customConfigService: this.getCustomConfigService(),\n            logFormatter: this.getLogFormatter(),\n        };\n        const parentsPowertoolsLogData = this.getPowertoolLogData();\n        const childLogger = this.createLogger((0, lodash_merge_1.default)(parentsOptions, parentsPowertoolsLogData, options));\n        const parentsPersistentLogAttributes = this.getPersistentLogAttributes();\n        childLogger.addPersistentLogAttributes(parentsPersistentLogAttributes);\n        if (parentsPowertoolsLogData.lambdaContext) {\n            childLogger.addContext(parentsPowertoolsLogData.lambdaContext);\n        }\n        return childLogger;\n    }\n    /**\n     * It prints a log item with level CRITICAL.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     */\n    critical(input, ...extraInput) {\n        this.processLogItem(24, input, extraInput);\n    }\n    /**\n     * It prints a log item with level DEBUG.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    debug(input, ...extraInput) {\n        this.processLogItem(8, input, extraInput);\n    }\n    /**\n     * It prints a log item with level ERROR.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    error(input, ...extraInput) {\n        this.processLogItem(20, input, extraInput);\n    }\n    /**\n     * Get the log level name of the current instance of Logger.\n     *\n     * It returns the log level name, i.e. `INFO`, `DEBUG`, etc.\n     * To get the log level as a number, use the {@link Logger.level} property.\n     *\n     * @returns {Uppercase<LogLevel>} The log level name.\n     */\n    getLevelName() {\n        return this.getLogLevelNameFromNumber(this.logLevel);\n    }\n    /**\n     * It returns a boolean value. True means that the Lambda invocation events\n     * are printed in the logs.\n     *\n     * @returns {boolean}\n     */\n    getLogEvent() {\n        return this.logEvent;\n    }\n    /**\n     * It returns a boolean value, if true all the logs will be printed.\n     *\n     * @returns {boolean}\n     */\n    getLogsSampled() {\n        return this.logsSampled;\n    }\n    /**\n     * It returns the persistent log attributes, which are the attributes\n     * that will be logged in all log items.\n     *\n     * @private\n     * @returns {LogAttributes}\n     */\n    getPersistentLogAttributes() {\n        return this.persistentLogAttributes;\n    }\n    /**\n     * It prints a log item with level INFO.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    info(input, ...extraInput) {\n        this.processLogItem(12, input, extraInput);\n    }\n    /**\n     * Method decorator that adds the current Lambda function context as extra\n     * information in all log items.\n     *\n     * The decorator can be used only when attached to a Lambda function handler which\n     * is written as method of a class, and should be declared just before the handler declaration.\n     *\n     * Note: Currently TypeScript only supports decorators on classes and methods. If you are using the\n     * function syntax, you should use the middleware instead.\n     *\n     * @example\n     * ```typescript\n     * import { Logger } from '@aws-lambda-powertools/logger';\n     * import { LambdaInterface } from '@aws-lambda-powertools/commons';\n     *\n     * const logger = new Logger();\n     *\n     * class Lambda implements LambdaInterface {\n     *     // Decorate your handler class method\n     *     \u2063@logger.injectLambdaContext()\n     *     public async handler(_event: unknown, _context: unknown): Promise<void> {\n     *         logger.info('This is an INFO log with some context');\n     *     }\n     * }\n     *\n     * const handlerClass = new Lambda();\n     * export const handler = handlerClass.handler.bind(handlerClass);\n     * ```\n     *\n     * @see https://www.typescriptlang.org/docs/handbook/decorators.html#method-decorators\n     * @returns {HandlerMethodDecorator}\n     */\n    injectLambdaContext(options) {\n        return (_target, _propertyKey, descriptor) => {\n            /**\n             * The descriptor.value is the method this decorator decorates, it cannot be undefined.\n             */\n            /* eslint-disable  @typescript-eslint/no-non-null-assertion */\n            const originalMethod = descriptor.value;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const loggerRef = this;\n            // Use a function() {} instead of an () => {} arrow function so that we can\n            // access `myClass` as `this` in a decorated `myClass.myMethod()`.\n            descriptor.value = async function (event, context, callback) {\n                let initialPersistentAttributes = {};\n                if (options && options.clearState === true) {\n                    initialPersistentAttributes = {\n                        ...loggerRef.getPersistentLogAttributes(),\n                    };\n                }\n                Logger.injectLambdaContextBefore(loggerRef, event, context, options);\n                let result;\n                try {\n                    result = await originalMethod.apply(this, [event, context, callback]);\n                }\n                catch (error) {\n                    throw error;\n                }\n                finally {\n                    Logger.injectLambdaContextAfterOrOnError(loggerRef, initialPersistentAttributes, options);\n                }\n                return result;\n            };\n        };\n    }\n    static injectLambdaContextAfterOrOnError(logger, initialPersistentAttributes, options) {\n        if (options && options.clearState === true) {\n            logger.setPersistentLogAttributes(initialPersistentAttributes);\n        }\n    }\n    static injectLambdaContextBefore(logger, event, context, options) {\n        logger.addContext(context);\n        let shouldLogEvent = undefined;\n        if (options && options.hasOwnProperty('logEvent')) {\n            shouldLogEvent = options.logEvent;\n        }\n        logger.logEventIfEnabled(event, shouldLogEvent);\n    }\n    /**\n     * Logs a Lambda invocation event, if it *should*.\n     *\n     ** @param {unknown} event\n     * @param {boolean} [overwriteValue]\n     * @returns {void}\n     */\n    logEventIfEnabled(event, overwriteValue) {\n        if (!this.shouldLogEvent(overwriteValue)) {\n            return;\n        }\n        this.info('Lambda invocation event', { event });\n    }\n    /**\n     * If the sample rate feature is enabled, the calculation that determines whether the logs\n     * will actually be printed or not for this invocation is done when the Logger class is\n     * initialized.\n     * This method will repeat that calculation (with possible different outcome).\n     *\n     * @returns {void}\n     */\n    refreshSampleRateCalculation() {\n        this.setLogsSampled();\n    }\n    /**\n     * Alias for removePersistentLogAttributes.\n     *\n     * @param {string[]} keys\n     * @returns {void}\n     */\n    removeKeys(keys) {\n        this.removePersistentLogAttributes(keys);\n    }\n    /**\n     * It removes attributes based on provided keys to all log items generated by this Logger instance.\n     *\n     * @param {string[]} keys\n     * @returns {void}\n     */\n    removePersistentLogAttributes(keys) {\n        keys.forEach((key) => {\n            if (this.persistentLogAttributes && key in this.persistentLogAttributes) {\n                delete this.persistentLogAttributes[key];\n            }\n        });\n    }\n    /**\n     * Set the log level for this Logger instance.\n     *\n     * If the log level is set using AWS Lambda Advanced Logging Controls, it sets it\n     * instead of the given log level to avoid data loss.\n     *\n     * @param logLevel The log level to set, i.e. `error`, `warn`, `info`, `debug`, etc.\n     */\n    setLogLevel(logLevel) {\n        if (this.awsLogLevelShortCircuit(logLevel))\n            return;\n        if (this.isValidLogLevel(logLevel)) {\n            this.logLevel = this.logLevelThresholds[logLevel];\n        }\n        else {\n            throw new Error(`Invalid log level: ${logLevel}`);\n        }\n    }\n    /**\n     * It sets the given attributes (key-value pairs) to all log items generated by this Logger instance.\n     * Note: this replaces the pre-existing value.\n     *\n     * @param {LogAttributes} attributes\n     * @returns {void}\n     */\n    setPersistentLogAttributes(attributes) {\n        this.persistentLogAttributes = attributes;\n    }\n    /**\n     * It sets the user-provided sample rate value.\n     *\n     * @param {number} [sampleRateValue]\n     * @returns {void}\n     */\n    setSampleRateValue(sampleRateValue) {\n        this.powertoolLogData.sampleRateValue =\n            sampleRateValue ||\n                this.getCustomConfigService()?.getSampleRateValue() ||\n                this.getEnvVarsService().getSampleRateValue();\n    }\n    /**\n     * It checks whether the current Lambda invocation event should be printed in the logs or not.\n     *\n     * @private\n     * @param {boolean} [overwriteValue]\n     * @returns {boolean}\n     */\n    shouldLogEvent(overwriteValue) {\n        if (typeof overwriteValue === 'boolean') {\n            return overwriteValue;\n        }\n        return this.getLogEvent();\n    }\n    /**\n     * It prints a log item with level WARN.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    warn(input, ...extraInput) {\n        this.processLogItem(16, input, extraInput);\n    }\n    /**\n     * Creates a new Logger instance.\n     *\n     * @param {ConstructorOptions} [options]\n     * @returns {Logger}\n     */\n    createLogger(options) {\n        return new Logger(options);\n    }\n    /**\n     * Decides whether the current log item should be printed or not.\n     *\n     * The decision is based on the log level and the sample rate value.\n     * A log item will be printed if:\n     * 1. The log level is greater than or equal to the Logger's log level.\n     * 2. The log level is less than the Logger's log level, but the\n     * current sampling value is set to `true`.\n     *\n     * @param {number} logLevel\n     * @returns {boolean}\n     * @protected\n     */\n    shouldPrint(logLevel) {\n        if (logLevel >= this.logLevel) {\n            return true;\n        }\n        return this.getLogsSampled();\n    }\n    /**\n     * It stores information that is printed in all log items.\n     *\n     * @param {Partial<PowertoolLogData>} attributesArray\n     * @private\n     * @returns {void}\n     */\n    addToPowertoolLogData(...attributesArray) {\n        attributesArray.forEach((attributes) => {\n            (0, lodash_merge_1.default)(this.powertoolLogData, attributes);\n        });\n    }\n    awsLogLevelShortCircuit(selectedLogLevel) {\n        const awsLogLevel = this.getEnvVarsService().getAwsLogLevel();\n        if (this.isValidLogLevel(awsLogLevel)) {\n            this.logLevel = this.logLevelThresholds[awsLogLevel];\n            if (this.isValidLogLevel(selectedLogLevel) &&\n                this.logLevel > this.logLevelThresholds[selectedLogLevel]) {\n                this.warn((0, node_util_1.format)(`Current log level (%s) does not match AWS Lambda Advanced Logging Controls minimum log level (%s). This can lead to data loss, consider adjusting them.`, selectedLogLevel, awsLogLevel));\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * It processes a particular log item so that it can be printed to stdout:\n     * - Merges ephemeral log attributes with persistent log attributes (printed for all logs) and additional info;\n     * - Formats all the log attributes;\n     *\n     * @private\n     * @param {number} logLevel\n     * @param {LogItemMessage} input\n     * @param {LogItemExtraInput} extraInput\n     * @returns {LogItem}\n     */\n    createAndPopulateLogItem(logLevel, input, extraInput) {\n        // TODO: this method's logic is hard to understand, there is an opportunity here to simplify this logic.\n        const unformattedBaseAttributes = (0, lodash_merge_1.default)({\n            logLevel: this.getLogLevelNameFromNumber(logLevel),\n            timestamp: new Date(),\n            message: typeof input === 'string' ? input : input.message,\n            xRayTraceId: this.envVarsService.getXrayTraceId(),\n        }, this.getPowertoolLogData());\n        const logItem = new log_1.LogItem({\n            baseAttributes: this.getLogFormatter().formatAttributes(unformattedBaseAttributes),\n            persistentAttributes: this.getPersistentLogAttributes(),\n        });\n        // Add ephemeral attributes\n        if (typeof input !== 'string') {\n            logItem.addAttributes(input);\n        }\n        extraInput.forEach((item) => {\n            const attributes = item instanceof Error\n                ? { error: item }\n                : typeof item === 'string'\n                    ? { extra: item }\n                    : item;\n            logItem.addAttributes(attributes);\n        });\n        return logItem;\n    }\n    /**\n     * It returns the custom config service, an abstraction used to fetch environment variables.\n     *\n     * @private\n     * @returns {ConfigServiceInterface | undefined}\n     */\n    getCustomConfigService() {\n        return this.customConfigService;\n    }\n    /**\n     * It returns the instance of a service that fetches environment variables.\n     *\n     * @private\n     * @returns {EnvironmentVariablesService}\n     */\n    getEnvVarsService() {\n        return this.envVarsService;\n    }\n    /**\n     * It returns the instance of a service that formats the structure of a\n     * log item's keys and values in the desired way.\n     *\n     * @private\n     * @returns {LogFormatterInterface}\n     */\n    getLogFormatter() {\n        return this.logFormatter;\n    }\n    /**\n     * Get the log level name from the log level number.\n     *\n     * For example, if the log level is 16, it will return 'WARN'.\n     *\n     * @param logLevel - The log level to get the name of\n     * @returns - The name of the log level\n     */\n    getLogLevelNameFromNumber(logLevel) {\n        const found = Object.entries(this.logLevelThresholds).find(([key, value]) => {\n            if (value === logLevel) {\n                return key;\n            }\n        });\n        return found[0];\n    }\n    /**\n     * It returns information that will be added in all log item by\n     * this Logger instance (different from user-provided persistent attributes).\n     *\n     * @private\n     * @returns {LogAttributes}\n     */\n    getPowertoolLogData() {\n        return this.powertoolLogData;\n    }\n    /**\n     * When the data added in the log item contains object references or BigInt values,\n     * `JSON.stringify()` can't handle them and instead throws errors:\n     * `TypeError: cyclic object value` or `TypeError: Do not know how to serialize a BigInt`.\n     * To mitigate these issues, this method will find and remove all cyclic references and convert BigInt values to strings.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#exceptions\n     * @private\n     */\n    getReplacer() {\n        const references = new WeakSet();\n        return (key, value) => {\n            let item = value;\n            if (item instanceof Error) {\n                item = this.getLogFormatter().formatError(item);\n            }\n            if (typeof item === 'bigint') {\n                return item.toString();\n            }\n            if (typeof item === 'object' && value !== null) {\n                if (references.has(item)) {\n                    return;\n                }\n                references.add(item);\n            }\n            return item;\n        };\n    }\n    /**\n     * It returns the numeric sample rate value.\n     *\n     * @private\n     * @returns {number}\n     */\n    getSampleRateValue() {\n        if (!this.powertoolLogData.sampleRateValue) {\n            this.setSampleRateValue();\n        }\n        return this.powertoolLogData.sampleRateValue;\n    }\n    /**\n     * It returns true and type guards the log level if a given log level is valid.\n     *\n     * @param {LogLevel} logLevel\n     * @private\n     * @returns {boolean}\n     */\n    isValidLogLevel(logLevel) {\n        return typeof logLevel === 'string' && logLevel in this.logLevelThresholds;\n    }\n    /**\n     * It prints a given log with given log level.\n     *\n     * @param {number} logLevel\n     * @param {LogItem} log\n     * @private\n     */\n    printLog(logLevel, log) {\n        log.prepareForPrint();\n        const consoleMethod = logLevel === 24\n            ? 'error'\n            : this.getLogLevelNameFromNumber(logLevel).toLowerCase();\n        this.console[consoleMethod](JSON.stringify(log.getAttributes(), this.getReplacer(), this.logIndentation));\n    }\n    /**\n     * It prints a given log with given log level.\n     *\n     * @param {number} logLevel\n     * @param {LogItemMessage} input\n     * @param {LogItemExtraInput} extraInput\n     * @private\n     */\n    processLogItem(logLevel, input, extraInput) {\n        if (!this.shouldPrint(logLevel)) {\n            return;\n        }\n        this.printLog(logLevel, this.createAndPopulateLogItem(logLevel, input, extraInput));\n    }\n    /**\n     * It initializes console property as an instance of the internal version of Console() class (PR #748)\n     * or as the global node console if the `POWERTOOLS_DEV' env variable is set and has truthy value.\n     *\n     * @private\n     * @returns {void}\n     */\n    setConsole() {\n        if (!this.getEnvVarsService().isDevMode()) {\n            this.console = new node_console_1.Console({\n                stdout: process.stdout,\n                stderr: process.stderr,\n            });\n        }\n        else {\n            this.console = console;\n        }\n    }\n    /**\n     * Sets the Logger's customer config service instance, which will be used\n     * to fetch environment variables.\n     *\n     * @private\n     * @param {ConfigServiceInterface} customConfigService\n     * @returns {void}\n     */\n    setCustomConfigService(customConfigService) {\n        this.customConfigService = customConfigService\n            ? customConfigService\n            : undefined;\n    }\n    /**\n     * Sets the Logger's custom config service instance, which will be used\n     * to fetch environment variables.\n     *\n     * @private\n     * @returns {void}\n     */\n    setEnvVarsService() {\n        this.envVarsService = new config_1.EnvironmentVariablesService();\n    }\n    /**\n     * Sets the initial Logger log level based on the following order:\n     * 1. If a log level is set using AWS Lambda Advanced Logging Controls, it sets it.\n     * 2. If a log level is passed to the constructor, it sets it.\n     * 3. If a log level is set via custom config service, it sets it.\n     * 4. If a log level is set via env variables, it sets it.\n     *\n     * If none of the above is true, the default log level applies (`INFO`).\n     *\n     * @private\n     * @param {LogLevel} [logLevel] - Log level passed to the constructor\n     */\n    setInitialLogLevel(logLevel) {\n        const constructorLogLevel = logLevel?.toUpperCase();\n        if (this.awsLogLevelShortCircuit(constructorLogLevel))\n            return;\n        if (this.isValidLogLevel(constructorLogLevel)) {\n            this.logLevel = this.logLevelThresholds[constructorLogLevel];\n            return;\n        }\n        const customConfigValue = this.getCustomConfigService()\n            ?.getLogLevel()\n            ?.toUpperCase();\n        if (this.isValidLogLevel(customConfigValue)) {\n            this.logLevel = this.logLevelThresholds[customConfigValue];\n            return;\n        }\n        const envVarsValue = this.getEnvVarsService()?.getLogLevel()?.toUpperCase();\n        if (this.isValidLogLevel(envVarsValue)) {\n            this.logLevel = this.logLevelThresholds[envVarsValue];\n            return;\n        }\n    }\n    /**\n     * If the log event feature is enabled via env variable, it sets a property that tracks whether\n     * the event passed to the Lambda function handler should be logged or not.\n     *\n     * @private\n     * @returns {void}\n     */\n    setLogEvent() {\n        if (this.getEnvVarsService().getLogEvent()) {\n            this.logEvent = true;\n        }\n    }\n    /**\n     * It sets the log formatter instance, in charge of giving a custom format\n     * to the structured logs\n     *\n     * @private\n     * @param {LogFormatterInterface} logFormatter\n     * @returns {void}\n     */\n    setLogFormatter(logFormatter) {\n        this.logFormatter = logFormatter || new formatter_1.PowertoolLogFormatter();\n    }\n    /**\n     * If the `POWERTOOLS_DEV' env variable is set,\n     * it adds JSON indentation for pretty printing logs.\n     *\n     * @private\n     * @returns {void}\n     */\n    setLogIndentation() {\n        if (this.getEnvVarsService().isDevMode()) {\n            this.logIndentation = 4 /* LogJsonIndent.PRETTY */;\n        }\n    }\n    /**\n     * If the sample rate feature is enabled, it sets a property that tracks whether this Lambda function invocation\n     * will print logs or not.\n     *\n     * @private\n     * @returns {void}\n     */\n    setLogsSampled() {\n        const sampleRateValue = this.getSampleRateValue();\n        this.logsSampled =\n            sampleRateValue !== undefined &&\n                (sampleRateValue === 1 || (0, node_crypto_1.randomInt)(0, 100) / 100 <= sampleRateValue);\n    }\n    /**\n     * It configures the Logger instance settings that will affect the Logger's behaviour\n     * and the content of all logs.\n     *\n     * @private\n     * @param {ConstructorOptions} options\n     * @returns {Logger}\n     */\n    setOptions(options) {\n        const { logLevel, serviceName, sampleRateValue, logFormatter, customConfigService, persistentLogAttributes, environment, } = options;\n        this.setEnvVarsService();\n        // order is important, it uses EnvVarsService()\n        this.setConsole();\n        this.setCustomConfigService(customConfigService);\n        this.setInitialLogLevel(logLevel);\n        this.setSampleRateValue(sampleRateValue);\n        this.setLogsSampled();\n        this.setLogFormatter(logFormatter);\n        this.setPowertoolLogData(serviceName, environment);\n        this.setLogEvent();\n        this.setLogIndentation();\n        this.addPersistentLogAttributes(persistentLogAttributes);\n        return this;\n    }\n    /**\n     * It adds important data to the Logger instance that will affect the content of all logs.\n     *\n     * @param {string} serviceName\n     * @param {Environment} environment\n     * @param {LogAttributes} persistentLogAttributes\n     * @private\n     * @returns {void}\n     */\n    setPowertoolLogData(serviceName, environment, persistentLogAttributes = {}) {\n        this.addToPowertoolLogData({\n            awsRegion: this.getEnvVarsService().getAwsRegion(),\n            environment: environment ||\n                this.getCustomConfigService()?.getCurrentEnvironment() ||\n                this.getEnvVarsService().getCurrentEnvironment(),\n            sampleRateValue: this.getSampleRateValue(),\n            serviceName: serviceName ||\n                this.getCustomConfigService()?.getServiceName() ||\n                this.getEnvVarsService().getServiceName() ||\n                this.getDefaultServiceName(),\n        }, persistentLogAttributes);\n    }\n}\nexports.Logger = Logger;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IDEMPOTENCY_KEY = exports.LOGGER_KEY = exports.METRICS_KEY = exports.TRACER_KEY = exports.PREFIX = void 0;\n/**\n * These constants are used to store cleanup functions in Middy's `request.internal` object.\n * They are used by the `cleanupPowertools` function to check if any cleanup function\n * is present and execute it.\n */\nconst PREFIX = 'powertools-for-aws';\nexports.PREFIX = PREFIX;\nconst TRACER_KEY = `${PREFIX}.tracer`;\nexports.TRACER_KEY = TRACER_KEY;\nconst METRICS_KEY = `${PREFIX}.metrics`;\nexports.METRICS_KEY = METRICS_KEY;\nconst LOGGER_KEY = `${PREFIX}.logger`;\nexports.LOGGER_KEY = LOGGER_KEY;\nconst IDEMPOTENCY_KEY = `${PREFIX}.idempotency`;\nexports.IDEMPOTENCY_KEY = IDEMPOTENCY_KEY;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cleanupMiddlewares = void 0;\nconst constants_1 = require(\"./constants\");\n// Typeguard to assert that an object is of Function type\nconst isFunction = (obj) => {\n    return typeof obj === 'function';\n};\n/**\n * Function used to cleanup Powertools for AWS resources when a Middy\n * middleware [returns early](https://middy.js.org/docs/intro/early-interrupt)\n * and terminates the middleware chain.\n *\n * When a middleware returns early, all the middleware lifecycle functions\n * that come after it are not executed. This means that if a middleware\n * was relying on certain logic to be run during the `after` or `onError`\n * lifecycle functions, that logic will not be executed.\n *\n * This is the case for the middlewares that are part of Powertools for AWS\n * which rely on these lifecycle functions to perform cleanup operations\n * like closing the current segment in the tracer or flushing any stored\n * metrics.\n *\n * When authoring a middleware that might return early, you can use this\n * function to cleanup Powertools resources. This function will check if\n * any cleanup function is present in the `request.internal` object and\n * execute it.\n *\n * @example\n * ```typescript\n * import middy from '@middy/core';\n * import { cleanupMiddlewares } from '@aws-lambda-powertools/commons/lib/middleware';\n *\n * // Example middleware that returns early\n * const myCustomMiddleware = (): middy.MiddlewareObj => {\n *   const before = async (request: middy.Request): Promise<undefined | string> => {\n *     // If the request is a GET, return early (as an example)\n *     if (request.event.httpMethod === 'GET') {\n *       // Cleanup Powertools resources\n *       await cleanupMiddlewares(request);\n *       // Then return early\n *       return 'GET method not supported';\n *     }\n *   };\n *\n *   return {\n *     before,\n *   };\n * };\n * ```\n *\n * @param request - The Middy request object\n * @param options - An optional object that can be used to pass options to the function\n */\nconst cleanupMiddlewares = async (request) => {\n    const cleanupFunctionNames = [\n        constants_1.TRACER_KEY,\n        constants_1.METRICS_KEY,\n        constants_1.LOGGER_KEY,\n        constants_1.IDEMPOTENCY_KEY,\n    ];\n    for (const functionName of cleanupFunctionNames) {\n        if (Object(request.internal).hasOwnProperty(functionName)) {\n            const functionReference = request.internal[functionName];\n            if (isFunction(functionReference)) {\n                await functionReference(request);\n            }\n        }\n    }\n};\nexports.cleanupMiddlewares = cleanupMiddlewares;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./cleanupMiddlewares\"), exports);\n__exportStar(require(\"./constants\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.injectLambdaContext = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst middleware_1 = require(\"@aws-lambda-powertools/commons/lib/middleware\");\n/**\n * A middy middleware that helps emitting CloudWatch EMF metrics in your logs.\n *\n * Using this middleware on your handler function will automatically add context information to logs, as well as optionally log the event and clear attributes set during the invocation.\n *\n * @example\n * ```typescript\n * import { Logger, injectLambdaContext } from '@aws-lambda-powertools/logger';\n * import middy from '@middy/core';\n *\n *\n * const logger = new Logger();\n *\n * const lambdaHandler = async (_event: any, _context: any) => {\n *     logger.info('This is an INFO log with some context');\n * };\n *\n * export const handler = middy(lambdaHandler).use(injectLambdaContext(logger));\n * ```\n *\n * @param target - The Logger instance(s) to use for logging\n * @param options - (_optional_) Options for the middleware\n * @returns - The middy middleware object\n */\nconst injectLambdaContext = (target, options) => {\n    const loggers = target instanceof Array ? target : [target];\n    const persistentAttributes = [];\n    const isClearState = options && options.clearState === true;\n    /**\n     * Set the cleanup function to be called in case other middlewares return early.\n     *\n     * @param request - The request object\n     */\n    const setCleanupFunction = (request) => {\n        request.internal = {\n            ...request.internal,\n            [middleware_1.LOGGER_KEY]: injectLambdaContextAfterOrOnError,\n        };\n    };\n    const injectLambdaContextBefore = async (request) => {\n        loggers.forEach((logger, index) => {\n            if (isClearState) {\n                persistentAttributes[index] = {\n                    ...logger.getPersistentLogAttributes(),\n                };\n                setCleanupFunction(request);\n            }\n            Logger_1.Logger.injectLambdaContextBefore(logger, request.event, request.context, options);\n        });\n    };\n    const injectLambdaContextAfterOrOnError = async () => {\n        if (isClearState) {\n            loggers.forEach((logger, index) => {\n                Logger_1.Logger.injectLambdaContextAfterOrOnError(logger, persistentAttributes[index], options);\n            });\n        }\n    };\n    return {\n        before: injectLambdaContextBefore,\n        after: injectLambdaContextAfterOrOnError,\n        onError: injectLambdaContextAfterOrOnError,\n    };\n};\nexports.injectLambdaContext = injectLambdaContext;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./middy\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./Logger\"), exports);\n__exportStar(require(\"./middleware\"), exports);\n__exportStar(require(\"./formatter\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnvironmentVariablesService = void 0;\nconst commons_1 = require(\"@aws-lambda-powertools/commons\");\nclass EnvironmentVariablesService extends commons_1.EnvironmentVariablesService {\n    constructor() {\n        super(...arguments);\n        this.namespaceVariable = 'POWERTOOLS_METRICS_NAMESPACE';\n    }\n    getNamespace() {\n        return this.get(this.namespaceVariable);\n    }\n}\nexports.EnvironmentVariablesService = EnvironmentVariablesService;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ConfigServiceInterface\"), exports);\n__exportStar(require(\"./EnvironmentVariablesService\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_DIMENSION_COUNT = exports.MAX_METRIC_VALUES_SIZE = exports.MAX_METRICS_SIZE = exports.DEFAULT_NAMESPACE = exports.COLD_START_METRIC = void 0;\nconst COLD_START_METRIC = 'ColdStart';\nexports.COLD_START_METRIC = COLD_START_METRIC;\nconst DEFAULT_NAMESPACE = 'default_namespace';\nexports.DEFAULT_NAMESPACE = DEFAULT_NAMESPACE;\nconst MAX_METRICS_SIZE = 100;\nexports.MAX_METRICS_SIZE = MAX_METRICS_SIZE;\nconst MAX_METRIC_VALUES_SIZE = 100;\nexports.MAX_METRIC_VALUES_SIZE = MAX_METRIC_VALUES_SIZE;\nconst MAX_DIMENSION_COUNT = 29;\nexports.MAX_DIMENSION_COUNT = MAX_DIMENSION_COUNT;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetricUnits = void 0;\nvar MetricUnits;\n(function (MetricUnits) {\n    MetricUnits[\"Seconds\"] = \"Seconds\";\n    MetricUnits[\"Microseconds\"] = \"Microseconds\";\n    MetricUnits[\"Milliseconds\"] = \"Milliseconds\";\n    MetricUnits[\"Bytes\"] = \"Bytes\";\n    MetricUnits[\"Kilobytes\"] = \"Kilobytes\";\n    MetricUnits[\"Megabytes\"] = \"Megabytes\";\n    MetricUnits[\"Gigabytes\"] = \"Gigabytes\";\n    MetricUnits[\"Terabytes\"] = \"Terabytes\";\n    MetricUnits[\"Bits\"] = \"Bits\";\n    MetricUnits[\"Kilobits\"] = \"Kilobits\";\n    MetricUnits[\"Megabits\"] = \"Megabits\";\n    MetricUnits[\"Gigabits\"] = \"Gigabits\";\n    MetricUnits[\"Terabits\"] = \"Terabits\";\n    MetricUnits[\"Percent\"] = \"Percent\";\n    MetricUnits[\"Count\"] = \"Count\";\n    MetricUnits[\"BytesPerSecond\"] = \"Bytes/Second\";\n    MetricUnits[\"KilobytesPerSecond\"] = \"Kilobytes/Second\";\n    MetricUnits[\"MegabytesPerSecond\"] = \"Megabytes/Second\";\n    MetricUnits[\"GigabytesPerSecond\"] = \"Gigabytes/Second\";\n    MetricUnits[\"TerabytesPerSecond\"] = \"Terabytes/Second\";\n    MetricUnits[\"BitsPerSecond\"] = \"Bits/Second\";\n    MetricUnits[\"KilobitsPerSecond\"] = \"Kilobits/Second\";\n    MetricUnits[\"MegabitsPerSecond\"] = \"Megabits/Second\";\n    MetricUnits[\"GigabitsPerSecond\"] = \"Gigabits/Second\";\n    MetricUnits[\"TerabitsPerSecond\"] = \"Terabits/Second\";\n    MetricUnits[\"CountPerSecond\"] = \"Count/Second\";\n})(MetricUnits || (exports.MetricUnits = MetricUnits = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetricResolution = void 0;\nconst MetricResolution = {\n    Standard: 60,\n    High: 1,\n};\nexports.MetricResolution = MetricResolution;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Metrics\"), exports);\n__exportStar(require(\"./MetricUnit\"), exports);\n__exportStar(require(\"./MetricResolution\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MetricResolution = exports.MetricUnits = exports.Metrics = void 0;\nconst node_console_1 = require(\"node:console\");\nconst commons_1 = require(\"@aws-lambda-powertools/commons\");\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\nObject.defineProperty(exports, \"MetricUnits\", { enumerable: true, get: function () { return types_1.MetricUnits; } });\nObject.defineProperty(exports, \"MetricResolution\", { enumerable: true, get: function () { return types_1.MetricResolution; } });\n/**\n * ## Intro\n * Metrics creates custom metrics asynchronously by logging metrics to standard output following Amazon CloudWatch Embedded Metric Format (EMF).\n *\n * These metrics can be visualized through Amazon CloudWatch Console.\n *\n * ## Key features\n *   * Aggregate up to 100 metrics using a single CloudWatch EMF object (large JSON blob)\n *   * Validate against common metric definitions mistakes (metric unit, values, max dimensions, max metrics, etc)\n *   * Metrics are created asynchronously by CloudWatch service, no custom stacks needed\n *   * Context manager to create a one off metric with a different dimension\n *\n * ## Usage\n *\n * ### Functions usage with middleware\n *\n * Using this middleware on your handler function will automatically flush metrics after the function returns or throws an error.\n * Additionally, you can configure the middleware to easily:\n * * ensure that at least one metric is emitted before you flush them\n * * capture a `ColdStart` a metric\n * * set default dimensions for all your metrics\n *\n * @example\n * ```typescript\n * import { Metrics, logMetrics } from '@aws-lambda-powertools/metrics';\n * import middy from '@middy/core';\n *\n * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n *\n * const lambdaHandler = async (_event: unknown, _context: unknown) => {\n *   ...\n * };\n *\n * export const handler = middy(lambdaHandler).use(logMetrics(metrics));\n * ```\n *\n * ### Object oriented way with decorator\n *\n * If you are used to TypeScript Class usage to encapsulate your Lambda handler you can leverage the [@metrics.logMetrics()](./_aws_lambda_powertools_metrics.Metrics.html#logMetrics) decorator to automatically:\n *   * capture a `ColdStart` metric\n *   * flush buffered metrics\n *   * throw on empty metrics\n *\n * @example\n *\n * ```typescript\n * import { Metrics, MetricUnits } from '@aws-lambda-powertools/metrics';\n * import { LambdaInterface } from '@aws-lambda-powertools/commons';\n *\n * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n *\n * class Lambda implements LambdaInterface {\n *   // Decorate your handler with the logMetrics decorator\n *   \u2063@metrics.logMetrics({ captureColdStartMetric: true, throwOnEmptyMetrics: true })\n *   public handler(_event: unknown, _context: unknown): Promise<void> {\n *     // ...\n *     metrics.addMetric('test-metric', MetricUnits.Count, 10);\n *     // ...\n *   }\n * }\n *\n * const handlerClass = new Lambda();\n * export const handler = handlerClass.handler.bind(handlerClass);\n * ```\n *\n * ### Standard function\n *\n * If you are used to classic JavaScript functions, you can leverage the different methods provided to create and publish metrics.\n *\n * @example\n *\n * ```typescript\n * import { Metrics, MetricUnits } from '@aws-lambda-powertools/metrics';\n *\n * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n *\n * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n *   metrics.captureColdStartMetric();\n *   metrics.addMetric('test-metric', MetricUnits.Count, 10);\n *   metrics.publishStoredMetrics();\n * };\n * ```\n */\nclass Metrics extends commons_1.Utility {\n    constructor(options = {}) {\n        super();\n        this.defaultDimensions = {};\n        this.dimensions = {};\n        this.isSingleMetric = false;\n        this.metadata = {};\n        this.shouldThrowOnEmptyMetrics = false;\n        this.storedMetrics = {};\n        this.dimensions = {};\n        this.setOptions(options);\n    }\n    /**\n     * Add a dimension to the metrics.\n     *\n     * A dimension is a key-value pair that is used to group metrics.\n     *\n     * @see https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension for more details.\n     * @param name\n     * @param value\n     */\n    addDimension(name, value) {\n        if (constants_1.MAX_DIMENSION_COUNT <= this.getCurrentDimensionsCount()) {\n            throw new RangeError(`The number of metric dimensions must be lower than ${constants_1.MAX_DIMENSION_COUNT}`);\n        }\n        this.dimensions[name] = value;\n    }\n    /**\n     * Add multiple dimensions to the metrics.\n     *\n     * A dimension is a key-value pair that is used to group metrics.\n     *\n     * @param dimensions A key-value pair of dimensions\n     */\n    addDimensions(dimensions) {\n        const newDimensions = { ...this.dimensions };\n        Object.keys(dimensions).forEach((dimensionName) => {\n            newDimensions[dimensionName] = dimensions[dimensionName];\n        });\n        if (Object.keys(newDimensions).length > constants_1.MAX_DIMENSION_COUNT) {\n            throw new RangeError(`Unable to add ${Object.keys(dimensions).length} dimensions: the number of metric dimensions must be lower than ${constants_1.MAX_DIMENSION_COUNT}`);\n        }\n        this.dimensions = newDimensions;\n    }\n    /**\n     * A high-cardinality data part of your Metrics log.\n     *\n     * This is useful when you want to search highly contextual information along with your metrics in your logs.\n     *\n     * @param key The key of the metadata\n     * @param value The value of the metadata\n     */\n    addMetadata(key, value) {\n        this.metadata[key] = value;\n    }\n    /**\n     * Add a metric to the metrics buffer.\n     *\n     * By default, metrics are buffered and flushed at the end of the Lambda invocation\n     * or when calling {@link Metrics.publishStoredMetrics}.\n     *\n     * You can add a metric by specifying the metric name, unit, and value. For convenience,\n     * we provide a set of constants for the most common units in {@link MetricUnits}.\n     *\n     * @example\n     * ```typescript\n     * import { Metrics, MetricUnits } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * metrics.addMetric('successfulBooking', MetricUnits.Count, 1);\n     * ```\n     *\n     * Optionally, you can specify the metric resolution, which can be either `High` or `Standard`.\n     * By default, metrics are published with a resolution of `Standard`, click [here](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Resolution_definition)\n     * to learn more about metric resolutions.\n     *\n     * @example\n     * ```typescript\n     * import { Metrics, MetricUnits, MetricResolution } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * metrics.addMetric('successfulBooking', MetricUnits.Count, 1, MetricResolution.High);\n     * ```\n     *\n     * @param name - The metric name\n     * @param unit - The metric unit\n     * @param value - The metric value\n     * @param resolution - The metric resolution\n     */\n    addMetric(name, unit, value, resolution = types_1.MetricResolution.Standard) {\n        this.storeMetric(name, unit, value, resolution);\n        if (this.isSingleMetric)\n            this.publishStoredMetrics();\n    }\n    /**\n     * Create a singleMetric to capture cold start.\n     *\n     * If it's a cold start invocation, this feature will:\n     *   * Create a separate EMF blob that contains a single metric named ColdStart\n     *   * Add function_name and service dimensions\n     *\n     * This has the advantage of keeping cold start metric separate from your application metrics, where you might have unrelated dimensions,\n     * as well as avoiding potential data loss from metrics not being published for other reasons.\n     *\n     * @example\n     * ```typescript\n     * import { Metrics } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n     *     metrics.captureColdStartMetric();\n     * };\n     * ```\n     */\n    captureColdStartMetric() {\n        if (!this.isColdStart())\n            return;\n        const singleMetric = this.singleMetric();\n        if (this.defaultDimensions.service) {\n            singleMetric.setDefaultDimensions({\n                service: this.defaultDimensions.service,\n            });\n        }\n        if (this.functionName != null) {\n            singleMetric.addDimension('function_name', this.functionName);\n        }\n        singleMetric.addMetric(constants_1.COLD_START_METRIC, types_1.MetricUnits.Count, 1);\n    }\n    /**\n     * Clear all default dimensions.\n     */\n    clearDefaultDimensions() {\n        this.defaultDimensions = {};\n    }\n    /**\n     * Clear all dimensions.\n     */\n    clearDimensions() {\n        this.dimensions = {};\n    }\n    /**\n     * Clear all metadata.\n     */\n    clearMetadata() {\n        this.metadata = {};\n    }\n    /**\n     * Clear all the metrics stored in the buffer.\n     */\n    clearMetrics() {\n        this.storedMetrics = {};\n    }\n    /**\n     * A decorator automating coldstart capture, throw on empty metrics and publishing metrics on handler exit.\n     *\n     * @example\n     *\n     * ```typescript\n     * import { Metrics } from '@aws-lambda-powertools/metrics';\n     * import { LambdaInterface } from '@aws-lambda-powertools/commons';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * class Lambda implements LambdaInterface {\n     *\n     *   @metrics.logMetrics({ captureColdStartMetric: true })\n     *   public handler(_event: unknown, __context: unknown): Promise<void> {\n     *    // ...\n     *   }\n     * }\n     *\n     * const handlerClass = new Lambda();\n     * export const handler = handlerClass.handler.bind(handlerClass);\n     * ```\n     *\n     * @decorator Class\n     */\n    logMetrics(options = {}) {\n        const { throwOnEmptyMetrics, defaultDimensions, captureColdStartMetric } = options;\n        if (throwOnEmptyMetrics) {\n            this.throwOnEmptyMetrics();\n        }\n        if (defaultDimensions !== undefined) {\n            this.setDefaultDimensions(defaultDimensions);\n        }\n        return (_target, _propertyKey, descriptor) => {\n            /**\n             * The descriptor.value is the method this decorator decorates, it cannot be undefined.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const originalMethod = descriptor.value;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const metricsRef = this;\n            // Use a function() {} instead of an () => {} arrow function so that we can\n            // access `myClass` as `this` in a decorated `myClass.myMethod()`.\n            descriptor.value = async function (event, context, callback) {\n                metricsRef.functionName = context.functionName;\n                if (captureColdStartMetric)\n                    metricsRef.captureColdStartMetric();\n                let result;\n                try {\n                    result = await originalMethod.apply(this, [event, context, callback]);\n                }\n                catch (error) {\n                    throw error;\n                }\n                finally {\n                    metricsRef.publishStoredMetrics();\n                }\n                return result;\n            };\n            return descriptor;\n        };\n    }\n    /**\n     * Synchronous function to actually publish your metrics. (Not needed if using logMetrics decorator).\n     * It will create a new EMF blob and log it to standard output to be then ingested by Cloudwatch logs and processed automatically for metrics creation.\n     *\n     * @example\n     *\n     * ```typescript\n     * import { Metrics, MetricUnits } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' }); // Sets metric namespace, and service as a metric dimension\n     *\n     * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n     *   metrics.addMetric('test-metric', MetricUnits.Count, 10);\n     *   metrics.publishStoredMetrics();\n     * };\n     * ```\n     */\n    publishStoredMetrics() {\n        if (!this.shouldThrowOnEmptyMetrics &&\n            Object.keys(this.storedMetrics).length === 0) {\n            console.warn('No application metrics to publish. The cold-start metric may be published if enabled. ' +\n                'If application metrics should never be empty, consider using `throwOnEmptyMetrics`');\n        }\n        const target = this.serializeMetrics();\n        this.console.log(JSON.stringify(target));\n        this.clearMetrics();\n        this.clearDimensions();\n        this.clearMetadata();\n    }\n    /**\n     * Function to create a new metric object compliant with the EMF (Embedded Metric Format) schema which\n     * includes the metric name, unit, and optionally storage resolution.\n     *\n     * The function will create a new EMF blob and log it to standard output to be then ingested by Cloudwatch\n     * logs and processed automatically for metrics creation.\n     *\n     * @returns metrics as JSON object compliant EMF Schema Specification\n     * @see https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format_Specification.html for more details\n     */\n    serializeMetrics() {\n        // Storage resolution is included only for High resolution metrics\n        const metricDefinitions = Object.values(this.storedMetrics).map((metricDefinition) => ({\n            Name: metricDefinition.name,\n            Unit: metricDefinition.unit,\n            ...(metricDefinition.resolution === types_1.MetricResolution.High\n                ? { StorageResolution: metricDefinition.resolution }\n                : {}),\n        }));\n        if (metricDefinitions.length === 0 && this.shouldThrowOnEmptyMetrics) {\n            throw new RangeError('The number of metrics recorded must be higher than zero');\n        }\n        if (!this.namespace)\n            console.warn('Namespace should be defined, default used');\n        // We reduce the stored metrics to a single object with the metric\n        // name as the key and the value as the value.\n        const metricValues = Object.values(this.storedMetrics).reduce((result, { name, value }) => {\n            result[name] = value;\n            return result;\n        }, {});\n        const dimensionNames = [\n            ...new Set([\n                ...Object.keys(this.defaultDimensions),\n                ...Object.keys(this.dimensions),\n            ]),\n        ];\n        return {\n            _aws: {\n                Timestamp: new Date().getTime(),\n                CloudWatchMetrics: [\n                    {\n                        Namespace: this.namespace || constants_1.DEFAULT_NAMESPACE,\n                        Dimensions: [dimensionNames],\n                        Metrics: metricDefinitions,\n                    },\n                ],\n            },\n            ...this.defaultDimensions,\n            ...this.dimensions,\n            ...metricValues,\n            ...this.metadata,\n        };\n    }\n    /**\n     * Sets default dimensions that will be added to all metrics.\n     *\n     * @param dimensions The default dimensions to be added to all metrics.\n     */\n    setDefaultDimensions(dimensions) {\n        const targetDimensions = {\n            ...this.defaultDimensions,\n            ...dimensions,\n        };\n        if (constants_1.MAX_DIMENSION_COUNT <= Object.keys(targetDimensions).length) {\n            throw new Error('Max dimension count hit');\n        }\n        this.defaultDimensions = targetDimensions;\n    }\n    /**\n     * Sets the function name to be added to the metric.\n     *\n     * @param value The function name to be added to the metric.\n     */\n    setFunctionName(value) {\n        this.functionName = value;\n    }\n    /**\n     * CloudWatch EMF uses the same dimensions across all your metrics. Use singleMetric if you have a metric that should have different dimensions.\n     *\n     * You don't need to call publishStoredMetrics() after calling addMetric for a singleMetrics, they will be flushed directly.\n     *\n     * @example\n     *\n     * ```typescript\n     * const singleMetric = metrics.singleMetric();\n     * singleMetric.addDimension('InnerDimension', 'true');\n     * singleMetric.addMetric('single-metric', MetricUnits.Percent, 50);\n     * ```\n     *\n     * @returns the Metrics\n     */\n    singleMetric() {\n        return new Metrics({\n            namespace: this.namespace,\n            serviceName: this.dimensions.service,\n            defaultDimensions: this.defaultDimensions,\n            singleMetric: true,\n        });\n    }\n    /**\n     * Throw an Error if the metrics buffer is empty.\n     *\n     * @example\n     *\n     * ```typescript\n     * import { Metrics } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName:'orders' });\n     *\n     * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n     *     metrics.throwOnEmptyMetrics();\n     *     metrics.publishStoredMetrics(); // will throw since no metrics added.\n     * };\n     * ```\n     */\n    throwOnEmptyMetrics() {\n        this.shouldThrowOnEmptyMetrics = true;\n    }\n    /**\n     * Gets the current number of dimensions stored.\n     *\n     * @returns the number of dimensions currently stored\n     */\n    getCurrentDimensionsCount() {\n        return (Object.keys(this.dimensions).length +\n            Object.keys(this.defaultDimensions).length);\n    }\n    /**\n     * Gets the custom config service if it exists.\n     *\n     * @returns the custom config service if it exists, undefined otherwise\n     */\n    getCustomConfigService() {\n        return this.customConfigService;\n    }\n    /**\n     * Gets the environment variables service.\n     *\n     * @returns the environment variables service\n     */\n    getEnvVarsService() {\n        return this.envVarsService;\n    }\n    /**\n     * Checks if a metric is new or not.\n     *\n     * A metric is considered new if there is no metric with the same name already stored.\n     *\n     * When a metric is not new, we also check if the unit is consistent with the stored metric with\n     * the same name. If the units are inconsistent, we throw an error as this is likely a bug or typo.\n     * This can happen if a metric is added without using the `MetricUnit` helper in JavaScript codebases.\n     *\n     * @param name The name of the metric\n     * @param unit The unit of the metric\n     * @returns true if the metric is new, false if another metric with the same name already exists\n     */\n    isNewMetric(name, unit) {\n        if (this.storedMetrics[name]) {\n            if (this.storedMetrics[name].unit !== unit) {\n                const currentUnit = this.storedMetrics[name].unit;\n                throw new Error(`Metric \"${name}\" has already been added with unit \"${currentUnit}\", but we received unit \"${unit}\". Did you mean to use metric unit \"${currentUnit}\"?`);\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * It initializes console property as an instance of the internal version of Console() class (PR #748)\n     * or as the global node console if the `POWERTOOLS_DEV' env variable is set and has truthy value.\n     *\n     * @private\n     * @returns {void}\n     */\n    setConsole() {\n        if (!this.getEnvVarsService().isDevMode()) {\n            this.console = new node_console_1.Console({\n                stdout: process.stdout,\n                stderr: process.stderr,\n            });\n        }\n        else {\n            this.console = console;\n        }\n    }\n    /**\n     * Sets the custom config service to be used.\n     *\n     * @param customConfigService The custom config service to be used\n     */\n    setCustomConfigService(customConfigService) {\n        this.customConfigService = customConfigService\n            ? customConfigService\n            : undefined;\n    }\n    /**\n     * Sets the environment variables service to be used.\n     */\n    setEnvVarsService() {\n        this.envVarsService = new config_1.EnvironmentVariablesService();\n    }\n    /**\n     * Sets the namespace to be used.\n     *\n     * @param namespace The namespace to be used\n     */\n    setNamespace(namespace) {\n        this.namespace = (namespace ||\n            this.getCustomConfigService()?.getNamespace() ||\n            this.getEnvVarsService().getNamespace());\n    }\n    /**\n     * Sets the options to be used by the Metrics instance.\n     *\n     * This method is used during the initialization of the Metrics instance.\n     *\n     * @param options The options to be used\n     * @returns the Metrics instance\n     */\n    setOptions(options) {\n        const { customConfigService, namespace, serviceName, singleMetric, defaultDimensions, } = options;\n        this.setEnvVarsService();\n        this.setConsole();\n        this.setCustomConfigService(customConfigService);\n        this.setNamespace(namespace);\n        this.setService(serviceName);\n        this.setDefaultDimensions(defaultDimensions);\n        this.isSingleMetric = singleMetric || false;\n        return this;\n    }\n    /**\n     * Sets the service to be used.\n     *\n     * @param service The service to be used\n     */\n    setService(service) {\n        const targetService = (service ||\n            this.getCustomConfigService()?.getServiceName() ||\n            this.getEnvVarsService().getServiceName()) ||\n            this.getDefaultServiceName();\n        if (targetService.length > 0) {\n            this.setDefaultDimensions({ service: targetService });\n        }\n    }\n    /**\n     * Stores a metric in the buffer.\n     *\n     * If the buffer is full, or the metric reaches the maximum number of values,\n     * the buffer is published to stdout.\n     *\n     * @param name The name of the metric to store\n     * @param unit The unit of the metric to store\n     * @param value The value of the metric to store\n     * @param resolution The resolution of the metric to store\n     */\n    storeMetric(name, unit, value, resolution) {\n        if (Object.keys(this.storedMetrics).length >= constants_1.MAX_METRICS_SIZE) {\n            this.publishStoredMetrics();\n        }\n        if (this.isNewMetric(name, unit)) {\n            this.storedMetrics[name] = {\n                unit,\n                value,\n                name,\n                resolution,\n            };\n        }\n        else {\n            const storedMetric = this.storedMetrics[name];\n            if (!Array.isArray(storedMetric.value)) {\n                storedMetric.value = [storedMetric.value];\n            }\n            storedMetric.value.push(value);\n            if (storedMetric.value.length === constants_1.MAX_METRIC_VALUES_SIZE) {\n                this.publishStoredMetrics();\n            }\n        }\n    }\n}\nexports.Metrics = Metrics;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logMetrics = void 0;\nconst middleware_1 = require(\"@aws-lambda-powertools/commons/lib/middleware\");\n/**\n * A middy middleware automating capture of metadata and annotations on segments or subsegments for a Lambda Handler.\n *\n * Using this middleware on your handler function will automatically flush metrics after the function returns or throws an error.\n * Additionally, you can configure the middleware to easily:\n * * ensure that at least one metric is emitted before you flush them\n * * capture a `ColdStart` a metric\n * * set default dimensions for all your metrics\n *\n * @example\n * ```typescript\n * import { Metrics, logMetrics } from '@aws-lambda-powertools/metrics';\n * import middy from '@middy/core';\n *\n * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n *\n * const lambdaHandler = async (_event: any, _context: any) => {\n *   ...\n * };\n *\n * export const handler = middy(lambdaHandler).use(logMetrics(metrics));\n * ```\n *\n * @param target - The Metrics instance to use for emitting metrics\n * @param options - (_optional_) Options for the middleware\n * @returns middleware - The middy middleware object\n */\nconst logMetrics = (target, options = {}) => {\n    const metricsInstances = target instanceof Array ? target : [target];\n    /**\n     * Set the cleanup function to be called in case other middlewares return early.\n     *\n     * @param request - The request object\n     */\n    const setCleanupFunction = (request) => {\n        request.internal = {\n            ...request.internal,\n            [middleware_1.METRICS_KEY]: logMetricsAfterOrError,\n        };\n    };\n    const logMetricsBefore = async (request) => {\n        metricsInstances.forEach((metrics) => {\n            metrics.setFunctionName(request.context.functionName);\n            const { throwOnEmptyMetrics, defaultDimensions, captureColdStartMetric } = options;\n            if (throwOnEmptyMetrics) {\n                metrics.throwOnEmptyMetrics();\n            }\n            if (defaultDimensions !== undefined) {\n                metrics.setDefaultDimensions(defaultDimensions);\n            }\n            if (captureColdStartMetric) {\n                metrics.captureColdStartMetric();\n            }\n        });\n        setCleanupFunction(request);\n    };\n    const logMetricsAfterOrError = async () => {\n        metricsInstances.forEach((metrics) => {\n            metrics.publishStoredMetrics();\n        });\n    };\n    return {\n        before: logMetricsBefore,\n        after: logMetricsAfterOrError,\n        onError: logMetricsAfterOrError,\n    };\n};\nexports.logMetrics = logMetrics;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./middy\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Metrics\"), exports);\n__exportStar(require(\"./MetricsInterface\"), exports);\n__exportStar(require(\"./middleware\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTracer = void 0;\nconst _1 = require(\".\");\n/**\n * Create a new tracer instance with the given options.\n *\n * @deprecated - This function will be removed in the next major release. Use the Tracer class directly instead.\n */\nconst createTracer = (options = {}) => new _1.Tracer(options);\nexports.createTracer = createTracer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnvironmentVariablesService = void 0;\nconst commons_1 = require(\"@aws-lambda-powertools/commons\");\nclass EnvironmentVariablesService extends commons_1.EnvironmentVariablesService {\n    constructor() {\n        super(...arguments);\n        // Environment variables\n        this.awsExecutionEnv = 'AWS_EXECUTION_ENV';\n        this.samLocalVariable = 'AWS_SAM_LOCAL';\n        this.tracerCaptureErrorVariable = 'POWERTOOLS_TRACER_CAPTURE_ERROR';\n        this.tracerCaptureHTTPsRequestsVariable = 'POWERTOOLS_TRACER_CAPTURE_HTTPS_REQUESTS';\n        this.tracerCaptureResponseVariable = 'POWERTOOLS_TRACER_CAPTURE_RESPONSE';\n        this.tracingEnabledVariable = 'POWERTOOLS_TRACE_ENABLED';\n    }\n    getAwsExecutionEnv() {\n        return this.get(this.awsExecutionEnv);\n    }\n    getCaptureHTTPsRequests() {\n        return this.get(this.tracerCaptureHTTPsRequestsVariable);\n    }\n    getSamLocal() {\n        return this.get(this.samLocalVariable);\n    }\n    getTracingCaptureError() {\n        return this.get(this.tracerCaptureErrorVariable);\n    }\n    getTracingCaptureResponse() {\n        return this.get(this.tracerCaptureResponseVariable);\n    }\n    getTracingEnabled() {\n        return this.get(this.tracingEnabledVariable);\n    }\n}\nexports.EnvironmentVariablesService = EnvironmentVariablesService;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ConfigServiceInterface\"), exports);\n__exportStar(require(\"./EnvironmentVariablesService\"), exports);\n", "'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n", "'use strict';\n\nvar shimmer = require('shimmer');\nvar wrap    = shimmer.wrap;\nvar unwrap  = shimmer.unwrap;\n\n// Default to complaining loudly when things don't go according to plan.\n// dunderscores are boring\nvar SYMBOL = 'wrap@before';\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty(obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name);\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  });\n}\n\nfunction _process(self, listeners) {\n  var l = listeners.length;\n  for (var p = 0; p < l; p++) {\n    var listener = listeners[p];\n    // set up the listener so that onEmit can do whatever it needs\n    var before = self[SYMBOL];\n    if (typeof before === 'function') {\n      before(listener);\n    }\n    else if (Array.isArray(before)) {\n      var length = before.length;\n      for (var i = 0; i < length; i++) before[i](listener);\n    }\n  }\n}\n\nfunction _listeners(self, event) {\n  var listeners;\n  listeners = self._events && self._events[event];\n  if (!Array.isArray(listeners)) {\n    if (listeners) {\n      listeners = [listeners];\n    }\n    else {\n      listeners = [];\n    }\n  }\n\n  return listeners;\n}\n\nfunction _findAndProcess(self, event, before) {\n  var after = _listeners(self, event);\n  var unprocessed = after.filter(function(fn) { return before.indexOf(fn) === -1; });\n  if (unprocessed.length > 0) _process(self, unprocessed);\n}\n\nfunction _wrap(unwrapped, visit) {\n  if (!unwrapped) return;\n\n  var wrapped = unwrapped;\n  if (typeof unwrapped === 'function') {\n    wrapped = visit(unwrapped);\n  }\n  else if (Array.isArray(unwrapped)) {\n    wrapped = [];\n    for (var i = 0; i < unwrapped.length; i++) {\n      wrapped[i] = visit(unwrapped[i]);\n    }\n  }\n  return wrapped;\n}\n\nmodule.exports = function wrapEmitter(emitter, onAddListener, onEmit) {\n  if (!emitter || !emitter.on || !emitter.addListener ||\n      !emitter.removeListener || !emitter.emit) {\n    throw new Error(\"can only wrap real EEs\");\n  }\n\n  if (!onAddListener) throw new Error(\"must have function to run on listener addition\");\n  if (!onEmit) throw new Error(\"must have function to wrap listeners when emitting\");\n\n  /* Attach a context to a listener, and make sure that this hook stays\n   * attached to the emitter forevermore.\n   */\n  function adding(on) {\n    return function added(event, listener) {\n      var existing = _listeners(this, event).slice();\n\n      try {\n        var returned = on.call(this, event, listener);\n        _findAndProcess(this, event, existing);\n        return returned;\n      }\n      finally {\n        // old-style streaming overwrites .on and .addListener, so rewrap\n        if (!this.on.__wrapped) wrap(this, 'on', adding);\n        if (!this.addListener.__wrapped) wrap(this, 'addListener', adding);\n      }\n    };\n  }\n\n  function emitting(emit) {\n    return function emitted(event) {\n      if (!this._events || !this._events[event]) return emit.apply(this, arguments);\n\n      var unwrapped = this._events[event];\n\n      /* Ensure that if removeListener gets called, it's working with the\n       * unwrapped listeners.\n       */\n      function remover(removeListener) {\n        return function removed() {\n          this._events[event] = unwrapped;\n          try {\n            return removeListener.apply(this, arguments);\n          }\n          finally {\n            unwrapped = this._events[event];\n            this._events[event] = _wrap(unwrapped, onEmit);\n          }\n        };\n      }\n      wrap(this, 'removeListener', remover);\n\n      try {\n        /* At emit time, ensure that whatever else is going on, removeListener will\n         * still work while at the same time running whatever hooks are necessary to\n         * make sure the listener is run in the correct context.\n         */\n        this._events[event] = _wrap(unwrapped, onEmit);\n        return emit.apply(this, arguments);\n      }\n      finally {\n        /* Ensure that regardless of what happens when preparing and running the\n         * listeners, the status quo ante is restored before continuing.\n         */\n        unwrap(this, 'removeListener');\n        this._events[event] = unwrapped;\n      }\n    };\n  }\n\n  // support multiple onAddListeners\n  if (!emitter[SYMBOL]) {\n    defineProperty(emitter, SYMBOL, onAddListener);\n  }\n  else if (typeof emitter[SYMBOL] === 'function') {\n    defineProperty(emitter, SYMBOL, [emitter[SYMBOL], onAddListener]);\n  }\n  else if (Array.isArray(emitter[SYMBOL])) {\n    emitter[SYMBOL].push(onAddListener);\n  }\n\n  // only wrap the core functions once\n  if (!emitter.__wrapped) {\n    wrap(emitter, 'addListener', adding);\n    wrap(emitter, 'on',          adding);\n    wrap(emitter, 'emit',        emitting);\n\n    defineProperty(emitter, '__unwrap', function () {\n      unwrap(emitter, 'addListener');\n      unwrap(emitter, 'on');\n      unwrap(emitter, 'emit');\n      delete emitter[SYMBOL];\n      delete emitter.__wrapped;\n    });\n    defineProperty(emitter, '__wrapped', true);\n  }\n};\n", "/* eslint-disable max-len */\n'use strict';\n\nconst util = require('util');\nconst assert = require('assert');\nconst wrapEmitter = require('emitter-listener');\nconst async_hooks = require('async_hooks');\n\nconst CONTEXTS_SYMBOL = 'cls@contexts';\nconst ERROR_SYMBOL = 'error@context';\n\nconst DEBUG_CLS_HOOKED = process.env.DEBUG_CLS_HOOKED;\n\nlet currentUid = -1;\n\nmodule.exports = {\n  getNamespace: getNamespace,\n  createNamespace: createNamespace,\n  destroyNamespace: destroyNamespace,\n  reset: reset,\n  ERROR_SYMBOL: ERROR_SYMBOL\n};\n\nfunction Namespace(name) {\n  this.name = name;\n  // changed in 2.7: no default context\n  this.active = null;\n  this._set = [];\n  this.id = null;\n  this._contexts = new Map();\n  this._indent = 0;\n}\n\nNamespace.prototype.set = function set(key, value) {\n  if (!this.active) {\n    throw new Error('No context available. ns.run() or ns.bind() must be called first.');\n  }\n\n  this.active[key] = value;\n\n  if (DEBUG_CLS_HOOKED) {\n    const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n    debug2(indentStr + 'CONTEXT-SET KEY:' + key + '=' + value + ' in ns:' + this.name + ' currentUid:' + currentUid + ' active:' + util.inspect(this.active, {showHidden:true, depth:2, colors:true}));\n  }\n\n  return value;\n};\n\nNamespace.prototype.get = function get(key) {\n  if (!this.active) {\n    if (DEBUG_CLS_HOOKED) {\n      const asyncHooksCurrentId = async_hooks.currentId();\n      const triggerId = async_hooks.triggerAsyncId();\n      const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n      //debug2(indentStr + 'CONTEXT-GETTING KEY NO ACTIVE NS:' + key + '=undefined' + ' (' + this.name + ') currentUid:' + currentUid + ' active:' + util.inspect(this.active, {showHidden:true, depth:2, colors:true}));\n      debug2(`${indentStr}CONTEXT-GETTING KEY NO ACTIVE NS: (${this.name}) ${key}=undefined currentUid:${currentUid} asyncHooksCurrentId:${asyncHooksCurrentId} triggerId:${triggerId} len:${this._set.length}`);\n    }\n    return undefined;\n  }\n  if (DEBUG_CLS_HOOKED) {\n    const asyncHooksCurrentId = async_hooks.executionAsyncId();\n    const triggerId = async_hooks.triggerAsyncId();\n    const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n    debug2(indentStr + 'CONTEXT-GETTING KEY:' + key + '=' + this.active[key] + ' (' + this.name + ') currentUid:' + currentUid + ' active:' + util.inspect(this.active, {showHidden:true, depth:2, colors:true}));\n    debug2(`${indentStr}CONTEXT-GETTING KEY: (${this.name}) ${key}=${this.active[key]} currentUid:${currentUid} asyncHooksCurrentId:${asyncHooksCurrentId} triggerId:${triggerId} len:${this._set.length} active:${util.inspect(this.active)}`);\n  }\n  return this.active[key];\n};\n\nNamespace.prototype.createContext = function createContext() {\n  // Prototype inherit existing context if created a new child context within existing context.\n  let context = Object.create(this.active ? this.active : Object.prototype);\n  context._ns_name = this.name;\n  context.id = currentUid;\n\n  if (DEBUG_CLS_HOOKED) {\n    const asyncHooksCurrentId = async_hooks.executionAsyncId();\n    const triggerId = async_hooks.triggerAsyncId();\n    const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n    debug2(`${indentStr}CONTEXT-CREATED Context: (${this.name}) currentUid:${currentUid} asyncHooksCurrentId:${asyncHooksCurrentId} triggerId:${triggerId} len:${this._set.length} context:${util.inspect(context, {showHidden:true, depth:2, colors:true})}`);\n  }\n\n  return context;\n};\n\nNamespace.prototype.run = function run(fn) {\n  let context = this.createContext();\n  this.enter(context);\n\n  try {\n    if (DEBUG_CLS_HOOKED) {\n      const triggerId = async_hooks.triggerAsyncId();\n      const asyncHooksCurrentId = async_hooks.executionAsyncId();\n      const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n      debug2(`${indentStr}CONTEXT-RUN BEGIN: (${this.name}) currentUid:${currentUid} triggerId:${triggerId} asyncHooksCurrentId:${asyncHooksCurrentId} len:${this._set.length} context:${util.inspect(context)}`);\n    }\n    fn(context);\n    return context;\n  } catch (exception) {\n    if (exception) {\n      exception[ERROR_SYMBOL] = context;\n    }\n    throw exception;\n  } finally {\n    if (DEBUG_CLS_HOOKED) {\n      const triggerId = async_hooks.triggerAsyncId();\n      const asyncHooksCurrentId = async_hooks.executionAsyncId();\n      const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n      debug2(`${indentStr}CONTEXT-RUN END: (${this.name}) currentUid:${currentUid} triggerId:${triggerId} asyncHooksCurrentId:${asyncHooksCurrentId} len:${this._set.length} ${util.inspect(context)}`);\n    }\n    this.exit(context);\n  }\n};\n\nNamespace.prototype.runAndReturn = function runAndReturn(fn) {\n  let value;\n  this.run(function (context) {\n    value = fn(context);\n  });\n  return value;\n};\n\n/**\n * Uses global Promise and assumes Promise is cls friendly or wrapped already.\n * @param {function} fn\n * @returns {*}\n */\nNamespace.prototype.runPromise = function runPromise(fn) {\n  let context = this.createContext();\n  this.enter(context);\n\n  let promise = fn(context);\n  if (!promise || !promise.then || !promise.catch) {\n    throw new Error('fn must return a promise.');\n  }\n\n  if (DEBUG_CLS_HOOKED) {\n    debug2('CONTEXT-runPromise BEFORE: (' + this.name + ') currentUid:' + currentUid + ' len:' + this._set.length + ' ' + util.inspect(context));\n  }\n\n  return promise\n    .then(result => {\n      if (DEBUG_CLS_HOOKED) {\n        debug2('CONTEXT-runPromise AFTER then: (' + this.name + ') currentUid:' + currentUid + ' len:' + this._set.length + ' ' + util.inspect(context));\n      }\n      this.exit(context);\n      return result;\n    })\n    .catch(err => {\n      err[ERROR_SYMBOL] = context;\n      if (DEBUG_CLS_HOOKED) {\n        debug2('CONTEXT-runPromise AFTER catch: (' + this.name + ') currentUid:' + currentUid + ' len:' + this._set.length + ' ' + util.inspect(context));\n      }\n      this.exit(context);\n      throw err;\n    });\n};\n\nNamespace.prototype.bind = function bindFactory(fn, context) {\n  if (!context) {\n    if (!this.active) {\n      context = this.createContext();\n    } else {\n      context = this.active;\n    }\n  }\n\n  let self = this;\n  return function clsBind() {\n    self.enter(context);\n    try {\n      return fn.apply(this, arguments);\n    } catch (exception) {\n      if (exception) {\n        exception[ERROR_SYMBOL] = context;\n      }\n      throw exception;\n    } finally {\n      self.exit(context);\n    }\n  };\n};\n\nNamespace.prototype.enter = function enter(context) {\n  assert.ok(context, 'context must be provided for entering');\n  if (DEBUG_CLS_HOOKED) {\n    const asyncHooksCurrentId = async_hooks.executionAsyncId();\n    const triggerId = async_hooks.triggerAsyncId();\n    const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n    debug2(`${indentStr}CONTEXT-ENTER: (${this.name}) currentUid:${currentUid} triggerId:${triggerId} asyncHooksCurrentId:${asyncHooksCurrentId} len:${this._set.length} ${util.inspect(context)}`);\n  }\n\n  this._set.push(this.active);\n  this.active = context;\n};\n\nNamespace.prototype.exit = function exit(context) {\n  assert.ok(context, 'context must be provided for exiting');\n  if (DEBUG_CLS_HOOKED) {\n    const asyncHooksCurrentId = async_hooks.executionAsyncId();\n    const triggerId = async_hooks.triggerAsyncId();\n    const indentStr = ' '.repeat(this._indent < 0 ? 0 : this._indent);\n    debug2(`${indentStr}CONTEXT-EXIT: (${this.name}) currentUid:${currentUid} triggerId:${triggerId} asyncHooksCurrentId:${asyncHooksCurrentId} len:${this._set.length} ${util.inspect(context)}`);\n  }\n\n  // Fast path for most exits that are at the top of the stack\n  if (this.active === context) {\n    assert.ok(this._set.length, 'can\\'t remove top context');\n    this.active = this._set.pop();\n    return;\n  }\n\n  // Fast search in the stack using lastIndexOf\n  let index = this._set.lastIndexOf(context);\n\n  if (index < 0) {\n    if (DEBUG_CLS_HOOKED) {\n      debug2('??ERROR?? context exiting but not entered - ignoring: ' + util.inspect(context));\n    }\n    assert.ok(index >= 0, 'context not currently entered; can\\'t exit. \\n' + util.inspect(this) + '\\n' + util.inspect(context));\n  } else {\n    assert.ok(index, 'can\\'t remove top context');\n    this._set.splice(index, 1);\n  }\n};\n\nNamespace.prototype.bindEmitter = function bindEmitter(emitter) {\n  assert.ok(emitter.on && emitter.addListener && emitter.emit, 'can only bind real EEs');\n\n  let namespace = this;\n  let thisSymbol = 'context@' + this.name;\n\n  // Capture the context active at the time the emitter is bound.\n  function attach(listener) {\n    if (!listener) {\n      return;\n    }\n    if (!listener[CONTEXTS_SYMBOL]) {\n      listener[CONTEXTS_SYMBOL] = Object.create(null);\n    }\n\n    listener[CONTEXTS_SYMBOL][thisSymbol] = {\n      namespace: namespace,\n      context: namespace.active\n    };\n  }\n\n  // At emit time, bind the listener within the correct context.\n  function bind(unwrapped) {\n    if (!(unwrapped && unwrapped[CONTEXTS_SYMBOL])) {\n      return unwrapped;\n    }\n\n    let wrapped = unwrapped;\n    let unwrappedContexts = unwrapped[CONTEXTS_SYMBOL];\n    Object.keys(unwrappedContexts).forEach(function (name) {\n      let thunk = unwrappedContexts[name];\n      wrapped = thunk.namespace.bind(wrapped, thunk.context);\n    });\n    return wrapped;\n  }\n\n  wrapEmitter(emitter, attach, bind);\n};\n\n/**\n * If an error comes out of a namespace, it will have a context attached to it.\n * This function knows how to find it.\n *\n * @param {Error} exception Possibly annotated error.\n */\nNamespace.prototype.fromException = function fromException(exception) {\n  return exception[ERROR_SYMBOL];\n};\n\nfunction getNamespace(name) {\n  return process.namespaces[name];\n}\n\nfunction createNamespace(name) {\n  assert.ok(name, 'namespace must be given a name.');\n\n  if (DEBUG_CLS_HOOKED) {\n    debug2(`NS-CREATING NAMESPACE (${name})`);\n  }\n  let namespace = new Namespace(name);\n  namespace.id = currentUid;\n\n  const hook = async_hooks.createHook({\n    init(asyncId, type, triggerId, resource) {\n      currentUid = async_hooks.executionAsyncId();\n\n      //CHAIN Parent's Context onto child if none exists. This is needed to pass net-events.spec\n      // let initContext = namespace.active;\n      // if(!initContext && triggerId) {\n      //   let parentContext = namespace._contexts.get(triggerId);\n      //   if (parentContext) {\n      //     namespace.active = parentContext;\n      //     namespace._contexts.set(currentUid, parentContext);\n      //     if (DEBUG_CLS_HOOKED) {\n      //       const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n      //       debug2(`${indentStr}INIT [${type}] (${name}) WITH PARENT CONTEXT asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, true)} resource:${resource}`);\n      //     }\n      //   } else if (DEBUG_CLS_HOOKED) {\n      //       const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n      //       debug2(`${indentStr}INIT [${type}] (${name}) MISSING CONTEXT asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, true)} resource:${resource}`);\n      //     }\n      // }else {\n      //   namespace._contexts.set(currentUid, namespace.active);\n      //   if (DEBUG_CLS_HOOKED) {\n      //     const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n      //     debug2(`${indentStr}INIT [${type}] (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, true)} resource:${resource}`);\n      //   }\n      // }\n      if(namespace.active) {\n        namespace._contexts.set(asyncId, namespace.active);\n\n        if (DEBUG_CLS_HOOKED) {\n          const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n          debug2(`${indentStr}INIT [${type}] (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, {showHidden:true, depth:2, colors:true})} resource:${resource}`);\n        }\n      }else if(currentUid === 0){\n        // CurrentId will be 0 when triggered from C++. Promise events\n        // https://github.com/nodejs/node/blob/master/doc/api/async_hooks.md#triggerid\n        const triggerId = async_hooks.triggerAsyncId();\n        const triggerIdContext = namespace._contexts.get(triggerId);\n        if (triggerIdContext) {\n          namespace._contexts.set(asyncId, triggerIdContext);\n          if (DEBUG_CLS_HOOKED) {\n            const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n            debug2(`${indentStr}INIT USING CONTEXT FROM TRIGGERID [${type}] (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, { showHidden: true, depth: 2, colors: true })} resource:${resource}`);\n          }\n        } else if (DEBUG_CLS_HOOKED) {\n          const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n          debug2(`${indentStr}INIT MISSING CONTEXT [${type}] (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, { showHidden: true, depth: 2, colors: true })} resource:${resource}`);\n        }\n      }\n\n\n      if(DEBUG_CLS_HOOKED && type === 'PROMISE'){\n        debug2(util.inspect(resource, {showHidden: true}));\n        const parentId = resource.parentId;\n        const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n        debug2(`${indentStr}INIT RESOURCE-PROMISE [${type}] (${name}) parentId:${parentId} asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, {showHidden:true, depth:2, colors:true})} resource:${resource}`);\n      }\n\n    },\n    before(asyncId) {\n      currentUid = async_hooks.executionAsyncId();\n      let context;\n\n      /*\n      if(currentUid === 0){\n        // CurrentId will be 0 when triggered from C++. Promise events\n        // https://github.com/nodejs/node/blob/master/doc/api/async_hooks.md#triggerid\n        //const triggerId = async_hooks.triggerAsyncId();\n        context = namespace._contexts.get(asyncId); // || namespace._contexts.get(triggerId);\n      }else{\n        context = namespace._contexts.get(currentUid);\n      }\n      */\n\n      //HACK to work with promises until they are fixed in node > 8.1.1\n      context = namespace._contexts.get(asyncId) || namespace._contexts.get(currentUid);\n\n      if (context) {\n        if (DEBUG_CLS_HOOKED) {\n          const triggerId = async_hooks.triggerAsyncId();\n          const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n          debug2(`${indentStr}BEFORE (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, {showHidden:true, depth:2, colors:true})} context:${util.inspect(context)}`);\n          namespace._indent += 2;\n        }\n\n        namespace.enter(context);\n\n      } else if (DEBUG_CLS_HOOKED) {\n        const triggerId = async_hooks.triggerAsyncId();\n        const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n        debug2(`${indentStr}BEFORE MISSING CONTEXT (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, {showHidden:true, depth:2, colors:true})} namespace._contexts:${util.inspect(namespace._contexts, {showHidden:true, depth:2, colors:true})}`);\n        namespace._indent += 2;\n      }\n    },\n    after(asyncId) {\n      currentUid = async_hooks.executionAsyncId();\n      let context; // = namespace._contexts.get(currentUid);\n      /*\n      if(currentUid === 0){\n        // CurrentId will be 0 when triggered from C++. Promise events\n        // https://github.com/nodejs/node/blob/master/doc/api/async_hooks.md#triggerid\n        //const triggerId = async_hooks.triggerAsyncId();\n        context = namespace._contexts.get(asyncId); // || namespace._contexts.get(triggerId);\n      }else{\n        context = namespace._contexts.get(currentUid);\n      }\n      */\n      //HACK to work with promises until they are fixed in node > 8.1.1\n      context = namespace._contexts.get(asyncId) || namespace._contexts.get(currentUid);\n\n      if (context) {\n        if (DEBUG_CLS_HOOKED) {\n          const triggerId = async_hooks.triggerAsyncId();\n          namespace._indent -= 2;\n          const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n          debug2(`${indentStr}AFTER (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, {showHidden:true, depth:2, colors:true})} context:${util.inspect(context)}`);\n        }\n\n        namespace.exit(context);\n\n      } else if (DEBUG_CLS_HOOKED) {\n        const triggerId = async_hooks.triggerAsyncId();\n        namespace._indent -= 2;\n        const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n        debug2(`${indentStr}AFTER MISSING CONTEXT (${name}) asyncId:${asyncId} currentUid:${currentUid} triggerId:${triggerId} active:${util.inspect(namespace.active, {showHidden:true, depth:2, colors:true})} context:${util.inspect(context)}`);\n      }\n    },\n    destroy(asyncId) {\n      currentUid = async_hooks.executionAsyncId();\n      if (DEBUG_CLS_HOOKED) {\n        const triggerId = async_hooks.triggerAsyncId();\n        const indentStr = ' '.repeat(namespace._indent < 0 ? 0 : namespace._indent);\n        debug2(`${indentStr}DESTROY (${name}) currentUid:${currentUid} asyncId:${asyncId} triggerId:${triggerId} active:${util.inspect(namespace.active, {showHidden:true, depth:2, colors:true})} context:${util.inspect(namespace._contexts.get(currentUid))}`);\n      }\n\n      namespace._contexts.delete(asyncId);\n    }\n  });\n\n  hook.enable();\n\n  process.namespaces[name] = namespace;\n  return namespace;\n}\n\nfunction destroyNamespace(name) {\n  let namespace = getNamespace(name);\n\n  assert.ok(namespace, 'can\\'t delete nonexistent namespace! \"' + name + '\"');\n  assert.ok(namespace.id, 'don\\'t assign to process.namespaces directly! ' + util.inspect(namespace));\n\n  process.namespaces[name] = null;\n}\n\nfunction reset() {\n  // must unregister async listeners\n  if (process.namespaces) {\n    Object.keys(process.namespaces).forEach(function (name) {\n      destroyNamespace(name);\n    });\n  }\n  process.namespaces = Object.create(null);\n}\n\nprocess.namespaces = {};\n\n//const fs = require('fs');\nfunction debug2(...args) {\n  if (DEBUG_CLS_HOOKED) {\n    //fs.writeSync(1, `${util.format(...args)}\\n`);\n    process._rawDebug(`${util.format(...args)}`);\n  }\n}\n\n/*function getFunctionName(fn) {\n  if (!fn) {\n    return fn;\n  }\n  if (typeof fn === 'function') {\n    if (fn.name) {\n      return fn.name;\n    }\n    return (fn.toString().trim().match(/^function\\s*([^\\s(]+)/) || [])[1];\n  } else if (fn.constructor && fn.constructor.name) {\n    return fn.constructor.name;\n  }\n}*/\n\n\n", "\"use strict\";\nvar validLogLevels = ['debug', 'info', 'warn', 'error', 'silent'];\nvar defaultLogLevel = validLogLevels.indexOf('error');\nvar logLevel = calculateLogLevel(process.env.AWS_XRAY_DEBUG_MODE ? 'debug' : process.env.AWS_XRAY_LOG_LEVEL);\nvar logger = {\n    error: createLoggerForLevel('error'),\n    info: createLoggerForLevel('info'),\n    warn: createLoggerForLevel('warn'),\n    debug: createLoggerForLevel('debug'),\n};\nfunction createLoggerForLevel(level) {\n    var loggerLevel = validLogLevels.indexOf(level);\n    var consoleMethod = console[level] || console.log || (() => { });\n    if (loggerLevel >= logLevel) {\n        return (message, meta) => {\n            if (message || meta) {\n                consoleMethod(formatLogMessage(level, message, meta));\n            }\n        };\n    }\n    else {\n        return () => { };\n    }\n}\nfunction calculateLogLevel(level) {\n    if (level) {\n        var normalisedLevel = level.toLowerCase();\n        var index = validLogLevels.indexOf(normalisedLevel);\n        return index >= 0 ? index : defaultLogLevel;\n    }\n    // Silently ignore invalid log levels, default to default level\n    return defaultLogLevel;\n}\nfunction createTimestamp(date) {\n    var tzo = -date.getTimezoneOffset(), // Negate to make this tzo = local - UTC\n    dif = tzo >= 0 ? '+' : '-', pad = function (num) {\n        var norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    };\n    return new Date(date.getTime() + (tzo * 60 * 1000)).toISOString()\n        .replace(/T/, ' ')\n        .replace(/Z/, ' ') +\n        dif + pad(tzo / 60) +\n        ':' + pad(tzo % 60);\n}\nfunction isLambdaFunction() {\n    return process.env.LAMBDA_TASK_ROOT !== undefined;\n}\nfunction formatLogMessage(level, message, meta) {\n    var messageParts = [];\n    if (!isLambdaFunction()) {\n        messageParts.push(createTimestamp(new Date()));\n        messageParts.push(`[${level.toUpperCase()}]`);\n    }\n    if (message) {\n        messageParts.push(message);\n    }\n    var logString = messageParts.join(' ');\n    var metaDataString = formatMetaData(meta);\n    return [logString, metaDataString].filter(str => str.length > 0).join('\\n  ');\n}\nfunction formatMetaData(meta) {\n    if (!meta) {\n        return '';\n    }\n    return ((typeof (meta) === 'string') ? meta : JSON.stringify(meta));\n}\nvar logging = {\n    setLogger: function setLogger(logObj) {\n        logger = logObj;\n    },\n    getLogger: function getLogger() {\n        return logger;\n    }\n};\nmodule.exports = logging;\n", "\"use strict\";\nconst crypto = require('crypto');\n/**\n * Represents a captured exception.\n * @constructor\n * @param {Exception} err - The exception to capture.\n * @param {boolean} [remote] - Flag for whether the error was remote.\n */\nfunction CapturedException(err, remote) {\n    this.init(err, remote);\n}\nCapturedException.prototype.init = function init(err, remote) {\n    var e = (typeof err === 'string' || err instanceof String) ? { message: err, name: '' } : err;\n    this.message = e.message;\n    this.type = e.name;\n    this.stack = [];\n    this.remote = !!remote;\n    this.id = crypto.randomBytes(8).toString('hex');\n    if (e.stack) {\n        var stack = e.stack.split('\\n');\n        stack.shift();\n        stack.forEach((stackline) => {\n            var line = stackline.trim().replace(/\\(|\\)/g, '');\n            line = line.substring(line.indexOf(' ') + 1);\n            var label = line.lastIndexOf(' ') >= 0 ? line.slice(0, line.lastIndexOf(' ')) : null;\n            var path = Array.isArray(label) && !label.length ? line : line.slice(line.lastIndexOf(' ') + 1);\n            path = path.split(':');\n            var entry = {\n                path: path[0],\n                line: parseInt(path[1]),\n                label: label || 'anonymous'\n            };\n            this.stack.push(entry);\n        }, this);\n    }\n};\nmodule.exports = CapturedException;\n", "module.exports = batcher\n\nfunction batcher (run) {\n  var running = false\n  var pendingBatch = null\n  var pendingCallbacks = null\n  var callbacks = null\n\n  return append\n\n  function done (err) {\n    if (callbacks) callAll(callbacks, err)\n\n    running = false\n    callbacks = pendingCallbacks\n    var nextBatch = pendingBatch\n\n    pendingBatch = null\n    pendingCallbacks = null\n\n    if (!nextBatch || !nextBatch.length) {\n      if (!callbacks || !callbacks.length) {\n        callbacks = null\n        return\n      }\n      if (!nextBatch) nextBatch = []\n    }\n\n    running = true\n    run(nextBatch, done)\n  }\n\n  function append (val, cb) {\n    if (running) {\n      if (!pendingBatch) {\n        pendingBatch = []\n        pendingCallbacks = []\n      }\n      pushAll(pendingBatch, val)\n      if (cb) pendingCallbacks.push(cb)\n    } else {\n      if (cb) callbacks = [cb]\n      running = true\n      run(Array.isArray(val) ? val : [val], done)\n    }\n  }\n}\n\nfunction pushAll (list, val) {\n  if (Array.isArray(val)) pushArray(list, val)\n  else list.push(val)\n}\n\nfunction pushArray (list, val) {\n  for (var i = 0; i < val.length; i++) list.push(val[i])\n}\n\nfunction callAll (list, err) {\n  for (var i = 0; i < list.length; i++) list[i](err)\n}\n", "\"use strict\";\nvar logger = require('./logger');\n/**\n * A module representing the X-Ray daemon configuration including the udp and tcp addresses.\n * @module DaemonConfig\n */\nvar DaemonConfig = {\n    udp_ip: '127.0.0.1',\n    udp_port: 2000,\n    tcp_ip: '127.0.0.1',\n    tcp_port: 2000,\n    setDaemonAddress: function setDaemonAddress(address) {\n        if (!process.env.AWS_XRAY_DAEMON_ADDRESS) {\n            processAddress(address);\n            logger.getLogger().info('Configured daemon address to ' + address + '.');\n        }\n        else {\n            logger.getLogger().warn('Ignoring call to setDaemonAddress as AWS_XRAY_DAEMON_ADDRESS is set. ' +\n                'The current daemon address will not be changed.');\n        }\n    }\n};\nvar processAddress = function processAddress(address) {\n    if (address.indexOf(':') === -1) {\n        throw new Error('Invalid Daemon Address. You must specify an ip and port.');\n    }\n    else {\n        var splitAddress = address.split(' ');\n        if (splitAddress.length === 1) {\n            // in format of 127.0.0.1:2000\n            if (address.indexOf('udp') > -1 || address.indexOf('tcp') > -1) {\n                throw new Error('Invalid Daemon Address. You must specify both tcp and udp addresses.');\n            }\n            var addr = address.split(':');\n            if (!addr[0]) {\n                throw new Error('Invalid Daemon Address. You must specify an ip.');\n            }\n            DaemonConfig.udp_ip = addr[0];\n            DaemonConfig.tcp_ip = addr[0];\n            DaemonConfig.udp_port = addr[1];\n            DaemonConfig.tcp_port = addr[1];\n        }\n        else if (splitAddress.length === 2) {\n            // in format of udp:127.0.0.1:2000 tcp:127.0.0.1:2001\n            var part_1 = splitAddress[0].split(':');\n            var part_2 = splitAddress[1].split(':');\n            var addr_map = {};\n            addr_map[part_1[0]] = part_1;\n            addr_map[part_2[0]] = part_2;\n            DaemonConfig.udp_ip = addr_map['udp'][1];\n            DaemonConfig.udp_port = parseInt(addr_map['udp'][2]);\n            DaemonConfig.tcp_ip = addr_map['tcp'][1];\n            DaemonConfig.tcp_port = parseInt(addr_map['tcp'][2]);\n            if (!DaemonConfig.udp_port || !DaemonConfig.tcp_port) {\n                throw new Error('Invalid Daemon Address. You must specify port number.');\n            }\n        }\n    }\n};\nif (process.env.AWS_XRAY_DAEMON_ADDRESS) {\n    processAddress(process.env.AWS_XRAY_DAEMON_ADDRESS);\n}\nmodule.exports = DaemonConfig;\n", "\"use strict\";\nvar dgram = require('dgram');\nvar batcher = require('atomic-batcher');\nvar logger = require('./logger');\nvar PROTOCOL_HEADER = '{\"format\":\"json\",\"version\":1}';\nvar PROTOCOL_DELIMITER = '\\n';\n/**\n * Sends a collection of data over a UDP socket. This method\n * is designed to be used by `atomic-batcher` as a way to share\n * a single UDP socket for sending multiple data blocks.\n *\n * @param {object} ops - Details of the data to send\n * @param {Function} callback - The function to call when done\n */\nfunction batchSendData(ops, callback) {\n    var client = dgram.createSocket('udp4');\n    executeSendData(client, ops, 0, function () {\n        try {\n            client.close();\n        }\n        finally {\n            callback();\n        }\n    });\n}\n/**\n * Execute sending data starting at the specified index and\n * using the provided client.\n *\n * @param {Socket} client - Socket to send data with\n * @param {object} ops - Details of data to send\n * @param {number} index - Starting index for sending\n * @param {Function} callback - Function to call when done\n */\nfunction executeSendData(client, ops, index, callback) {\n    if (index >= ops.length) {\n        callback();\n        return;\n    }\n    sendMessage(client, ops[index], function () {\n        executeSendData(client, ops, index + 1, callback);\n    });\n}\n/**\n * Send a single message over a UDP socket.\n *\n * @param {Socket} client - Socket to send data with\n * @param {object} data - Details of the data to send\n * @param {Function} batchCallback - Function to call when done\n */\nfunction sendMessage(client, data, batchCallback) {\n    var msg = data.msg;\n    var offset = data.offset;\n    var length = data.length;\n    var port = data.port;\n    var address = data.address;\n    var callback = data.callback;\n    client.send(msg, offset, length, port, address, function (err) {\n        try {\n            callback(err);\n        }\n        finally {\n            batchCallback();\n        }\n    });\n}\n/**\n * Class to mimic the Socket interface for a UDP client, but to provided\n * batching of outgoing sends using temporary Sockets that are created and\n * destroyed as needed.\n */\nfunction BatchingTemporarySocket() {\n    this.batchSend = batcher(batchSendData);\n}\n/**\n * Provide the same signature as the Socket.send method but the work will be\n * batched to share temporary UDP sockets whenever possible.\n */\nBatchingTemporarySocket.prototype.send = function (msg, offset, length, port, address, callback) {\n    var work = {\n        msg: msg,\n        offset: offset,\n        length: length,\n        port: port,\n        address: address,\n        callback: callback\n    };\n    this.batchSend(work);\n};\n/**\n * Segment emitter module.\n * @module SegmentEmitter\n */\nvar SegmentEmitter = {\n    daemonConfig: require('./daemon_config'),\n    /**\n     * Returns the formatted segment JSON string.\n     * @param {Segment} segment - The segment to format.\n     */\n    format: function format(segment) {\n        return PROTOCOL_HEADER + PROTOCOL_DELIMITER + segment.toString();\n    },\n    /**\n     * Creates a UDP socket connection and send the formatted segment.\n     * @param {Segment} segment - The segment to send to the daemon.\n     */\n    send: function send(segment) {\n        if (!this.socket) {\n            if (this.useBatchingTemporarySocket) {\n                this.socket = new BatchingTemporarySocket();\n            }\n            else {\n                this.socket = dgram.createSocket('udp4').unref();\n            }\n        }\n        var client = this.socket;\n        var formatted = segment.format();\n        var data = PROTOCOL_HEADER + PROTOCOL_DELIMITER + formatted;\n        var message = Buffer.from(data);\n        var short = '{\"trace_id:\"' + segment.trace_id + '\",\"id\":\"' + segment.id + '\"}';\n        var type = segment.type === 'subsegment' ? 'Subsegment' : 'Segment';\n        client.send(message, 0, message.length, this.daemonConfig.udp_port, this.daemonConfig.udp_ip, function (err) {\n            if (err) {\n                if (err.code === 'EMSGSIZE') {\n                    logger.getLogger().error(type + ' too large to send: ' + short + ' (' + message.length + ' bytes).');\n                }\n                else {\n                    logger.getLogger().error('Error occured sending segment: ', err);\n                }\n            }\n            else {\n                logger.getLogger().debug(type + ' sent: {\"trace_id:\"' + segment.trace_id + '\",\"id\":\"' + segment.id + '\"}');\n                logger.getLogger().debug('UDP message sent: ' + segment);\n            }\n        });\n    },\n    /**\n     * Configures the address and/or port the daemon is expected to be on.\n     * @param {string} address - Address of the daemon the segments should be sent to. Should be formatted as an IPv4 address.\n     * @module SegmentEmitter\n     * @function setDaemonAddress\n     */\n    setDaemonAddress: function setDaemonAddress(address) {\n        this.daemonConfig.setDaemonAddress(address);\n    },\n    /**\n     * Get the UDP IP the emitter is configured to.\n     * @module SegmentEmitter\n     * @function getIp\n     */\n    getIp: function getIp() {\n        return this.daemonConfig.udp_ip;\n    },\n    /**\n     * Get the UDP port the emitter is configured to.\n     * @module SegmentEmitter\n     * @function getPort\n     */\n    getPort: function getPort() {\n        return this.daemonConfig.udp_port;\n    },\n    /**\n     * Forces the segment emitter to create a new socket on send, and close it on complete.\n     * @module SegmentEmitter\n     * @function disableReusableSocket\n     */\n    disableReusableSocket: function () {\n        this.useBatchingTemporarySocket = true;\n    }\n};\nmodule.exports = SegmentEmitter;\n", "\"use strict\";\nvar crypto = require('crypto');\nvar logger = require('../../logger');\n/**\n * Class describing an AWS X-Ray trace ID.\n * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-traces\n */\nclass TraceID {\n    /**\n     * Constructs a new trace ID using the current time.\n     * @param {string} [tsHex] - time stamp to use for trace ID in hexadecimal format\n     * @param {string} [numberhex] - string of hexadecimal characters for random portion of Trace ID\n     * @constructor\n     */\n    constructor(tsHex, numberhex) {\n        this.version = 1;\n        this.timestamp = tsHex || Math.round(new Date().getTime() / 1000).toString(16);\n        this.id = numberhex || crypto.randomBytes(12).toString('hex');\n    }\n    /**\n     * @returns {TraceID} - a hardcoded trace ID using zeroed timestamp and random ID\n     */\n    static Invalid() {\n        return new TraceID('00000000', '000000000000000000000000');\n    }\n    /**\n     * Constructs a new trace ID from provided string. If no string is provided or the provided string is invalid,\n     * log an error but a new trace ID still returned. This can be used as a trace ID string validator.\n     * @param {string} [rawID] - string to create a Trace ID object from.\n     */\n    static FromString(rawID) {\n        const DELIMITER = '-';\n        var traceID = new TraceID();\n        var version, timestamp;\n        if (!rawID || typeof rawID !== 'string') {\n            logger.getLogger().error('Empty or non-string trace ID provided');\n            return traceID;\n        }\n        const parts = rawID.trim().split(DELIMITER);\n        if (parts.length !== 3) {\n            logger.getLogger().error('Unrecognized trace ID format');\n            return traceID;\n        }\n        version = parseInt(parts[0]);\n        if (isNaN(version) || version < 1) {\n            logger.getLogger().error('Trace ID version must be positive integer');\n            return traceID;\n        }\n        timestamp = parseInt(parts[1], 16).toString(16);\n        if (timestamp === 'NaN') {\n            logger.getLogger().error('Trace ID timestamp must be a hex-encoded value');\n            return traceID;\n        }\n        traceID.version = version;\n        traceID.timestamp = timestamp;\n        traceID.id = parts[2];\n        return traceID;\n    }\n    /**\n     * Returns a string representation of the trace ID.\n     * @returns {string} - stringified trace ID, e.g. 1-57fbe041-2c7ad569f5d6ff149137be86\n     */\n    toString() {\n        return `${this.version.toString()}-${this.timestamp}-${this.id}`;\n    }\n}\nmodule.exports = TraceID;\n", "\"use strict\";\n/**\n * @module utils\n */\nvar crypto = require('crypto');\nvar logger = require('./logger');\nvar TraceID = require('./segments/attributes/trace_id');\nvar utils = {\n    /**\n     * Checks a HTTP response code, where 4xx are 'error' and 5xx are 'fault'.\n     * @param {string} status - the HTTP response status code.\n     * @returns [string] - 'error', 'fault' or nothing on no match\n     * @alias module:utils.getCauseTypeFromHttpStatus\n     */\n    getCauseTypeFromHttpStatus: function getCauseTypeFromHttpStatus(status) {\n        var stat = status.toString();\n        if (stat.match(/^[4][0-9]{2}$/) !== null) {\n            return 'error';\n        }\n        else if (stat.match(/^[5][0-9]{2}$/) !== null) {\n            return 'fault';\n        }\n    },\n    /**\n     * Removes the query string parameters from a given http request path\n     * as it may contain sensitive information\n     *\n     * Related issue: https://github.com/aws/aws-xray-sdk-node/issues/246\n     *\n     * Node documentation: https://nodejs.org/api/http.html#http_http_request_url_options_callback\n     *\n     * @param {string} path - options.path in a http.request callback\n     * @returns [string] - removes query string element from path\n     * @alias module:utils.stripQueryStringFromPath\n     */\n    stripQueryStringFromPath: function stripQueryStringFromPath(path) {\n        return path ? path.split('?')[0] : '';\n    },\n    /**\n     * Performs a case-insensitive wildcard match against two strings. This method works with pseduo-regex chars; specifically ? and * are supported.\n     *   An asterisk (*) represents any combination of characters\n     *   A question mark (?) represents any single character\n     *\n     * @param {string} pattern - the regex-like pattern to be compared against.\n     * @param {string} text - the string to compare against the pattern.\n     * @returns boolean\n     * @alias module:utils.wildcardMatch\n     */\n    wildcardMatch: function wildcardMatch(pattern, text) {\n        if (pattern === undefined || text === undefined) {\n            return false;\n        }\n        if (pattern.length === 1 && pattern.charAt(0) === '*') {\n            return true;\n        }\n        var patternLength = pattern.length;\n        var textLength = text.length;\n        var indexOfGlob = pattern.indexOf('*');\n        pattern = pattern.toLowerCase();\n        text = text.toLowerCase();\n        // Infix globs are relatively rare, and the below search is expensive especially when\n        // Balsa is used a lot. Check for infix globs and, in their absence, do the simple thing\n        if (indexOfGlob === -1 || indexOfGlob === (patternLength - 1)) {\n            var match = function simpleWildcardMatch() {\n                var j = 0;\n                for (var i = 0; i < patternLength; i++) {\n                    var patternChar = pattern.charAt(i);\n                    if (patternChar === '*') {\n                        // Presumption for this method is that globs only occur at end\n                        return true;\n                    }\n                    else if (patternChar === '?') {\n                        if (j === textLength) {\n                            return false;\n                        } // No character to match\n                        j++;\n                    }\n                    else {\n                        if (j >= textLength || patternChar != text.charAt(j)) {\n                            return false;\n                        }\n                        j++;\n                    }\n                }\n                // Ate up all the pattern and didn't end at a glob, so a match will have consumed all\n                // the text\n                return j === textLength;\n            };\n            return match();\n        }\n        /*\n         * The matchArray[i] is used to record if there is a match between the first i chars in =\n         * text and the first j chars in pattern.\n         * So will return matchArray[textLength+1] in the end\n         * Loop from the beginning of the pattern\n         * case not '*': if text[i]==pattern[j] or pattern[j] is '?', and matchArray[i] is true,\n         *   set matchArray[i+1] to true, otherwise false\n         * case '*': since '*' can match any globing, as long as there is a true in matchArray before i\n         *   all the matchArray[i+1], matchArray[i+2],...,matchArray[textLength] could be true\n        */\n        var matchArray = [];\n        matchArray[0] = true;\n        for (var j = 0; j < patternLength; j++) {\n            var i;\n            var patternChar = pattern.charAt(j);\n            if (patternChar != '*') {\n                for (i = textLength - 1; i >= 0; i--) {\n                    matchArray[i + 1] = !!matchArray[i] && (patternChar === '?' || (patternChar === text.charAt(i)));\n                }\n            }\n            else {\n                i = 0;\n                while (i <= textLength && !matchArray[i]) {\n                    i++;\n                }\n                for (i; i <= textLength; i++) {\n                    matchArray[i] = true;\n                }\n            }\n            matchArray[0] = (matchArray[0] && patternChar === '*');\n        }\n        return matchArray[textLength];\n    },\n    LambdaUtils: {\n        validTraceData: function (xAmznTraceId) {\n            var valid = false;\n            if (xAmznTraceId) {\n                var data = utils.processTraceData(xAmznTraceId);\n                valid = !!(data && data.root && data.parent && data.sampled);\n            }\n            return valid;\n        },\n        /**\n         * Populates trace ID, parent ID, and sampled decision of given segment. Will always populate valid values,\n         * even if xAmznTraceId contains missing or invalid values. This ensures downstream services receive valid\n         * headers.\n         * @param {Segment} segment - Facade segment to be populated\n         * @param {String} xAmznTraceId - Raw Trace Header to supply trace data\n         * @returns {Boolean} - true if required fields are present and Trace ID is valid, false otherwise\n         */\n        populateTraceData: function (segment, xAmznTraceId) {\n            logger.getLogger().debug('Lambda trace data found: ' + xAmznTraceId);\n            let traceData = utils.processTraceData(xAmznTraceId);\n            var valid = false;\n            if (!traceData) {\n                traceData = {};\n                logger.getLogger().error('_X_AMZN_TRACE_ID is empty or has an invalid format');\n            }\n            else if (!traceData.root || !traceData.parent || !traceData.sampled) {\n                logger.getLogger().error('_X_AMZN_TRACE_ID is missing required information');\n            }\n            else {\n                valid = true;\n            }\n            segment.trace_id = TraceID.FromString(traceData.root).toString(); // Will always assign valid trace_id\n            segment.id = traceData.parent || crypto.randomBytes(8).toString('hex');\n            if (traceData.root && segment.trace_id !== traceData.root) {\n                logger.getLogger().error('_X_AMZN_TRACE_ID contains invalid trace ID');\n                valid = false;\n            }\n            if (!parseInt(traceData.sampled)) {\n                segment.notTraced = true;\n            }\n            else {\n                delete segment.notTraced;\n            }\n            if (traceData.data) {\n                segment.additionalTraceData = traceData.data;\n            }\n            logger.getLogger().debug('Segment started: ' + JSON.stringify(traceData));\n            return valid;\n        }\n    },\n    /**\n     * Splits out the data from the trace id format.  Used by the middleware.\n     * @param {String} traceData - The additional trace data (typically in req.headers.x-amzn-trace-id).\n     * @returns {object}\n     * @alias module:mw_utils.processTraceData\n     */\n    processTraceData: function processTraceData(traceData) {\n        var amznTraceData = {};\n        var data = {};\n        var reservedKeywords = ['root', 'parent', 'sampled', 'self'];\n        var remainingBytes = 256;\n        if (!(typeof traceData === 'string' && traceData)) {\n            return amznTraceData;\n        }\n        traceData.split(';').forEach(function (header) {\n            if (!header) {\n                return;\n            }\n            var pair = header.split('=');\n            if (pair[0] && pair[1]) {\n                let key = pair[0].trim();\n                let value = pair[1].trim();\n                let lowerCaseKey = key.toLowerCase();\n                let reserved = reservedKeywords.indexOf(lowerCaseKey) !== -1;\n                if (reserved) {\n                    amznTraceData[lowerCaseKey] = value;\n                }\n                else if (!reserved && remainingBytes - (lowerCaseKey.length + value.length) >= 0) {\n                    data[key] = value;\n                    remainingBytes -= (key.length + value.length);\n                }\n            }\n        });\n        amznTraceData['data'] = data;\n        return amznTraceData;\n    },\n    /**\n     * Makes a shallow copy of an object without given keys - keeps prototype\n     * @param {Object} obj - The object to copy\n     * @param {string[]} [keys=[]] - The keys that won't be copied\n     * @param {boolean} [preservePrototype=false] - If true also copy prototype properties\n     * @returns {}\n     */\n    objectWithoutProperties: function objectWithoutProperties(obj, keys, preservePrototype) {\n        keys = Array.isArray(keys) ? keys : [];\n        preservePrototype = typeof preservePrototype === 'boolean' ? preservePrototype : false;\n        var target = preservePrototype ? Object.create(Object.getPrototypeOf(obj)) : {};\n        for (var property in obj) {\n            if (keys.indexOf(property) >= 0) {\n                continue;\n            }\n            if (!Object.prototype.hasOwnProperty.call(obj, property)) {\n                continue;\n            }\n            target[property] = obj[property];\n        }\n        return target;\n    },\n    /**\n     * Safely gets an integer from a string or number\n     * @param {String | Number} - input to cast to integer\n     * @returns {Number} - Integer representation of input, or 0 if input is not castable to int\n     */\n    safeParseInt: (val) => {\n        if (!val || isNaN(val)) {\n            return 0;\n        }\n        return parseInt(val);\n    }\n};\nmodule.exports = utils;\n", "\"use strict\";\nconst { safeParseInt } = require('../utils');\nvar logger = require('../logger');\nvar DEFAULT_STREAMING_THRESHOLD = 100;\nvar utils = {\n    streamingThreshold: DEFAULT_STREAMING_THRESHOLD,\n    getCurrentTime: function getCurrentTime() {\n        return Date.now() / 1000;\n    },\n    setOrigin: function setOrigin(origin) {\n        this.origin = origin;\n    },\n    setPluginData: function setPluginData(pluginData) {\n        this.pluginData = pluginData;\n    },\n    setSDKData: function setSDKData(sdkData) {\n        this.sdkData = sdkData;\n    },\n    setServiceData: function setServiceData(serviceData) {\n        this.serviceData = serviceData;\n    },\n    /**\n     * Overrides the default streaming threshold (100).\n     * The threshold represents the maximum number of subsegments on a single segment before\n     * the SDK beings to send the completed subsegments out of band of the main segment.\n     * Reduce this threshold if you see the 'Segment too large to send' error.\n     * @param {number} threshold - The new threshold to use.\n     * @memberof AWSXRay\n     */\n    setStreamingThreshold: function setStreamingThreshold(threshold) {\n        if (isFinite(threshold) && threshold >= 0) {\n            utils.streamingThreshold = threshold;\n            logger.getLogger().debug('Subsegment streaming threshold set to: ' + threshold);\n        }\n        else {\n            logger.getLogger().error('Invalid threshold: ' + threshold + '. Must be a whole number >= 0.');\n        }\n    },\n    getStreamingThreshold: function getStreamingThreshold() {\n        return utils.streamingThreshold;\n    },\n    /**\n     * Parses an HTTP response object to return an X-Ray compliant HTTP response object.\n     * @param {http.ServerResponse} res\n     * @returns {Object} - X-Ray response object to be added to (sub)segment\n     */\n    getHttpResponseData: (res) => {\n        const ret = {};\n        if (!res) {\n            return ret;\n        }\n        const status = safeParseInt(res.statusCode);\n        if (status !== 0) {\n            ret.status = status;\n        }\n        if (res.headers && res.headers['content-length']) {\n            ret.content_length = safeParseInt(res.headers['content-length']);\n        }\n        return ret;\n    },\n    getJsonStringifyReplacer: () => (_, value) => {\n        if (typeof value === 'bigint') {\n            return value.toString();\n        }\n        return value;\n    }\n};\nmodule.exports = utils;\n", "\"use strict\";\nconst { getHttpResponseData } = require('../segment_utils');\nvar { stripQueryStringFromPath } = require('../../utils');\n/**\n * Represents an outgoing HTTP/HTTPS call.\n * @constructor\n * @param {http.ClientRequest|https.ClientRequest} req - The request object from the HTTP/HTTPS call.\n * @param {http.IncomingMessage|https.IncomingMessage} res - The response object from the HTTP/HTTPS call.\n * @param {boolean} downstreamXRayEnabled - when true, adds a \"traced\": true hint to generated subsegments such that the AWS X-Ray service expects a corresponding segment from the downstream service.\n */\nfunction RemoteRequestData(req, res, downstreamXRayEnabled) {\n    this.init(req, res, downstreamXRayEnabled);\n}\nRemoteRequestData.prototype.init = function init(req, res, downstreamXRayEnabled) {\n    this.request = {\n        url: (req.agent && req.agent.protocol) ? (req.agent.protocol + '//' + (req.host || req.getHeader('host')) + stripQueryStringFromPath(req.path)) : '',\n        method: req.method || '',\n    };\n    if (downstreamXRayEnabled) {\n        this.request.traced = true;\n    }\n    if (res) {\n        this.response = getHttpResponseData(res);\n    }\n};\nmodule.exports = RemoteRequestData;\n", "\"use strict\";\nvar crypto = require('crypto');\nvar CapturedException = require('./captured_exception');\nvar RemoteRequestData = require('./remote_request_data');\nvar SegmentEmitter = require('../../segment_emitter');\nvar SegmentUtils = require('../segment_utils');\nvar Utils = require('../../utils');\nvar logger = require('../../logger');\n/**\n * Represents a subsegment.\n * @constructor\n * @param {string} name - The name of the subsegment.\n */\nfunction Subsegment(name) {\n    this.init(name);\n}\nSubsegment.prototype.init = function init(name) {\n    if (typeof name != 'string') {\n        throw new Error('Subsegment name must be of type string.');\n    }\n    this.id = crypto.randomBytes(8).toString('hex');\n    this.name = name;\n    this.start_time = SegmentUtils.getCurrentTime();\n    this.in_progress = true;\n    this.counter = 0;\n    this.notTraced = false;\n};\n/**\n * Nests a new subsegment to the array of subsegments.\n * @param {string} name - The name of the new subsegment to append.\n * @returns {Subsegment} - The newly created subsegment.\n */\nSubsegment.prototype.addNewSubsegment = function addNewSubsegment(name) {\n    const subsegment = new Subsegment(name);\n    this.addSubsegment(subsegment);\n    return subsegment;\n};\nSubsegment.prototype.addSubsegmentWithoutSampling = function addSubsegmentWithoutSampling(subsegment) {\n    this.addSubsegment(subsegment);\n    subsegment.notTraced = true;\n};\nSubsegment.prototype.addNewSubsegmentWithoutSampling = function addNewSubsegmentWithoutSampling(name) {\n    const subsegment = new Subsegment(name);\n    this.addSubsegment(subsegment);\n    subsegment.notTraced = true;\n    return subsegment;\n};\n/**\n * Adds a subsegment to the array of subsegments.\n * @param {Subsegment} subsegment - The subsegment to append.\n */\nSubsegment.prototype.addSubsegment = function (subsegment) {\n    if (!(subsegment instanceof Subsegment)) {\n        throw new Error('Failed to add subsegment:' + subsegment + ' to subsegment \"' + this.name +\n            '\".  Not a subsegment.');\n    }\n    if (this.subsegments === undefined) {\n        this.subsegments = [];\n    }\n    subsegment.segment = this.segment;\n    subsegment.parent = this;\n    subsegment.notTraced = subsegment.parent.notTraced;\n    if (subsegment.end_time === undefined) {\n        this.incrementCounter(subsegment.counter);\n    }\n    this.subsegments.push(subsegment);\n};\n/**\n * Removes the subsegment from the subsegments array, used in subsegment streaming.\n */\nSubsegment.prototype.removeSubsegment = function removeSubsegment(subsegment) {\n    if (!(subsegment instanceof Subsegment)) {\n        throw new Error('Failed to remove subsegment:' + subsegment + ' from subsegment \"' + this.name +\n            '\".  Not a subsegment.');\n    }\n    if (this.subsegments !== undefined) {\n        var index = this.subsegments.indexOf(subsegment);\n        if (index >= 0) {\n            this.subsegments.splice(index, 1);\n        }\n    }\n};\n/**\n * Adds a property with associated data into the subsegment.\n * @param {string} name - The name of the property to add.\n * @param {Object} data - The data of the property to add.\n */\nSubsegment.prototype.addAttribute = function addAttribute(name, data) {\n    this[name] = data;\n};\n/**\n * Adds a subsegement id to record ordering.\n * @param {string} id - A subsegment id.\n */\nSubsegment.prototype.addPrecursorId = function (id) {\n    if (typeof id !== 'string') {\n        logger.getLogger().error('Failed to add id:' + id + ' to subsegment ' + this.name +\n            '.  Precursor Ids must be of type string.');\n    }\n    if (this.precursor_ids === undefined) {\n        this.precursor_ids = [];\n    }\n    this.precursor_ids.push(id);\n};\n/**\n * Adds a key-value pair that can be queryable through GetTraceSummaries.\n * Only acceptable types are string, float/int and boolean.\n * @param {string} key - The name of key to add.\n * @param {boolean|string|number} value - The value to add for the given key.\n */\nSubsegment.prototype.addAnnotation = function (key, value) {\n    if (typeof value !== 'boolean' && typeof value !== 'string' && !isFinite(value)) {\n        logger.getLogger().error('Failed to add annotation key: ' + key + ' value: ' + value + ' to subsegment ' +\n            this.name + '. Value must be of type string, number or boolean.');\n        return;\n    }\n    if (typeof key !== 'string') {\n        logger.getLogger().error('Failed to add annotation key: ' + key + ' value: ' + value + ' to subsegment ' +\n            this.name + '. Key must be of type string.');\n        return;\n    }\n    if (this.annotations === undefined) {\n        this.annotations = {};\n    }\n    this.annotations[key] = value;\n};\n/**\n * Adds a key-value pair to the metadata.default attribute when no namespace is given.\n * Metadata is not queryable, but is recorded.\n * @param {string} key - The name of the key to add.\n * @param {object|null} value - The value of the associated key.\n * @param {string} [namespace] - The property name to put the key/value pair under.\n */\nSubsegment.prototype.addMetadata = function (key, value, namespace) {\n    if (typeof key !== 'string') {\n        logger.getLogger().error('Failed to add metadata key: ' + key + ' value: ' + value + ' to subsegment ' +\n            this.name + '. Key must be of type string.');\n        return;\n    }\n    if (namespace && typeof namespace !== 'string') {\n        logger.getLogger().error('Failed to add metadata key: ' + key + ' value: ' + value + ' to subsegment ' +\n            this.name + '. Namespace must be of type string.');\n        return;\n    }\n    var ns = namespace || 'default';\n    if (!this.metadata) {\n        this.metadata = {};\n    }\n    if (!this.metadata[ns]) {\n        this.metadata[ns] = {};\n    }\n    if (ns !== '__proto__') {\n        this.metadata[ns][key] = value !== null && value !== undefined ? value : '';\n    }\n};\nSubsegment.prototype.addSqlData = function addSqlData(sqlData) {\n    this.sql = sqlData;\n};\n/**\n * Adds an error with associated data into the subsegment.\n * To handle propagating errors, the subsegment also sets a copy of the error on the\n * root segment.  As the error passes up the execution stack, a reference is created\n * on each subsegment to the originating subsegment.\n * @param {Error|string} err - The error to capture.\n * @param {boolean} [remote] - Flag for whether the exception caught was remote or not.\n */\nSubsegment.prototype.addError = function addError(err, remote) {\n    if (err == null || typeof err !== 'object' && typeof (err) !== 'string') {\n        logger.getLogger().error('Failed to add error:' + err + ' to subsegment \"' + this.name +\n            '\".  Not an object or string literal.');\n        return;\n    }\n    this.addFaultFlag();\n    if (this.segment && this.segment.exception) {\n        if (err === this.segment.exception.ex) {\n            this.fault = true;\n            this.cause = { id: this.segment.exception.cause, exceptions: [] };\n            return;\n        }\n        delete this.segment.exception;\n    }\n    if (this.segment) {\n        this.segment.exception = {\n            ex: err,\n            cause: this.id\n        };\n    }\n    else {\n        //error, cannot propagate exception if not added to segment\n    }\n    if (this.cause === undefined) {\n        this.cause = {\n            working_directory: process.cwd(),\n            exceptions: []\n        };\n    }\n    this.cause.exceptions.unshift(new CapturedException(err, remote));\n};\n/**\n * Adds data for an outgoing HTTP/HTTPS call.\n * @param {http.ClientRequest/https.ClientRequest} req - The request object from the HTTP/HTTPS call.\n * @param {http.IncomingMessage/https.IncomingMessage} res - The response object from the HTTP/HTTPS call.\n * @param {boolean} downstreamXRayEnabled - when true, adds a \"traced\": true hint to generated subsegments such that the AWS X-Ray service expects a corresponding segment from the downstream service.\n */\nSubsegment.prototype.addRemoteRequestData = function addRemoteRequestData(req, res, downstreamXRayEnabled) {\n    this.http = new RemoteRequestData(req, res, downstreamXRayEnabled);\n    if ('traced' in this.http.request) {\n        this.traced = this.http.request.traced;\n        delete this.http.request.traced;\n    }\n};\n/**\n * Adds fault flag to the subsegment.\n */\nSubsegment.prototype.addFaultFlag = function addFaultFlag() {\n    this.fault = true;\n};\n/**\n * Adds error flag to the subsegment.\n */\nSubsegment.prototype.addErrorFlag = function addErrorFlag() {\n    this.error = true;\n};\n/**\n * Adds throttle flag to the subsegment.\n */\nSubsegment.prototype.addThrottleFlag = function addThrottleFlag() {\n    this.throttle = true;\n};\n/**\n * Closes the current subsegment.  This automatically captures any exceptions and sets the end time.\n * @param {Error|string} [err] - The error to capture.\n * @param {boolean} [remote] - Flag for whether the exception caught was remote or not.\n */\nSubsegment.prototype.close = function close(err, remote) {\n    var root = this.segment;\n    this.end_time = SegmentUtils.getCurrentTime();\n    delete this.in_progress;\n    if (err) {\n        this.addError(err, remote);\n    }\n    if (this.parent) {\n        this.parent.decrementCounter();\n    }\n    if (root && root.counter > SegmentUtils.getStreamingThreshold()) {\n        if (this.streamSubsegments() && this.parent) {\n            this.parent.removeSubsegment(this);\n        }\n    }\n};\n/**\n * Each subsegment holds a counter of open subsegments.  This increments\n * the counter such that it can be called from a child and propagate up.\n * @param {Number} [additional] - An additional amount to increment.  Used when adding subsegment trees.\n */\nSubsegment.prototype.incrementCounter = function incrementCounter(additional) {\n    this.counter = additional ? this.counter + additional + 1 : this.counter + 1;\n    if (this.parent) {\n        this.parent.incrementCounter(additional);\n    }\n};\n/**\n * Each subsegment holds a counter of its open subsegments.  This decrements\n * the counter such that it can be called from a child and propagate up.\n */\nSubsegment.prototype.decrementCounter = function decrementCounter() {\n    this.counter--;\n    if (this.parent) {\n        this.parent.decrementCounter();\n    }\n};\n/**\n * Returns a boolean indicating whether or not the subsegment has been closed.\n * @returns {boolean} - Returns true if the subsegment is closed.\n */\nSubsegment.prototype.isClosed = function isClosed() {\n    return !this.in_progress;\n};\n/**\n * Sends the subsegment to the daemon.\n */\nSubsegment.prototype.flush = function flush() {\n    if (!this.parent || !this.segment) {\n        logger.getLogger().error('Failed to flush subsegment: ' + this.name + '. Subsegment must be added ' +\n            'to a segment chain to flush.');\n        return;\n    }\n    if (this.segment.trace_id) {\n        if (this.segment.notTraced !== true && !this.notTraced) {\n            SegmentEmitter.send(this);\n        }\n        else {\n            logger.getLogger().debug('Ignoring flush on subsegment ' + this.id + '. Associated segment is marked as not sampled.');\n        }\n    }\n    else {\n        logger.getLogger().debug('Ignoring flush on subsegment ' + this.id + '. Associated segment is missing a trace ID.');\n    }\n};\n/**\n * Returns true if the subsegment was streamed in its entirety\n */\nSubsegment.prototype.streamSubsegments = function streamSubsegments() {\n    if (this.isClosed() && this.counter <= 0) {\n        this.flush();\n        return true;\n    }\n    else if (this.subsegments && this.subsegments.length > 0) {\n        var open = [];\n        this.subsegments.forEach(function (child) {\n            if (!child.streamSubsegments()) {\n                open.push(child);\n            }\n        });\n        this.subsegments = open;\n    }\n};\n/**\n * Returns the formatted, trimmed subsegment JSON string to send to the daemon.\n */\nSubsegment.prototype.format = function format() {\n    this.type = 'subsegment';\n    if (this.parent) {\n        this.parent_id = this.parent.id;\n    }\n    if (this.segment) {\n        this.trace_id = this.segment.trace_id;\n    }\n    return this.serialize();\n};\n/**\n * Returns the formatted subsegment JSON string.\n */\nSubsegment.prototype.toString = function toString() {\n    return this.serialize();\n};\nSubsegment.prototype.toJSON = function toJSON() {\n    var ignore = ['segment', 'parent', 'counter'];\n    if (this.subsegments == null || this.subsegments.length === 0) {\n        ignore.push('subsegments');\n    }\n    var thisCopy = Utils.objectWithoutProperties(this, ignore, false);\n    return thisCopy;\n};\n/**\n * Returns the serialized subsegment JSON string, replacing any BigInts with strings.\n */\nSubsegment.prototype.serialize = function serialize(object) {\n    return JSON.stringify(object !== null && object !== void 0 ? object : this, SegmentUtils.getJsonStringifyReplacer());\n};\nmodule.exports = Subsegment;\n", "\"use strict\";\nvar crypto = require('crypto');\nvar CapturedException = require('./attributes/captured_exception');\nvar SegmentEmitter = require('../segment_emitter');\nvar SegmentUtils = require('./segment_utils');\nvar Subsegment = require('./attributes/subsegment');\nvar TraceID = require('./attributes/trace_id');\nvar Utils = require('../utils');\nvar logger = require('../logger');\n/**\n * Represents a segment.\n * @constructor\n * @param {string} name - The name of the subsegment.\n * @param {string} [rootId] - The trace ID of the spawning parent, included in the 'X-Amzn-Trace-Id' header of the incoming request.  If one is not supplied, it will be generated.\n * @param {string} [parentId] - The sub/segment ID of the spawning parent, included in the 'X-Amzn-Trace-Id' header of the incoming request.\n */\nfunction Segment(name, rootId, parentId) {\n    this.init(name, rootId, parentId);\n}\nSegment.prototype.init = function init(name, rootId, parentId) {\n    if (typeof name != 'string') {\n        throw new Error('Segment name must be of type string.');\n    }\n    // Validate the Trace ID\n    var traceId;\n    if (rootId && typeof rootId == 'string') {\n        traceId = TraceID.FromString(rootId);\n    }\n    else {\n        traceId = new TraceID();\n    }\n    var id = crypto.randomBytes(8).toString('hex');\n    var startTime = SegmentUtils.getCurrentTime();\n    this.trace_id = traceId.toString();\n    this.id = id;\n    this.start_time = startTime;\n    this.name = name || '';\n    this.in_progress = true;\n    this.counter = 0;\n    if (parentId) {\n        this.parent_id = parentId;\n    }\n    if (SegmentUtils.serviceData) {\n        this.setServiceData(SegmentUtils.serviceData);\n    }\n    if (SegmentUtils.pluginData) {\n        this.addPluginData(SegmentUtils.pluginData);\n    }\n    if (SegmentUtils.origin) {\n        this.origin = SegmentUtils.origin;\n    }\n    if (SegmentUtils.sdkData) {\n        this.setSDKData(SegmentUtils.sdkData);\n    }\n};\n/**\n * Adds incoming request data to the http block of the segment.\n * @param {IncomingRequestData} data - The data of the property to add.\n */\nSegment.prototype.addIncomingRequestData = function addIncomingRequestData(data) {\n    this.http = data;\n};\n/**\n * Adds a key-value pair that can be queryable through GetTraceSummaries.\n * Only acceptable types are string, float/int and boolean.\n * @param {string} key - The name of key to add.\n * @param {boolean|string|number} value - The value to add for the given key.\n */\nSegment.prototype.addAnnotation = function addAnnotation(key, value) {\n    if (typeof value !== 'boolean' && typeof value !== 'string' && !isFinite(value)) {\n        logger.getLogger().error('Failed to add annotation key: ' + key + ' value: ' + value + ' to subsegment ' +\n            this.name + '. Value must be of type string, number or boolean.');\n        return;\n    }\n    if (typeof key !== 'string') {\n        logger.getLogger().error('Failed to add annotation key: ' + key + ' value: ' + value + ' to subsegment ' +\n            this.name + '. Key must be of type string.');\n        return;\n    }\n    if (this.annotations === undefined) {\n        this.annotations = {};\n    }\n    this.annotations[key] = value;\n};\n/**\n * Adds a User ID that can be queried from the X-Ray console. User ID\n * must be a string.\n * @param {string} user - The ID of the user corresponding to this segment\n */\nSegment.prototype.setUser = function (user) {\n    if (typeof user !== 'string') {\n        logger.getLogger().error('Set user: ' + user + ' failed. User IDs must be of type string.');\n    }\n    this.user = user;\n};\n/**\n * Adds a key-value pair to the metadata.default attribute when no namespace is given.\n * Metadata is not queryable, but is recorded.\n * @param {string} key - The name of the key to add.\n * @param {object|null} value - The value of the associated key.\n * @param {string} [namespace] - The property name to put the key/value pair under.\n */\nSegment.prototype.addMetadata = function (key, value, namespace) {\n    if (typeof key !== 'string') {\n        logger.getLogger().error('Failed to add metadata key: ' + key + ' value: ' + value + ' to segment ' +\n            this.name + '. Key must be of type string.');\n        return;\n    }\n    if (namespace && typeof namespace !== 'string') {\n        logger.getLogger().error('Failed to add metadata key: ' + key + ' value: ' + value + ' to segment ' +\n            this.name + '. Namespace must be of type string.');\n        return;\n    }\n    var ns = namespace || 'default';\n    if (!this.metadata) {\n        this.metadata = {};\n    }\n    if (!this.metadata[ns]) {\n        this.metadata[ns] = {};\n    }\n    if (ns !== '__proto__') {\n        this.metadata[ns][key] = value !== null && value !== undefined ? value : '';\n    }\n};\n/**\n * Adds data about the AWS X-Ray SDK onto the segment.\n * @param {Object} data - Object that contains the version of the SDK, and other information.\n */\nSegment.prototype.setSDKData = function setSDKData(data) {\n    if (!data) {\n        logger.getLogger().error('Add SDK data: ' + data + ' failed.' +\n            'Must not be empty.');\n        return;\n    }\n    if (!this.aws) {\n        this.aws = {};\n    }\n    this.aws.xray = data;\n};\nSegment.prototype.setMatchedSamplingRule = function setMatchedSamplingRule(ruleName) {\n    if (this.aws) {\n        this.aws = JSON.parse(JSON.stringify(this.aws));\n    }\n    if (this.aws && this.aws['xray']) {\n        this.aws.xray['rule_name'] = ruleName;\n    }\n    else {\n        this.aws = { xray: { 'rule_name': ruleName } };\n    }\n};\n/**\n * Adds data about the service into the segment.\n * @param {Object} data - Object that contains the version of the application, and other information.\n */\nSegment.prototype.setServiceData = function setServiceData(data) {\n    if (!data) {\n        logger.getLogger().error('Add service data: ' + data + ' failed.' +\n            'Must not be empty.');\n        return;\n    }\n    this.service = data;\n};\n/**\n * Adds a service with associated version data into the segment.\n * @param {Object} data - The associated AWS data.\n */\nSegment.prototype.addPluginData = function addPluginData(data) {\n    if (this.aws === undefined) {\n        this.aws = {};\n    }\n    Object.assign(this.aws, data);\n};\n/**\n * Adds a new subsegment to the array of subsegments.\n * @param {string} name - The name of the new subsegment to append.\n */\nSegment.prototype.addNewSubsegment = function addNewSubsegment(name) {\n    var subsegment = new Subsegment(name);\n    this.addSubsegment(subsegment);\n    return subsegment;\n};\nSegment.prototype.addSubsegmentWithoutSampling = function addSubsegmentWithoutSampling(subsegment) {\n    this.addSubsegment(subsegment);\n    subsegment.notTraced = true;\n};\nSegment.prototype.addNewSubsegmentWithoutSampling = function addNewSubsegmentWithoutSampling(name) {\n    const subsegment = new Subsegment(name);\n    this.addSubsegment(subsegment);\n    subsegment.notTraced = true;\n    return subsegment;\n};\n/**\n * Adds a subsegment to the array of subsegments.\n * @param {Subsegment} subsegment - The subsegment to append.\n */\nSegment.prototype.addSubsegment = function addSubsegment(subsegment) {\n    if (!(subsegment instanceof Subsegment)) {\n        throw new Error('Cannot add subsegment: ' + subsegment + '. Not a subsegment.');\n    }\n    if (this.subsegments === undefined) {\n        this.subsegments = [];\n    }\n    subsegment.segment = this;\n    subsegment.parent = this;\n    subsegment.notTraced = subsegment.parent.notTraced;\n    this.subsegments.push(subsegment);\n    if (!subsegment.end_time) {\n        this.incrementCounter(subsegment.counter);\n    }\n};\n/**\n * Removes the subsegment from the subsegments array, used in subsegment streaming.\n */\nSegment.prototype.removeSubsegment = function removeSubsegment(subsegment) {\n    if (!(subsegment instanceof Subsegment)) {\n        throw new Error('Failed to remove subsegment:' + subsegment + ' from subsegment \"' + this.name +\n            '\".  Not a subsegment.');\n    }\n    if (this.subsegments !== undefined) {\n        var index = this.subsegments.indexOf(subsegment);\n        if (index >= 0) {\n            this.subsegments.splice(index, 1);\n        }\n    }\n};\n/**\n * Adds error data into the segment.\n * @param {Error|string} err - The error to capture.\n * @param {boolean} [remote] - Flag for whether the exception caught was remote or not.\n */\nSegment.prototype.addError = function addError(err, remote) {\n    if (err == null || typeof err !== 'object' && typeof (err) !== 'string') {\n        logger.getLogger().error('Failed to add error:' + err + ' to subsegment \"' + this.name +\n            '\".  Not an object or string literal.');\n        return;\n    }\n    this.addFaultFlag();\n    if (this.exception) {\n        if (err === this.exception.ex) {\n            this.cause = { id: this.exception.cause };\n            delete this.exception;\n            return;\n        }\n        delete this.exception;\n    }\n    if (this.cause === undefined) {\n        this.cause = {\n            working_directory: process.cwd(),\n            exceptions: []\n        };\n    }\n    this.cause.exceptions.push(new CapturedException(err, remote));\n};\n/**\n * Adds fault flag to the subsegment.\n */\nSegment.prototype.addFaultFlag = function addFaultFlag() {\n    this.fault = true;\n};\n/**\n * Adds error flag to the subsegment.\n */\nSegment.prototype.addErrorFlag = function addErrorFlag() {\n    this.error = true;\n};\n/**\n * Adds throttle flag to the subsegment.\n */\nSegment.prototype.addThrottleFlag = function addThrottleFlag() {\n    this.throttle = true;\n};\n/**\n * Returns a boolean indicating whether or not the segment has been closed.\n * @returns {boolean} - Returns true if the subsegment is closed.\n */\nSegment.prototype.isClosed = function isClosed() {\n    return !this.in_progress;\n};\n/**\n * Each segment holds a counter of open subsegments.  This increments the counter.\n * @param {Number} [additional] - An additional amount to increment.  Used when adding subsegment trees.\n */\nSegment.prototype.incrementCounter = function incrementCounter(additional) {\n    this.counter = additional ? this.counter + additional + 1 : this.counter + 1;\n    if (this.counter > SegmentUtils.streamingThreshold && this.subsegments && this.subsegments.length > 0) {\n        var open = [];\n        this.subsegments.forEach(function (child) {\n            if (!child.streamSubsegments()) {\n                open.push(child);\n            }\n        });\n        this.subsegments = open;\n    }\n};\n/**\n * Each segment holds a counter of open subsegments.  This decrements\n * the counter such that it can be called from a child and propagate up.\n */\nSegment.prototype.decrementCounter = function decrementCounter() {\n    this.counter--;\n    if (this.counter <= 0 && this.isClosed()) {\n        this.flush();\n    }\n};\n/**\n * Closes the current segment.  This automatically sets the end time.\n * @param {Error|string} [err] - The error to capture.\n * @param {boolean} [remote] - Flag for whether the exception caught was remote or not.\n */\nSegment.prototype.close = function (err, remote) {\n    if (!this.end_time) {\n        this.end_time = SegmentUtils.getCurrentTime();\n    }\n    if (err !== undefined) {\n        this.addError(err, remote);\n    }\n    delete this.in_progress;\n    delete this.exception;\n    if (this.counter <= 0) {\n        this.flush();\n    }\n};\n/**\n * Sends the segment to the daemon.\n */\nSegment.prototype.flush = function flush() {\n    if (this.notTraced !== true) {\n        delete this.exception;\n        var thisCopy = Utils.objectWithoutProperties(this, ['counter', 'notTraced'], true);\n        SegmentEmitter.send(thisCopy);\n    }\n};\nSegment.prototype.format = function format() {\n    var ignore = ['segment', 'parent', 'counter'];\n    if (this.subsegments == null || this.subsegments.length === 0) {\n        ignore.push('subsegments');\n    }\n    var thisCopy = Utils.objectWithoutProperties(this, ignore, false);\n    return this.serialize(thisCopy);\n};\nSegment.prototype.toString = function toString() {\n    return this.serialize();\n};\nSegment.prototype.serialize = function serialize(object) {\n    return JSON.stringify(object !== null && object !== void 0 ? object : this, SegmentUtils.getJsonStringifyReplacer());\n};\nmodule.exports = Segment;\n", "\"use strict\";\n/**\n * @module context_utils\n */\nvar cls = require('cls-hooked/context');\nvar logger = require('./logger');\nvar Segment = require('./segments/segment');\nvar Subsegment = require('./segments/attributes/subsegment');\nvar cls_mode = true;\nvar NAMESPACE = 'AWSXRay';\nvar SEGMENT = 'segment';\nvar contextOverride = false;\nvar contextUtils = {\n    CONTEXT_MISSING_STRATEGY: {\n        RUNTIME_ERROR: {\n            contextMissing: function contextMissingRuntimeError(message) {\n                throw new Error(message);\n            }\n        },\n        LOG_ERROR: {\n            contextMissing: function contextMissingLogError(message) {\n                var err = new Error(message);\n                logger.getLogger().error(err.stack);\n            }\n        },\n        IGNORE_ERROR: {\n            contextMissing: function contextMissingIgnoreError() {\n            }\n        }\n    },\n    contextMissingStrategy: {},\n    /**\n     * Resolves the segment or subsegment given manual mode and params on the call required.\n     * @param [Segment|Subsegment] segment - The segment manually provided via params.XraySegment, if provided.\n     * @returns {Segment|Subsegment}\n     * @alias module:context_utils.resolveManualSegmentParams\n     */\n    resolveManualSegmentParams: function resolveManualSegmentParams(params) {\n        if (params && !contextUtils.isAutomaticMode()) {\n            var xraySegment = params.XRaySegment || params.XraySegment;\n            var segment = params.Segment;\n            var found = null;\n            if (xraySegment && (xraySegment instanceof Segment || xraySegment instanceof Subsegment)) {\n                found = xraySegment;\n                delete params.XRaySegment;\n                delete params.XraySegment;\n            }\n            else if (segment && (segment instanceof Segment || segment instanceof Subsegment)) {\n                found = segment;\n                delete params.Segment;\n            }\n            return found;\n        }\n    },\n    /**\n     * Gets current CLS namespace for X-Ray SDK or creates one if absent.\n     * @returns {Namespace}\n     * @alias module:context_utils.getNamespace\n     */\n    getNamespace: function getNamespace() {\n        return cls.getNamespace(NAMESPACE) || cls.createNamespace(NAMESPACE);\n    },\n    /**\n     * Resolves the segment or subsegment given manual or automatic mode.\n     * @param [Segment|Subsegment] segment - The segment manually provided, if provided.\n     * @returns {Segment|Subsegment}\n     * @alias module:context_utils.resolveSegment\n     */\n    resolveSegment: function resolveSegment(segment) {\n        if (cls_mode) {\n            return this.getSegment();\n        }\n        else if (segment && !cls_mode) {\n            return segment;\n        }\n        else if (!segment && !cls_mode) {\n            contextUtils.contextMissingStrategy.contextMissing('No sub/segment specified. A sub/segment must be provided for manual mode.');\n        }\n    },\n    /**\n     * Returns the current segment or subsegment.  For use with in automatic mode only.\n     * @returns {Segment|Subsegment}\n     * @alias module:context_utils.getSegment\n     */\n    getSegment: function getSegment() {\n        if (cls_mode) {\n            var segment = contextUtils.getNamespace(NAMESPACE).get(SEGMENT);\n            if (!segment) {\n                contextUtils.contextMissingStrategy.contextMissing('Failed to get the current sub/segment from the context.');\n            }\n            else if (segment instanceof Segment && process.env.LAMBDA_TASK_ROOT && segment.facade == true) {\n                segment.resolveLambdaTraceData();\n            }\n            return segment;\n        }\n        else {\n            contextUtils.contextMissingStrategy.contextMissing('Cannot get sub/segment from context. Not supported in manual mode.');\n        }\n    },\n    /**\n     * Sets the current segment or subsegment.  For use with in automatic mode only.\n     * @param [Segment|Subsegment] segment - The sub/segment to set.\n     * @returns {Segment|Subsegment}\n     * @alias module:context_utils.setSegment\n     */\n    setSegment: function setSegment(segment) {\n        if (cls_mode) {\n            if (!contextUtils.getNamespace(NAMESPACE).set(SEGMENT, segment)) {\n                logger.getLogger().warn('Failed to set the current sub/segment on the context.');\n            }\n        }\n        else {\n            contextUtils.contextMissingStrategy.contextMissing('Cannot set sub/segment on context. Not supported in manual mode.');\n        }\n    },\n    /**\n     * Returns true if in automatic mode, otherwise false.\n     * @returns {Segment|Subsegment}\n     * @alias module:context_utils.isAutomaticMode\n     */\n    isAutomaticMode: function isAutomaticMode() {\n        return cls_mode;\n    },\n    /**\n     * Enables automatic mode. Automatic mode uses 'cls-hooked'.\n     * @see https://github.com/jeff-lewis/cls-hooked\n     * @alias module:context_utils.enableAutomaticMode\n     */\n    enableAutomaticMode: function enableAutomaticMode() {\n        cls_mode = true;\n        contextUtils.getNamespace(NAMESPACE);\n        logger.getLogger().debug('Overriding AWS X-Ray SDK mode. Set to automatic mode.');\n    },\n    /**\n     * Disables automatic mode. Current segment or subsegment then must be passed manually\n     * via the parent optional on captureFunc, captureAsyncFunc etc.\n     * @alias module:context_utils.enableManualMode\n     */\n    enableManualMode: function enableManualMode() {\n        cls_mode = false;\n        if (cls.getNamespace(NAMESPACE)) {\n            cls.destroyNamespace(NAMESPACE);\n        }\n        logger.getLogger().debug('Overriding AWS X-Ray SDK mode. Set to manual mode.');\n    },\n    /**\n     * Sets the context missing strategy if no context missing strategy is set using the environment variable with\n     * key AWS_XRAY_CONTEXT_MISSING. The context missing strategy's contextMissing function will be called whenever\n     * trace context is not found.\n     * @param {string|function} strategy - The strategy to set. Valid string values are 'LOG_ERROR' and 'RUNTIME_ERROR'.\n     *                                     Alternatively, a custom function can be supplied, which takes a error message string.\n     */\n    setContextMissingStrategy: function setContextMissingStrategy(strategy) {\n        if (!contextOverride) {\n            if (typeof strategy === 'string') {\n                var lookupStrategy = contextUtils.CONTEXT_MISSING_STRATEGY[strategy.toUpperCase()];\n                if (lookupStrategy) {\n                    contextUtils.contextMissingStrategy.contextMissing = lookupStrategy.contextMissing;\n                    if (process.env.AWS_XRAY_CONTEXT_MISSING) {\n                        logger.getLogger().debug('AWS_XRAY_CONTEXT_MISSING is set. Configured context missing strategy to ' +\n                            process.env.AWS_XRAY_CONTEXT_MISSING + '.');\n                    }\n                    else {\n                        logger.getLogger().debug('Configured context missing strategy to: ' + strategy);\n                    }\n                }\n                else {\n                    throw new Error('Invalid context missing strategy: ' + strategy + '. Valid values are ' +\n                        Object.keys(contextUtils.CONTEXT_MISSING_STRATEGY) + '.');\n                }\n            }\n            else if (typeof strategy === 'function') {\n                contextUtils.contextMissingStrategy.contextMissing = strategy;\n                logger.getLogger().info('Configured custom context missing strategy to function: ' + strategy.name);\n            }\n            else {\n                throw new Error('Context missing strategy must be either a string or a custom function.');\n            }\n        }\n        else {\n            logger.getLogger().warn('Ignoring call to setContextMissingStrategy as AWS_XRAY_CONTEXT_MISSING is set. ' +\n                'The current context missing strategy will not be changed.');\n        }\n    }\n};\nif (process.env.AWS_XRAY_MANUAL_MODE) {\n    cls_mode = false;\n    logger.getLogger().debug('Starting the AWS X-Ray SDK in manual mode.');\n}\nelse {\n    cls.createNamespace(NAMESPACE);\n    logger.getLogger().debug('Starting the AWS X-Ray SDK in automatic mode (default).');\n}\nif (process.env.AWS_XRAY_CONTEXT_MISSING) {\n    contextUtils.setContextMissingStrategy(process.env.AWS_XRAY_CONTEXT_MISSING);\n    contextOverride = true;\n}\nelse {\n    contextUtils.contextMissingStrategy.contextMissing = contextUtils.CONTEXT_MISSING_STRATEGY.LOG_ERROR.contextMissing;\n    logger.getLogger().debug('Using default context missing strategy: LOG_ERROR');\n}\nmodule.exports = contextUtils;\n", "\"use strict\";\nvar { getHttpResponseData } = require('../segments/segment_utils');\n/**\n * Represents an incoming HTTP/HTTPS call.\n * @constructor\n * @param {http.IncomingMessage|https.IncomingMessage} req - The request object from the HTTP/HTTPS call.\n */\nfunction IncomingRequestData(req) {\n    this.init(req);\n}\nIncomingRequestData.prototype.init = function init(req) {\n    var forwarded = !!req.headers['x-forwarded-for'];\n    var url;\n    if (req.connection) {\n        url = ((req.connection.secure || req.connection.encrypted) ? 'https://' : 'http://') +\n            ((req.headers['host'] || '') + (req.url || ''));\n    }\n    this.request = {\n        method: req.method || '',\n        user_agent: req.headers['user-agent'] || '',\n        client_ip: getClientIp(req) || '',\n        url: url || '',\n    };\n    if (forwarded) {\n        this.request.x_forwarded_for = forwarded;\n    }\n};\nvar getClientIp = function getClientIp(req) {\n    var clientIp;\n    if (req.headers['x-forwarded-for']) {\n        clientIp = (req.headers['x-forwarded-for'] || '').split(',')[0];\n    }\n    else if (req.connection && req.connection.remoteAddress) {\n        clientIp = req.connection.remoteAddress;\n    }\n    else if (req.socket && req.socket.remoteAddress) {\n        clientIp = req.socket.remoteAddress;\n    }\n    else if (req.connection && req.connection.socket && req.connection.socket.remoteAddress) {\n        clientIp = req.connection.socket.remoteAddress;\n    }\n    return clientIp;\n};\n/**\n * Closes the local and automatically captures the response data.\n * @param {http.ServerResponse|https.ServerResponse} res - The response object from the HTTP/HTTPS call.\n */\nIncomingRequestData.prototype.close = function close(res) {\n    this.response = getHttpResponseData(res);\n};\nmodule.exports = IncomingRequestData;\n", "\"use strict\";\n/**\n * Represents a LocalReservoir object that keeps track of the number of traces per second sampled and\n * the fixed rate for a given sampling rule defined locally.\n * It also decides if a given trace should be sampled or not based on the state of current second.\n * @constructor\n * @param {number} fixedTarget - An integer value to specify the maximum number of traces per second to sample.\n * @param {number} fallbackRate - A value between 0 and 1 indicating the sampling rate after the maximum traces per second has been hit.\n */\nfunction LocalReservoir(fixedTarget, fallbackRate) {\n    this.init(fixedTarget, fallbackRate);\n}\nLocalReservoir.prototype.init = function init(fixedTarget, fallbackRate) {\n    this.usedThisSecond = 0;\n    if (typeof fixedTarget === 'number' && fixedTarget % 1 === 0 && fixedTarget >= 0) {\n        this.fixedTarget = fixedTarget;\n    }\n    else {\n        throw new Error('Error in sampling file. Rule attribute \"fixed_target\" must be a non-negative integer.');\n    }\n    if (typeof fallbackRate === 'number' && fallbackRate >= 0 && fallbackRate <= 1) {\n        this.fallbackRate = fallbackRate;\n    }\n    else {\n        throw new Error('Error in sampling file. Rule attribute \"rate\" must be a number between 0 and 1 inclusive.');\n    }\n};\nLocalReservoir.prototype.isSampled = function isSampled() {\n    var now = Math.round(new Date().getTime() / 1000);\n    if (now !== this.thisSecond) {\n        this.usedThisSecond = 0;\n        this.thisSecond = now;\n    }\n    if (this.usedThisSecond >= this.fixedTarget) {\n        return Math.random() < this.fallbackRate;\n    }\n    this.usedThisSecond++;\n    return true;\n};\nmodule.exports = LocalReservoir;\n", "{\n  \"default\": {\n    \"fixed_target\": 1,\n    \"rate\": 0.05\n  },\n  \"version\": 2\n}\n", "\"use strict\";\nvar fs = require('fs');\nvar LocalReservoir = require('./local_reservoir');\nvar Utils = require('../../utils');\nvar defaultRules = require('../../resources/default_sampling_rules.json');\nvar logger = require('../../logger');\n/**\n * The local sampler used to make sampling decisions when the decisions are absent in the incoming requests\n * and the default sampler needs to fall back on local rules. It will also be the primary sampler\n * if the default sampler is disabled.\n * @module LocalSampler\n */\nvar LocalSampler = {\n    /**\n     * Makes a sample decision based on the sample request.\n     * @param {object} sampleRequest - Contains information for rules matching.\n     * @module LocalSampler\n     * @function shouldSample\n     */\n    shouldSample: function shouldSample(sampleRequest) {\n        var host = sampleRequest.host;\n        var httpMethod = sampleRequest.httpMethod;\n        var urlPath = sampleRequest.urlPath;\n        var formatted = '{ http_method: ' + httpMethod + ', host: ' + host + ', url_path: ' + urlPath + ' }';\n        var matched;\n        this.rules.some(function (rule) {\n            // Any null parameters provided will be considered an implicit match.\n            if (rule.default || (host == null || (Utils.wildcardMatch(rule.host, host))\n                && (httpMethod == null || Utils.wildcardMatch(rule.http_method, httpMethod))\n                && (urlPath == null || Utils.wildcardMatch(rule.url_path, urlPath)))) {\n                matched = rule.reservoir;\n                logger.getLogger().debug('Local sampling rule match found for ' + formatted + '. Matched ' + (rule.default ?\n                    'default' : '{ http_method: ' + rule.http_method + ', host: ' + rule.host + ', url_path: ' +\n                    rule.url_path + ' }') + '. Using fixed_target: ' + matched.fixedTarget + ' and rate: ' + matched.fallbackRate + '.');\n                return true;\n            }\n        });\n        if (matched) {\n            return matched.isSampled();\n        }\n        else {\n            logger.getLogger().debug('No sampling rule matched for ' + formatted);\n            return false;\n        }\n    },\n    /**\n     * Set local rules for making sampling decisions.\n     * @module LocalSampler\n     * @function setLocalRules\n     */\n    setLocalRules: function setLocalRules(source) {\n        if (source) {\n            if (typeof source === 'string') {\n                logger.getLogger().info('Using custom sampling rules file: ' + source);\n                this.rules = loadRulesConfig(JSON.parse(fs.readFileSync(source, 'utf8')));\n            }\n            else {\n                logger.getLogger().info('Using custom sampling rules source.');\n                this.rules = loadRulesConfig(source);\n            }\n        }\n        else {\n            this.rules = parseRulesConfig(defaultRules);\n        }\n    }\n};\nvar loadRulesConfig = function loadRulesConfig(config) {\n    if (!config.version) {\n        throw new Error('Error in sampling file. Missing \"version\" attribute.');\n    }\n    if (config.version === 1 || config.version === 2) {\n        return parseRulesConfig(config);\n    }\n    else {\n        throw new Error('Error in sampling file. Unknown version \"' + config.version + '\".');\n    }\n};\nvar parseRulesConfig = function parseRulesConfig(config) {\n    var defaultRule;\n    var rules = [];\n    if (config.default) {\n        var missing = [];\n        for (var key in config.default) {\n            if (key !== 'fixed_target' && key !== 'rate') {\n                throw new Error('Error in sampling file. Invalid attribute for default: ' + key +\n                    '. Valid attributes for default are \"fixed_target\" and \"rate\".');\n            }\n            else if (typeof config.default[key] !== 'number') {\n                throw new Error('Error in sampling file. Default ' + key + ' must be a number.');\n            }\n        }\n        if (typeof config.default.fixed_target === 'undefined') {\n            missing.push('fixed_target');\n        }\n        if (typeof config.default.rate === 'undefined') {\n            missing.push('rate');\n        }\n        if (missing.length !== 0) {\n            throw new Error('Error in sampling file. Missing required attributes for default: ' + missing + '.');\n        }\n        defaultRule = { default: true, reservoir: new LocalReservoir(config.default.fixed_target, config.default.rate) };\n    }\n    else {\n        throw new Error('Error in sampling file. Expecting \"default\" object to be defined with attributes \"fixed_target\" and \"rate\".');\n    }\n    if (Array.isArray(config.rules)) {\n        config.rules.forEach(function (rawRule) {\n            var params = {};\n            var required;\n            if (config.version === 2) {\n                required = { host: 1, http_method: 1, url_path: 1, fixed_target: 1, rate: 1 };\n            }\n            if (config.version === 1) {\n                required = { service_name: 1, http_method: 1, url_path: 1, fixed_target: 1, rate: 1 };\n            }\n            for (var key in rawRule) {\n                var value = rawRule[key];\n                if (!required[key] && key != 'description') {\n                    throw new Error('Error in sampling file. Rule ' + JSON.stringify(rawRule) + ' has invalid attribute: ' + key + '.');\n                }\n                else if (key != 'description' && !value && value !== 0) {\n                    throw new Error('Error in sampling file. Rule ' + JSON.stringify(rawRule) + ' attribute \"' + key + '\" has invalid value: ' + value + '.');\n                }\n                else {\n                    if (config.version === 2) {\n                        params[key] = value;\n                    }\n                    if (config.version === 1 && key === 'service_name') {\n                        params['host'] = value;\n                    }\n                    else {\n                        params[key] = value;\n                    }\n                    delete required[key];\n                }\n            }\n            if (Object.keys(required).length !== 0 && required.constructor === Object) {\n                throw new Error('Error in sampling file. Rule ' + JSON.stringify(rawRule) + ' is missing required attributes: ' + Object.keys(required) + '.');\n            }\n            var rule = params;\n            rule.reservoir = new LocalReservoir(rawRule.fixed_target, rawRule.rate);\n            rules.push(rule);\n        });\n    }\n    rules.push(defaultRule);\n    return rules;\n};\nLocalSampler.setLocalRules();\nmodule.exports = LocalSampler;\n", "\"use strict\";\n/**\n * Represents a Reservoir object that keeps track of the number of traces per second sampled and\n * the fixed rate for a given sampling rule. This information is fetched from X-Ray serivce.\n * It decides if a given trace should be borrowed or sampled or not sampled based on the state of current second.\n * @constructor\n */\nfunction Reservoir() {\n    this.init();\n}\nReservoir.prototype.init = function init() {\n    this.quota = null;\n    this.TTL = null;\n    this.takenThisSec = 0;\n    this.borrowedThisSec = 0;\n    this.reportInterval = 1;\n    this.reportElapsed = 0;\n};\nReservoir.prototype.borrowOrTake = function borrowOrTake(now, canBorrow) {\n    this.adjustThisSec(now);\n    // Don't borrow if the quota is available and fresh.\n    if (this.quota >= 0 && this.TTL >= now) {\n        if (this.takenThisSec >= this.quota) {\n            return false;\n        }\n        this.takenThisSec++;\n        return 'take';\n    }\n    // Otherwise try to borrow if the quota is not present or expired.\n    if (canBorrow) {\n        if (this.borrowedThisSec >= 1) {\n            return false;\n        }\n        this.borrowedThisSec++;\n        return 'borrow';\n    }\n};\nReservoir.prototype.adjustThisSec = function adjustThisSec(now) {\n    if (now !== this.thisSec) {\n        this.takenThisSec = 0;\n        this.borrowedThisSec = 0;\n        this.thisSec = now;\n    }\n};\nReservoir.prototype.loadNewQuota = function loadNewQuota(quota, TTL, interval) {\n    if (quota) {\n        this.quota = quota;\n    }\n    if (TTL) {\n        this.TTL = TTL;\n    }\n    if (interval) {\n        this.reportInterval = interval / 10;\n    } // Report interval is always time of 10.\n};\nReservoir.prototype.timeToReport = function timeToReport() {\n    if (this.reportElapsed + 1 >= this.reportInterval) {\n        this.reportElapsed = 0;\n        return true;\n    }\n    else {\n        this.reportElapsed += 1;\n        return false;\n    }\n};\nmodule.exports = Reservoir;\n", "\"use strict\";\nvar Utils = require('../../utils');\nvar Reservoir = require('./reservoir');\n/**\n * The data model for a sampling rule defined using X-Ray API CreateSamplingRules.\n * It should be only instantiated directly from the X-Ray API response.\n * @constructor\n */\nfunction SamplingRule(name, priority, rate, reservoirSize, host, httpMethod, urlPath, serviceName, serviceType) {\n    this.init(name, priority, rate, reservoirSize, host, httpMethod, urlPath, serviceName, serviceType);\n}\nSamplingRule.prototype.init = function init(name, priority, rate, reservoirSize, host, httpMethod, urlPath, serviceName, serviceType) {\n    this.name = name;\n    this.priority = priority;\n    this.rate = rate;\n    this.host = host;\n    this.httpMethod = httpMethod;\n    this.urlPath = urlPath;\n    this.serviceName = serviceName;\n    this.serviceType = serviceType;\n    this.reservoir = new Reservoir();\n    this.borrow = !!reservoirSize;\n    this.resetStatistics();\n};\nSamplingRule.prototype.match = function match(sampleRequest) {\n    var host = sampleRequest.host;\n    var httpMethod = sampleRequest.httpMethod;\n    var serviceName = sampleRequest.serviceName;\n    var urlPath = sampleRequest.urlPath;\n    var serviceType = sampleRequest.serviceType;\n    return this.isDefault() || (!host || Utils.wildcardMatch(this.host, host))\n        && (!httpMethod || Utils.wildcardMatch(this.httpMethod, httpMethod))\n        && (!serviceName || Utils.wildcardMatch(this.serviceName, serviceName))\n        && (!urlPath || Utils.wildcardMatch(this.urlPath, urlPath))\n        && (!serviceType || Utils.wildcardMatch(this.serviceType, serviceType));\n};\nSamplingRule.prototype.snapshotStatistics = function snapshotStatistics() {\n    var statistics = {\n        requestCount: this.requestCount,\n        borrowCount: this.borrowCount,\n        sampledCount: this.sampledCount\n    };\n    this.resetStatistics();\n    return statistics;\n};\nSamplingRule.prototype.merge = function merge(rule) {\n    this.reservoir = rule.reservoir;\n    this.requestCount = rule.requestCount;\n    this.borrowCount = rule.borrowCount;\n    this.sampledCount = rule.sampledCount;\n    rule = null; // unref the old rule so it can be garbage collected.\n};\nSamplingRule.prototype.isDefault = function isDefault() {\n    return this.name === 'Default'; // \"Default\" is a reserved keyword from X-Ray back-end.\n};\nSamplingRule.prototype.incrementRequestCount = function incrementRequestCount() {\n    this.requestCount++;\n};\nSamplingRule.prototype.incrementBorrowCount = function incrementBorrowCount() {\n    this.borrowCount++;\n};\nSamplingRule.prototype.incrementSampledCount = function incrementSampledCount() {\n    this.sampledCount++;\n};\nSamplingRule.prototype.setRate = function setRate(rate) {\n    this.rate = rate;\n};\nSamplingRule.prototype.getRate = function getRate() {\n    return this.rate;\n};\nSamplingRule.prototype.getName = function getName() {\n    return this.name;\n};\nSamplingRule.prototype.getPriority = function getPriority() {\n    return this.priority;\n};\nSamplingRule.prototype.getReservoir = function getReservoir() {\n    return this.reservoir;\n};\nSamplingRule.prototype.resetStatistics = function resetStatistics() {\n    this.requestCount = 0;\n    this.borrowCount = 0;\n    this.sampledCount = 0;\n};\nSamplingRule.prototype.canBorrow = function canBorrow() {\n    return this.borrow;\n};\nSamplingRule.prototype.everMatched = function everMatched() {\n    return this.requestCount > 0;\n};\nSamplingRule.prototype.timeToReport = function timeToReport() {\n    return this.reservoir.timeToReport();\n};\nmodule.exports = SamplingRule;\n", "\"use strict\";\nvar crypto = require('crypto');\nvar logger = require('../../logger');\nvar SamplingRule = require('./sampling_rule');\nvar DaemonConfig = require('../../daemon_config');\nconst util = require('util');\nconst http = require('http');\n/**\n * The ServiceConnector that calls X-Ray service and convert the API response bodies to data models\n * defined in the X-Ray SDK and return them to the pollers.\n * @module ServiceConnector\n */\nvar ServiceConnector = {\n    // client_id is a 12 byte cryptographically secure random hex\n    // identifying the SDK instance and is generated during SDK initialization/\n    // This is required when reporting sampling to X-Ray back-end.\n    clientId: crypto.randomBytes(12).toString('hex'),\n    samplingRulesPath: '/GetSamplingRules',\n    samplingTargetsPath: '/SamplingTargets',\n    logger: logger,\n    httpClient: http,\n    fetchSamplingRules: function fetchSamplingRules(callback) {\n        const body = '{}'; // Payload needed for GetSamplingRules POST request\n        const options = getOptions(this.samplingRulesPath, body.length);\n        const httpReq = this.httpClient.__request ? this.httpClient.__request : this.httpClient.request;\n        const req = httpReq(options, res => {\n            var data = '';\n            res.on('data', d => {\n                data += d;\n            });\n            res.on('error', error => {\n                callback(error);\n            });\n            res.on('end', () => {\n                var dataObj;\n                try {\n                    dataObj = JSON.parse(data);\n                }\n                catch (err) {\n                    callback(err);\n                    return;\n                }\n                if (!dataObj) {\n                    callback(new Error('AWS X-Ray GetSamplingRules API returned empty response'));\n                    return;\n                }\n                var newRules = assembleRules(dataObj);\n                callback(null, newRules);\n            });\n        });\n        req.on('error', () => {\n            callback(new Error(`Failed to connect to X-Ray daemon at ${options.hostname}:${options.port} to get sampling rules.`));\n        });\n        req.write(body);\n        req.end();\n    },\n    fetchTargets: function fetchTargets(rules, callback) {\n        const body = JSON.stringify(constructStatisticsDocs(rules));\n        const options = getOptions(this.samplingTargetsPath, body.length);\n        const httpReq = this.httpClient.__request ? this.httpClient.__request : this.httpClient.request;\n        const req = httpReq(options, res => {\n            var data = '';\n            res.on('data', d => {\n                data += d;\n            });\n            res.on('error', error => {\n                callback(error);\n            });\n            res.on('end', () => {\n                var dataObj;\n                try {\n                    dataObj = JSON.parse(data);\n                }\n                catch (err) {\n                    callback(err);\n                    return;\n                }\n                if (!dataObj || typeof dataObj['LastRuleModification'] != 'number') {\n                    callback(new Error('AWS X-Ray SamplingTargets API returned invalid response'));\n                    return;\n                }\n                var targetsMapping = assembleTargets(dataObj);\n                var ruleFreshness = dateToEpoch(dataObj['LastRuleModification']);\n                callback(null, targetsMapping, ruleFreshness);\n            });\n        });\n        req.on('error', () => {\n            callback(new Error(`Failed to connect to X-Ray daemon at ${options.hostname}:${options.port} to get sampling targets.`));\n        });\n        req.write(body);\n        req.end();\n    }\n};\nvar constructStatisticsDocs = function constructStatisticsDocs(rules) {\n    var documents = [];\n    var now = Math.floor(new Date().getTime() / 1000);\n    rules.forEach(function (rule) {\n        var statistics = rule.snapshotStatistics();\n        var doc = {\n            'RuleName': rule.getName(),\n            'ClientID': ServiceConnector.clientId,\n            'RequestCount': statistics.requestCount,\n            'BorrowCount': statistics.borrowCount,\n            'SampledCount': statistics.sampledCount,\n            'Timestamp': now\n        };\n        documents.push(doc);\n    });\n    return { SamplingStatisticsDocuments: documents };\n};\nvar assembleRules = function assembleRules(data) {\n    var newRules = [];\n    var ruleList = data['SamplingRuleRecords'] || [];\n    ruleList.forEach(function (ruleRecord) {\n        ruleRecord = ruleRecord['SamplingRule'];\n        // For forward compatibility reason right now it only\n        // deals with version 1 sampling rules.\n        if (isRuleValid(ruleRecord)) {\n            var newRule = new SamplingRule(ruleRecord['RuleName'], ruleRecord['Priority'], ruleRecord['FixedRate'], ruleRecord['ReservoirSize'], ruleRecord['Host'], ruleRecord['HTTPMethod'], ruleRecord['URLPath'], ruleRecord['ServiceName'], ruleRecord['ServiceType']);\n            newRules.push(newRule);\n        }\n    });\n    return newRules;\n};\nvar assembleTargets = function assembleTargets(data) {\n    var docs = data['SamplingTargetDocuments'] || [];\n    var targetsMapping = {};\n    docs.forEach(function (doc) {\n        var newTarget = {\n            rate: doc['FixedRate'],\n            quota: doc['ReservoirQuota'],\n            TTL: dateToEpoch(doc['ReservoirQuotaTTL']),\n            interval: doc['Interval']\n        };\n        targetsMapping[doc['RuleName']] = newTarget;\n    });\n    return targetsMapping;\n};\nvar isRuleValid = function isRuleValid(record) {\n    return record['Version'] === 1\n        && record['ResourceARN'] === '*'\n        && record['Attributes'] && Object.keys(record['Attributes']).length === 0\n        && record['ServiceType']\n        && record['RuleName']\n        && record['Priority']\n        && typeof record['FixedRate'] == 'number';\n};\nvar dateToEpoch = function dateToEpoch(date) {\n    return new Date(date).getTime() / 1000;\n};\nvar getOptions = function getOptions(path, contentLength) {\n    const options = {\n        hostname: DaemonConfig.tcp_ip,\n        port: DaemonConfig.tcp_port,\n        method: 'POST',\n        path: path,\n        headers: {\n            'Content-Type': 'application/json',\n            'Content-Length': contentLength,\n            'Host': util.format('%s:%d', DaemonConfig.tcp_ip, DaemonConfig.tcp_port)\n        }\n    };\n    return options;\n};\nmodule.exports = ServiceConnector;\n", "\"use strict\";\nvar TTL = 60 * 60; // The cache expires 1 hour after the last refresh time.\n/**\n * The rule cache that stores sampling rules fetched from X-Ray service.\n * @module RuleCache\n */\nvar RuleCache = {\n    rules: [],\n    lastUpdated: null,\n    /**\n     * Tries to find a valid rule that matches the sample request.\n     * @param {object} sampleRequest - Contains information for rules matching.\n     * @param {number} now - Current epoch in seconds.\n     * @module RuleCache\n     * @function getMatchedRule\n     */\n    getMatchedRule: function getMatchedRule(sampleRequest, now) {\n        if (isExpired(now)) {\n            return null;\n        }\n        var matchedRule;\n        this.rules.forEach(function (rule) {\n            if (!matchedRule && rule.match(sampleRequest)) {\n                matchedRule = rule;\n            }\n            if (rule.isDefault() && !matchedRule) {\n                matchedRule = rule;\n            }\n        });\n        return matchedRule;\n    },\n    /**\n     * Load rules fetched from X-Ray service in order sorted by priorities.\n     * @param {object} rules - Newly fetched rules to load.\n     * @module RuleCache\n     * @function loadRules\n     */\n    loadRules: function loadRules(rules) {\n        // Record the old rules for later merging.\n        var oldRules = {};\n        this.rules.forEach(function (rule) {\n            oldRules[rule.getName()] = rule;\n        });\n        // Update the rules in the cache.\n        this.rules = rules;\n        // Transfer state information to refreshed rules.\n        this.rules.forEach(function (rule) {\n            var oldRule = oldRules[rule.getName()];\n            if (oldRule) {\n                rule.merge(oldRule);\n            }\n        });\n        // The cache should maintain the order of the rules based on\n        // priority. If priority is the same we sort name by alphabet\n        // as rule name is unique.\n        this.rules.sort(function (a, b) {\n            var v = a.getPriority() - b.getPriority();\n            if (v !== 0) {\n                return v;\n            }\n            if (a.getName() > b.getName()) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        });\n    },\n    /**\n     * Load targets fetched from X-Ray service.\n     * @param {object} targetsMapping - Newly fetched targets map with rule name as key.\n     * @module RuleCache\n     * @function loadTargets\n     */\n    loadTargets: function loadTargets(targetsMapping) {\n        this.rules.forEach(function (rule) {\n            var target = targetsMapping[rule.getName()];\n            if (target) {\n                rule.getReservoir().loadNewQuota(target.quota, target.TTL, target.interval);\n                rule.setRate(target.rate);\n            }\n        });\n    },\n    getRules: function getRules() {\n        return this.rules;\n    },\n    timestamp: function timestamp(now) {\n        this.lastUpdated = now;\n    },\n    getLastUpdated: function getLastUpdated() {\n        return this.lastUpdated;\n    }\n};\nvar isExpired = function isExpired(now) {\n    // The cache is considered expired if it is never loaded.\n    if (!RuleCache.getLastUpdated()) {\n        return true;\n    }\n    return now > RuleCache.getLastUpdated() + TTL;\n};\nmodule.exports = RuleCache;\n", "\"use strict\";\nvar logger = require('../../logger');\nvar ServiceConnector = require('./service_connector');\nvar ruleCache = require('./rule_cache');\nvar DEFAULT_INTERVAL = 5 * 60 * 1000; // 5 minutes on sampling rules fetch\n/**\n * The RulePoller that periodically fetch sampling rules from X-Ray service\n * and load them into RuleCache.\n * @module RulePoller\n */\nvar RulePoller = {\n    start: function start() {\n        if (this.poller) {\n            clearInterval(this.poller);\n        }\n        // Refresh sampling rules cache with no jitter upon start.\n        refresh(false);\n        this.poller = setInterval(refresh, DEFAULT_INTERVAL);\n        this.poller.unref();\n    },\n};\nvar refresh = function refresh(jitter) {\n    // Add jitter by default unless explicitly told not to.\n    jitter = typeof jitter === 'undefined' ? true : jitter;\n    if (jitter) {\n        var delay = getJitter();\n        setTimeout(refreshWithFirewall, delay);\n    }\n    else {\n        refreshWithFirewall();\n    }\n};\nvar refreshWithFirewall = function refreshWithFirewall() {\n    try {\n        refreshCache();\n    }\n    catch (e) {\n        logger.getLogger().warn('Encountered unexpected exception when fetching sampling rules: ' + e);\n    }\n};\nvar refreshCache = function refreshCache() {\n    // Timestamp should be generated *before* the actual outbound call to ensure\n    // we don't mark the cache as being fresher than it actually is.\n    var now = Math.floor(new Date().getTime() / 1000);\n    // Pass a callback that only runs when the new rules are\n    // successfully fetched.\n    ServiceConnector.fetchSamplingRules(function (err, newRules) {\n        if (err) {\n            logger.getLogger().warn('Failed to retrieve sampling rules from X-Ray service:', err);\n        }\n        else if (newRules.length !== 0) {\n            ruleCache.loadRules(newRules);\n            ruleCache.timestamp(now);\n            logger.getLogger().info('Successfully refreshed centralized sampling rule cache.');\n        }\n    });\n};\n// A random jitter of up to 5 seconds is injected after every run to ensure\n// the calls eventually get evenly distributed over the 5 minute window.\nvar getJitter = function getJitter() {\n    return Math.random() * 5;\n};\nmodule.exports = RulePoller;\n", "\"use strict\";\nvar rulePoller = require('./rule_poller');\nvar serviceConnector = require('./service_connector');\nvar ruleCache = require('./rule_cache');\nvar logger = require('../../logger');\nvar DEFAULT_INTERVAL = 10 * 1000; // 10 seconds on sampling targets fetch\n/**\n * The TargetPoller that periodically fetch sampling targets from X-Ray service\n * and load them into RuleCache.\n * @module TargetPoller\n */\nvar TargetPoller = {\n    interval: DEFAULT_INTERVAL,\n    start: function start() {\n        this.poller = setInterval(refreshWithFirewall, DEFAULT_INTERVAL + getJitter());\n        this.poller.unref();\n    },\n};\nvar refreshWithFirewall = function refreshWithFirewall() {\n    try {\n        refresh();\n    }\n    catch (e) {\n        logger.getLogger().warn('Encountered unexpected exception when fetching sampling targets: ' + e);\n    }\n};\nvar refresh = function refresh() {\n    var candidates = getCandidates();\n    if (candidates && candidates.length > 0) {\n        serviceConnector.fetchTargets(candidates, function (err, targetsMapping, ruleFreshness) {\n            if (err) {\n                logger.getLogger().warn('Failed to retrieve sampling targets from X-Ray service:', err);\n                return;\n            }\n            ruleCache.loadTargets(targetsMapping);\n            if (ruleFreshness > ruleCache.getLastUpdated()) {\n                logger.getLogger().info('Performing out-of-band sampling rule polling to fetch updated rules.');\n                rulePoller.start();\n            }\n            logger.getLogger().info('Successfully reported rule statistics to get new sampling quota.');\n        });\n    }\n};\n// Don't report a rule statistics if any of the conditions is met:\n// 1. The report time hasn't come (some rules might have larger report intervals).\n// 2. The rule is never matched.\nvar getCandidates = function getCandidates() {\n    var rules = ruleCache.getRules();\n    var candidates = [];\n    rules.forEach(function (rule) {\n        if (rule.everMatched() && rule.timeToReport()) {\n            candidates.push(rule);\n        }\n    });\n    return candidates;\n};\n// A random jitter of up to 0.1 seconds is injected after every run to ensure\n// the calls eventually get evenly distributed over the 10 second window.\nvar getJitter = function getJitter() {\n    return Math.random() / TargetPoller.interval;\n};\nmodule.exports = TargetPoller;\n", "\"use strict\";\nvar logger = require('../../logger');\nconst util = require('util');\nvar SegmentUtils = require('../../segments/segment_utils');\n/**\n * The default sampler used to make sampling decisions when the decisions are absent in the incoming requests.\n * The sampler use pollers to poll sampling rules from X-Ray service.\n * @module DefaultSampler\n */\nvar DefaultSampler = {\n    localSampler: require('./local_sampler'),\n    rulePoller: require('./rule_poller'),\n    targetPoller: require('./target_poller'),\n    ruleCache: require('./rule_cache'),\n    started: false,\n    /**\n     * Makes a sample decision based on the sample request.\n     * @param {object} sampleRequest - Contains information for rules matching.\n     * @module DefaultSampler\n     * @function shouldSample\n     */\n    shouldSample: function shouldSample(sampleRequest) {\n        try {\n            if (!this.started) {\n                this.start();\n            }\n            if (!sampleRequest.serviceType) {\n                sampleRequest.serviceType = SegmentUtils.origin;\n            }\n            var now = Math.floor(new Date().getTime() / 1000);\n            var matchedRule = this.ruleCache.getMatchedRule(sampleRequest, now);\n            if (matchedRule) {\n                logger.getLogger().debug(util.format('Rule %s is matched.', matchedRule.getName()));\n                return processMatchedRule(matchedRule, now);\n            }\n            else {\n                logger.getLogger().info('No effective centralized sampling rule match. Fallback to local rules.');\n                return this.localSampler.shouldSample(sampleRequest);\n            }\n        }\n        catch (err) {\n            logger.getLogger().error('Unhandled exception by the SDK during making sampling decisions: ' + err);\n        }\n    },\n    /**\n     * Set local rules in case there is a need to fallback.\n     * @module DefaultSampler\n     * @function setLocalRules\n     */\n    setLocalRules: function setLocalRules(source) {\n        this.localSampler.setLocalRules(source);\n    },\n    /**\n     * Start the pollers to poll sampling rules and targets from X-Ray service.\n     * @module DefaultSampler\n     * @function start\n     */\n    start: function start() {\n        if (!this.started) {\n            this.rulePoller.start();\n            this.targetPoller.start();\n            this.started = true;\n        }\n    }\n};\nvar processMatchedRule = function processMatchedRule(rule, now) {\n    // As long as a rule is matched we increment request counter.\n    rule.incrementRequestCount();\n    var reservoir = rule.getReservoir();\n    var sample = true;\n    // We check if we can borrow or take from reservoir first.\n    var decision = reservoir.borrowOrTake(now, rule.canBorrow());\n    if (decision === 'borrow') {\n        rule.incrementBorrowCount();\n    }\n    else if (decision === 'take') {\n        rule.incrementSampledCount();\n    }\n    else if (Math.random() <= rule.getRate()) {\n        // Otherwise we compute based on FixedRate of this sampling rule.\n        rule.incrementSampledCount();\n    }\n    else {\n        sample = false;\n    }\n    if (sample) {\n        return rule.getName();\n    }\n    else {\n        return false;\n    }\n};\nmodule.exports = DefaultSampler;\n", "\"use strict\";\n/**\n * Middleware Utils module.\n *\n * Exposes various configuration and helper methods to be used by the middleware.\n * @module mw_utils\n */\nvar Segment = require('../segments/segment');\nvar IncomingRequestData = require('./incoming_request_data');\nvar logger = require('../logger');\nvar coreUtils = require('../utils');\nvar wildcardMatch = require('../utils').wildcardMatch;\nvar processTraceData = require('../utils').processTraceData;\n//headers are case-insensitive\nvar XRAY_HEADER = 'x-amzn-trace-id';\nvar overrideFlag = !!process.env.AWS_XRAY_TRACING_NAME;\nvar utils = {\n    defaultName: process.env.AWS_XRAY_TRACING_NAME,\n    dynamicNaming: false,\n    hostPattern: null,\n    sampler: require('./sampling/default_sampler'),\n    /**\n     * Enables dynamic naming for segments via the middleware. Use 'AWSXRay.middleware.enableDynamicNaming()'.\n     * @param {string} [hostPattern] - The pattern to match the host header. See the README on dynamic and fixed naming modes.\n     * @alias module:mw_utils.enableDynamicNaming\n     */\n    enableDynamicNaming: function (hostPattern) {\n        this.dynamicNaming = true;\n        if (hostPattern && typeof hostPattern !== 'string') {\n            throw new Error('Host pattern must be a string.');\n        }\n        this.hostPattern = hostPattern || null;\n    },\n    /**\n     * Splits out the 'x-amzn-trace-id' header params from the incoming request.  Used by the middleware.\n     * @param {http.IncomingMessage|https.IncomingMessage} req - The request object from the incoming call.\n     * @returns {object}\n     * @alias module:mw_utils.processHeaders\n     */\n    processHeaders: function processHeaders(req) {\n        var amznTraceHeader = {};\n        if (req && req.headers && req.headers[XRAY_HEADER]) {\n            amznTraceHeader = processTraceData(req.headers[XRAY_HEADER]);\n        }\n        return amznTraceHeader;\n    },\n    /**\n     * Resolves the name of the segment as determined by fixed or dynamic mode options. Used by the middleware.\n     * @param {string} hostHeader - The string from the request.headers.host property.\n     * @returns {string}\n     * @alias module:mw_utils.resolveName\n     */\n    resolveName: function resolveName(hostHeader) {\n        var name;\n        if (this.dynamicNaming && hostHeader) {\n            name = this.hostPattern ? (wildcardMatch(this.hostPattern, hostHeader) ? hostHeader : this.defaultName) : hostHeader;\n        }\n        else {\n            name = this.defaultName;\n        }\n        return name;\n    },\n    /**\n     * Resolves the sampling decision as determined by the values given and options set. Used by the middleware.\n     * @param {object} amznTraceHeader - The object as returned by the processHeaders function.\n     * @param {Segment} segment - The string from the request.headers.host property.\n     * @param {http.ServerResponse|https.ServerResponse} res - The response object from the incoming call.\n     * @returns {boolean}\n     * @alias module:mw_utils.resolveSampling\n     */\n    resolveSampling: function resolveSampling(amznTraceHeader, segment, res) {\n        var isSampled;\n        if (amznTraceHeader.sampled === '1') {\n            isSampled = true;\n        }\n        else if (amznTraceHeader.sampled === '0') {\n            isSampled = false;\n        }\n        else {\n            var sampleRequest = {\n                host: res.req.headers.host,\n                httpMethod: res.req.method,\n                urlPath: res.req.url,\n                serviceName: segment.name\n            };\n            isSampled = this.sampler.shouldSample(sampleRequest);\n            if (isSampled instanceof String || typeof isSampled === 'string') {\n                segment.setMatchedSamplingRule(isSampled);\n                isSampled = true;\n            }\n        }\n        if (amznTraceHeader.sampled === '?') {\n            res.header[XRAY_HEADER] = 'Root=' + amznTraceHeader.root + ';Sampled=' + (isSampled ? '1' : '0');\n        }\n        if (!isSampled) {\n            segment.notTraced = true;\n        }\n    },\n    /**\n     * Sets the default name of created segments. Used with the middleware.\n     * Can be overridden by the AWS_XRAY_TRACING_NAME environment variable.\n     * @param {string} name - The default name for segments created in the middleware.\n     * @alias module:mw_utils.setDefaultName\n     */\n    setDefaultName: function setDefaultName(name) {\n        if (!overrideFlag) {\n            this.defaultName = name;\n        }\n    },\n    disableCentralizedSampling: function disableCentralizedSampling() {\n        this.sampler = require('./sampling/local_sampler');\n    },\n    /**\n     * Overrides the default sampling rules file to specify at what rate to sample at for specific routes.\n     * The base sampling rules file can be found at /lib/resources/default_sampling_rules.json\n     * @param {string|Object} source - The path to the custom sampling rules file, or the source JSON object.\n     * @memberof AWSXRay\n     */\n    setSamplingRules: function setSamplingRules(source) {\n        if (!source || source instanceof String || !(typeof source === 'string' || (source instanceof Object))) {\n            throw new Error('Please specify a path to the local sampling rules file, or supply an object containing the rules.');\n        }\n        this.sampler.setLocalRules(source);\n    },\n    /**\n     * Logs a debug message including core request and segment information\n     * @param {string} message - The message to be logged\n     * @param {string} url - The request url being traced\n     * @param {Segment} - The current segment\n     */\n    middlewareLog: function middlewareLog(message, url, segment) {\n        logger.getLogger().debug(message + ': { url: ' + url + ', name: ' + segment.name + ', trace_id: ' +\n            segment.trace_id + ', id: ' + segment.id + ', sampled: ' + !segment.notTraced + ' }');\n    },\n    /**\n     * Traces the request/response cycle of an http.IncomingMessage / http.ServerResponse pair.\n     * Resolves sampling rules, creates a segment, adds the core request / response data adding\n     * throttling / error / fault flags based on the response status code.\n     * @param {http.IncomingMessage} req - The incoming request.\n     * @param {http.ServerResponse} res - The server response.\n     * @returns {Segment}\n     * @memberof AWSXRay\n     */\n    traceRequestResponseCycle: function traceRequestResponseCycle(req, res) {\n        var amznTraceHeader = this.processHeaders(req);\n        var name = this.resolveName(req.headers.host);\n        var segment = new Segment(name, amznTraceHeader.root, amznTraceHeader.parent);\n        var responseWithEmbeddedRequest = Object.assign({}, res, { req: req });\n        this.resolveSampling(amznTraceHeader, segment, responseWithEmbeddedRequest);\n        segment.addIncomingRequestData(new IncomingRequestData(req));\n        this.middlewareLog('Starting middleware segment', req.url, segment);\n        var middlewareLog = this.middlewareLog;\n        var didEnd = false;\n        var endSegment = function () {\n            // ensure `endSegment` is only called once\n            // in some versions of node.js 10.x and in all versions of node.js 11.x and higher,\n            // the 'finish' and 'close' event are BOTH triggered.\n            // Previously, only one or the other was triggered:\n            // https://github.com/nodejs/node/pull/20611\n            if (didEnd) {\n                return;\n            }\n            didEnd = true;\n            if (res.statusCode === 429) {\n                segment.addThrottleFlag();\n            }\n            const cause = coreUtils.getCauseTypeFromHttpStatus(res.statusCode);\n            if (cause) {\n                segment[cause] = true;\n            }\n            segment.http.close(res);\n            segment.close();\n            middlewareLog('Closed middleware segment successfully', req.url, segment);\n        };\n        res.on('finish', endSegment);\n        res.on('close', endSegment);\n        return segment;\n    }\n};\nmodule.exports = utils;\n", "\"use strict\";\nvar contextUtils = require('../context_utils');\nvar mwUtils = require('../middleware/mw_utils');\nvar LambdaUtils = require('../utils').LambdaUtils;\nvar Segment = require('../segments/segment');\nvar SegmentEmitter = require('../segment_emitter');\nvar SegmentUtils = require('../segments/segment_utils');\nvar logger = require('../logger');\nconst TraceID = require('../segments/attributes/trace_id');\n/**\n * @namespace\n * @ignore\n */\nvar xAmznTraceIdPrev = null;\n/**\n* Used to initialize segments on AWS Lambda with extra data from the context.\n*/\nmodule.exports.init = function init() {\n    contextUtils.enableManualMode = function () {\n        logger.getLogger().warn('AWS Lambda does not support AWS X-Ray manual mode.');\n    };\n    SegmentEmitter.disableReusableSocket();\n    SegmentUtils.setStreamingThreshold(0);\n    /**\n     * Disabling all centralized sampling in Lambda environments. The sampling decisions would be\n     * uselessly applied to the facade segment, and the sampling pollers were causing errors.\n     *\n     * See: https://github.com/aws/aws-xray-sdk-node/issues/217\n     */\n    logger.getLogger().info('Disabling centralized sampling in Lambda environment.');\n    mwUtils.disableCentralizedSampling();\n    var namespace = contextUtils.getNamespace();\n    namespace.enter(namespace.createContext());\n    contextUtils.setSegment(facadeSegment());\n};\nvar facadeSegment = function facadeSegment() {\n    var segment = new Segment('facade');\n    var whitelistFcn = ['addNewSubsegment', 'addSubsegment', 'removeSubsegment', 'toString', 'addSubsegmentWithoutSampling', 'addNewSubsegmentWithoutSampling'];\n    var silentFcn = ['incrementCounter', 'decrementCounter', 'isClosed', 'close', 'format', 'flush'];\n    var xAmznTraceId = process.env._X_AMZN_TRACE_ID;\n    for (var key in segment) {\n        if (typeof segment[key] === 'function' && whitelistFcn.indexOf(key) === -1) {\n            if (silentFcn.indexOf(key) === -1) {\n                segment[key] = (function () {\n                    var func = key;\n                    return function facade() {\n                        logger.getLogger().warn('Function \"' + func + '\" cannot be called on an AWS Lambda segment. Please use a subsegment to record data.');\n                        return;\n                    };\n                })();\n            }\n            else {\n                segment[key] = function facade() {\n                    return;\n                };\n            }\n        }\n    }\n    segment.trace_id = TraceID.Invalid().toString();\n    segment.isClosed = function () {\n        return true;\n    };\n    segment.in_progress = false;\n    segment.counter = 1;\n    segment.notTraced = true;\n    segment.facade = true;\n    segment.reset = function reset() {\n        this.trace_id = TraceID.Invalid().toString();\n        this.id = '00000000';\n        delete this.subsegments;\n        this.notTraced = true;\n    };\n    segment.resolveLambdaTraceData = function resolveLambdaTraceData() {\n        var xAmznLambda = process.env._X_AMZN_TRACE_ID;\n        if (xAmznLambda) {\n            // This check resets the trace data whenever a new trace header is read to not leak data between invocations\n            if (xAmznLambda != xAmznTraceIdPrev) {\n                this.reset();\n                if (LambdaUtils.populateTraceData(segment, xAmznLambda)) {\n                    xAmznTraceIdPrev = xAmznLambda;\n                }\n            }\n        }\n        else {\n            this.reset();\n            contextUtils.contextMissingStrategy.contextMissing('Missing AWS Lambda trace data for X-Ray. ' +\n                'Ensure Active Tracing is enabled and no subsegments are created outside the function handler.');\n        }\n    };\n    // Test for valid trace data during SDK startup. It's likely we're still in the cold-start portion of the\n    // code at this point and a valid trace header has not been set\n    if (LambdaUtils.validTraceData(xAmznTraceId)) {\n        if (LambdaUtils.populateTraceData(segment, xAmznTraceId)) {\n            xAmznTraceIdPrev = xAmznTraceId;\n        }\n    }\n    return segment;\n};\n", "{\n  \"name\": \"aws-xray-sdk-core\",\n  \"version\": \"3.5.3\",\n  \"description\": \"AWS X-Ray SDK for Javascript\",\n  \"author\": \"Amazon Web Services\",\n  \"contributors\": [\n    \"Sandra McMullen <mcmuls@amazon.com>\",\n    \"William Armiros <armiros@amazon.com>\",\n    \"Moritz Onken <onken@netcubed.de>\"\n  ],\n  \"files\": [\n    \"dist/lib/**/*\",\n    \"LICENSE\",\n    \"README.md\"\n  ],\n  \"main\": \"dist/lib/index.js\",\n  \"types\": \"dist/lib/index.d.ts\",\n  \"engines\": {\n    \"node\": \">= 14.x\"\n  },\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"//\": \"@types/cls-hooked is exposed in API so must be in dependencies, not devDependencies\",\n  \"dependencies\": {\n    \"@aws-sdk/types\": \"^3.4.1\",\n    \"@smithy/service-error-classification\": \"^2.0.4\",\n    \"@types/cls-hooked\": \"^4.3.3\",\n    \"atomic-batcher\": \"^1.0.2\",\n    \"cls-hooked\": \"^4.2.2\",\n    \"semver\": \"^7.5.3\"\n  },\n  \"scripts\": {\n    \"prepare\": \"npm run compile\",\n    \"compile\": \"tsc && npm run copy-lib && npm run copy-test\",\n    \"copy-lib\": \"find lib -type f \\\\( -name '*.d.ts' -o -name '*.json' \\\\) | xargs -I % ../../scripts/cp-with-structure.sh % dist\",\n    \"copy-test\": \"find test -name '*.json' | xargs -I % ../../scripts/cp-with-structure.sh % dist\",\n    \"lint\": \"eslint .\",\n    \"lint:fix\": \"eslint . --fix\",\n    \"test\": \"npm run compile && mocha --recursive ./dist/test/ -R spec && tsd && mocha --recursive ./dist/test_async/ -R spec\",\n    \"test-d\": \"tsd\",\n    \"test-async\": \"npm run compile && mocha --recursive ./dist/test_async/ -R spec\",\n    \"clean\": \"rm -rf dist && rm -rf node_modules\",\n    \"testcov\": \"nyc npm run test\",\n    \"reportcov\": \"nyc report --reporter=text-lcov > coverage.lcov && codecov\"\n  },\n  \"keywords\": [\n    \"amazon\",\n    \"api\",\n    \"aws\",\n    \"core\",\n    \"xray\",\n    \"x-ray\",\n    \"x ray\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"repository\": \"https://github.com/aws/aws-xray-sdk-node/tree/master/packages/core\",\n  \"gitHead\": \"b6fb64960486d1ea4acd7fdf959e90ff52a774ea\"\n}\n", "\"use strict\";\nvar http = require('http');\nvar Plugin = {\n    METADATA_TIMEOUT: 1000,\n    /**\n     * Asynchronously retrieves metadata from on-instance endpoint with an HTTP request using retries for\n     * requests that time out.\n     * @param {object} options - The HTTP options to make the request with\n     * @param {function} callback - callback to plugin\n     */\n    getPluginMetadata: function (options, callback) {\n        const METADATA_RETRY_TIMEOUT = 250; // Millis\n        const METADATA_RETRIES = 5;\n        var retries = METADATA_RETRIES;\n        var getMetadata = function () {\n            var httpReq = http.__request ? http.__request : http.request;\n            var req = httpReq(options, function (res) {\n                var body = '';\n                res.on('data', function (chunk) {\n                    body += chunk;\n                });\n                res.on('end', function () {\n                    if (this.statusCode === 200 || this.statusCode === 300) {\n                        try {\n                            body = JSON.parse(body);\n                        }\n                        catch (e) {\n                            callback(e);\n                            return;\n                        }\n                        callback(null, body);\n                    }\n                    else if (retries > 0 && Math.floor(this.statusCode / 100) === 5) {\n                        retries--;\n                        setTimeout(getMetadata, METADATA_RETRY_TIMEOUT);\n                    }\n                    else {\n                        callback(new Error(`Failed to retrieve metadata with options: ${options}`));\n                    }\n                });\n            });\n            req.on('error', function (err) {\n                callback(err);\n            });\n            req.on('timeout', function () {\n                req.abort();\n            });\n            req.setTimeout(Plugin.METADATA_TIMEOUT);\n            req.end();\n        };\n        getMetadata();\n    }\n};\nmodule.exports = Plugin;\n", "\"use strict\";\nvar Plugin = require('./plugin');\nvar logger = require('../../logger');\nvar http = require('http');\nvar EC2Plugin = {\n    /**\n     * A function to get the instance data from the EC2 metadata service.\n     * @param {function} callback - The callback for the plugin loader.\n     */\n    getData: function (callback) {\n        const METADATA_PATH = '/latest/dynamic/instance-identity/document';\n        function populateMetadata(token) {\n            const options = getOptions(METADATA_PATH, 'GET', token ? { 'X-aws-ec2-metadata-token': token } : {});\n            Plugin.getPluginMetadata(options, function (err, data) {\n                if (err || !data) {\n                    logger.getLogger().error('Error loading EC2 plugin metadata: ', err ? err.toString() : 'Could not retrieve data from IMDS.');\n                    callback();\n                    return;\n                }\n                const metadata = {\n                    ec2: {\n                        instance_id: data.instanceId,\n                        availability_zone: data.availabilityZone,\n                        instance_size: data.instanceType,\n                        ami_id: data.imageId\n                    }\n                };\n                callback(metadata);\n            });\n        }\n        /**\n         * This kicks off a requet to get a token used for requests to IMDSv2. If the request for the token\n         * fails, we fall back to IMDSv1. Otherwise, the token will be used for an IMDSv2 request.\n         */\n        getToken(function (token) {\n            if (token === null) {\n                logger.getLogger().debug('EC2Plugin failed to get token from IMDSv2. Falling back to IMDSv1.');\n            }\n            populateMetadata(token);\n        });\n    },\n    originName: 'AWS::EC2::Instance'\n};\n/**\n * Asynchronously retrieves a token used in requests to EC2 instance metadata service.\n * @param {function} callback - callback to plugin\n */\nfunction getToken(callback) {\n    const httpReq = http.__request ? http.__request : http.request;\n    const TTL = 60; //seconds\n    const TOKEN_PATH = '/latest/api/token';\n    const options = getOptions(TOKEN_PATH, 'PUT', {\n        'X-aws-ec2-metadata-token-ttl-seconds': TTL\n    });\n    let req = httpReq(options, function (res) {\n        let body = '';\n        res.on('data', function (chunk) {\n            body += chunk;\n        });\n        res.on('end', function () {\n            if (this.statusCode === 200 || this.statusCode === 300) {\n                callback(body);\n            }\n            else {\n                callback(null);\n            }\n        });\n    });\n    req.on('error', function () {\n        callback(null);\n    });\n    req.on('timeout', function () {\n        req.abort();\n        callback(null);\n    });\n    req.setTimeout(Plugin.METADATA_TIMEOUT);\n    req.end();\n}\nfunction getOptions(path, method, headers) {\n    if (!method) {\n        method = 'GET';\n    }\n    if (!headers) {\n        headers = {};\n    }\n    return {\n        host: '169.254.169.254',\n        path: path,\n        method: method,\n        headers: headers\n    };\n}\nmodule.exports = EC2Plugin;\n", "\"use strict\";\nvar os = require('os');\nvar ECSPlugin = {\n    /**\n     * A function to get the instance data from the ECS instance.\n     * @param {function} callback - The callback for the plugin loader.\n     */\n    getData: function (callback) {\n        callback({ ecs: { container: os.hostname() } });\n    },\n    originName: 'AWS::ECS::Container'\n};\nmodule.exports = ECSPlugin;\n", "\"use strict\";\nvar fs = require('fs');\nvar logger = require('../../logger');\nvar ENV_CONFIG_LOCATION = '/var/elasticbeanstalk/xray/environment.conf';\nvar ElasticBeanstalkPlugin = {\n    /**\n     * A function to get data from the Elastic Beanstalk environment configuration file.\n     * @param {function} callback - The callback for the plugin loader.\n     */\n    getData: function (callback) {\n        fs.readFile(ENV_CONFIG_LOCATION, 'utf8', function (err, rawData) {\n            if (err) {\n                logger.getLogger().error('Error loading Elastic Beanstalk plugin:', err.stack);\n                callback();\n            }\n            else {\n                var data = JSON.parse(rawData);\n                var metadata = {\n                    elastic_beanstalk: {\n                        environment: data.environment_name,\n                        version_label: data.version_label,\n                        deployment_id: data.deployment_id\n                    }\n                };\n                callback(metadata);\n            }\n        });\n    },\n    originName: 'AWS::ElasticBeanstalk::Environment'\n};\nmodule.exports = ElasticBeanstalkPlugin;\n", "{\n  \"services\": {\n    \"dynamodb\": {\n      \"operations\": {\n        \"batchGetItem\": {\n          \"request_descriptors\": {\n            \"RequestItems\": {\n              \"get_keys\": true,\n              \"rename_to\": \"table_names\"\n            }\n          },\n          \"response_parameters\": [\n            \"ConsumedCapacity\"\n          ]\n        },\n        \"batchWriteItem\": {\n          \"request_descriptors\": {\n            \"RequestItems\": {\n              \"get_keys\": true,\n              \"rename_to\": \"table_names\"\n            }\n          },\n          \"response_parameters\": [\n            \"ConsumedCapacity\",\n            \"ItemCollectionMetrics\"\n          ]\n        },\n        \"createTable\": {\n          \"request_parameters\": [\n            \"GlobalSecondaryIndexes\",\n            \"LocalSecondaryIndexes\",\n            \"ProvisionedThroughput\",\n            \"TableName\"\n          ]\n        },\n        \"deleteItem\": {\n          \"request_parameters\": [\n            \"TableName\"\n          ],\n          \"response_parameters\": [\n            \"ConsumedCapacity\",\n            \"ItemCollectionMetrics\"\n          ]\n        },\n        \"deleteTable\": {\n          \"request_parameters\": [\n            \"TableName\"\n          ]\n        },\n        \"describeTable\": {\n          \"request_parameters\": [\n            \"TableName\"\n          ]\n        },\n        \"getItem\": {\n          \"request_parameters\": [\n            \"ConsistentRead\",\n            \"ProjectionExpression\",\n            \"TableName\"\n          ],\n          \"response_parameters\": [\n            \"ConsumedCapacity\"\n          ]\n        },\n        \"listTables\": {\n          \"request_parameters\": [\n            \"ExclusiveStartTableName\",\n            \"Limit\"\n          ],\n          \"response_descriptors\": {\n            \"TableNames\": {\n              \"list\": true,\n              \"get_count\": true,\n              \"rename_to\": \"table_count\"\n            }\n          }\n        },\n        \"putItem\": {\n          \"request_parameters\": [\n            \"TableName\"\n          ],\n          \"response_parameters\": [\n            \"ConsumedCapacity\",\n            \"ItemCollectionMetrics\"\n          ]\n        },\n        \"query\": {\n          \"request_parameters\": [\n            \"AttributesToGet\",\n            \"ConsistentRead\",\n            \"IndexName\",\n            \"Limit\",\n            \"ProjectionExpression\",\n            \"ScanIndexForward\",\n            \"Select\",\n            \"TableName\"\n          ],\n          \"response_parameters\": [\n            \"ConsumedCapacity\"\n          ]\n        },\n        \"scan\": {\n          \"request_parameters\": [\n            \"AttributesToGet\",\n            \"ConsistentRead\",\n            \"IndexName\",\n            \"Limit\",\n            \"ProjectionExpression\",\n            \"Segment\",\n            \"Select\",\n            \"TableName\",\n            \"TotalSegments\"\n          ],\n          \"response_parameters\": [\n            \"ConsumedCapacity\",\n            \"Count\",\n            \"ScannedCount\"\n          ]\n        },\n        \"updateItem\": {\n          \"request_parameters\": [\n            \"TableName\"\n          ],\n          \"response_parameters\": [\n            \"ConsumedCapacity\",\n            \"ItemCollectionMetrics\"\n          ]\n        },\n        \"updateTable\": {\n          \"request_parameters\": [\n            \"AttributeDefinitions\",\n            \"GlobalSecondaryIndexUpdates\",\n            \"ProvisionedThroughput\",\n            \"TableName\"\n          ]\n        }\n      }\n    },\n    \"sqs\": {\n      \"operations\": {\n        \"addPermission\": {\n          \"request_parameters\": [\n            \"Label\",\n            \"QueueUrl\"\n          ]\n        },\n        \"changeMessageVisibility\": {\n          \"request_parameters\": [\n            \"QueueUrl\",\n            \"VisibilityTimeout\"\n          ]\n        },\n        \"changeMessageVisibilityBatch\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ],\n          \"response_parameters\": [\n            \"Failed\"\n          ]\n        },\n        \"createQueue\": {\n          \"request_parameters\": [\n            \"Attributes\",\n            \"QueueName\"\n          ]\n        },\n        \"deleteMessage\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ]\n        },\n        \"deleteMessageBatch\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ],\n          \"response_parameters\": [\n            \"Failed\"\n          ]\n        },\n        \"deleteQueue\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ]\n        },\n        \"getQueueAttributes\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ],\n          \"response_parameters\": [\n            \"Attributes\"\n          ]\n        },\n        \"getQueueUrl\": {\n          \"request_parameters\": [\n            \"QueueName\",\n            \"QueueOwnerAWSAccountId\"\n          ],\n          \"response_parameters\": [\n            \"QueueUrl\"\n          ]\n        },\n        \"listDeadLetterSourceQueues\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ],\n          \"response_parameters\": [\n            \"QueueUrls\"\n          ]\n        },\n        \"listQueues\": {\n          \"request_parameters\": [\n            \"QueueNamePrefix\"\n          ],\n          \"response_descriptors\": {\n            \"QueueUrls\": {\n              \"list\": true,\n              \"get_count\": true,\n              \"rename_to\": \"queue_count\"\n            }\n          }\n        },\n        \"purgeQueue\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ]\n        },\n        \"receiveMessage\": {\n          \"request_parameters\": [\n            \"AttributeNames\",\n            \"MaxNumberOfMessages\",\n            \"MessageAttributeNames\",\n            \"QueueUrl\",\n            \"VisibilityTimeout\",\n            \"WaitTimeSeconds\"\n          ],\n          \"response_descriptors\": {\n            \"Messages\": {\n              \"list\": true,\n              \"get_count\": true,\n              \"rename_to\": \"message_count\"\n            }\n          }\n        },\n        \"removePermission\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ]\n        },\n        \"sendMessage\": {\n          \"request_parameters\": [\n            \"DelaySeconds\",\n            \"QueueUrl\"\n          ],\n          \"request_descriptors\": {\n            \"MessageAttributes\": {\n              \"get_keys\": true,\n              \"rename_to\": \"message_attribute_names\"\n            }\n          },\n          \"response_parameters\": [\n            \"MessageId\"\n          ]\n        },\n        \"sendMessageBatch\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ],\n          \"request_descriptors\": {\n            \"Entries\": {\n              \"list\": true,\n              \"get_count\": true,\n              \"rename_to\": \"message_count\"\n            }\n          },\n          \"response_descriptors\": {\n            \"Failed\": {\n              \"list\": true,\n              \"get_count\": true,\n              \"rename_to\": \"failed_count\"\n            },\n            \"Successful\": {\n              \"list\": true,\n              \"get_count\": true,\n              \"rename_to\": \"successful_count\"\n            }\n          }\n        },\n        \"setQueueAttributes\": {\n          \"request_parameters\": [\n            \"QueueUrl\"\n          ],\n          \"request_descriptors\": {\n            \"Attributes\": {\n              \"get_keys\": true,\n              \"rename_to\": \"attribute_names\"\n            }\n          }\n        }\n      }\n    },\n    \"sns\": {\n      \"operations\": {\n        \"publish\": {\n          \"request_parameters\": [\n            \"TopicArn\"\n          ]\n        },\n        \"publishBatch\": {\n          \"request_parameters\": [\n            \"TopicArn\"\n          ]\n        }\n      }\n    },\n    \"lambda\": {\n      \"operations\": {\n        \"invoke\": {\n          \"request_parameters\": [\n            \"FunctionName\",\n            \"InvocationType\",\n            \"LogType\",\n            \"Qualifier\"\n          ],\n          \"response_parameters\": [\n            \"FunctionError\",\n            \"StatusCode\"\n          ]\n        },\n        \"invokeAsync\": {\n          \"request_parameters\": [\n            \"FunctionName\"\n          ],\n          \"response_parameters\": [\n            \"Status\"\n          ]\n        }\n      }\n    },\n    \"s3\": {\n      \"operations\": {\n        \"abortMultipartUpload\": {\n          \"request_parameters\": [\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"completeMultipartUpload\": {\n          \"request_parameters\": [\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"copyObject\": {\n          \"request_parameters\": [\n            \"CopySource\",\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"createBucket\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"createMultipartUpload\": {\n          \"request_parameters\": [\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucket\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketAnalyticsConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketCors\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketEncryption\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketInventoryConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketLifecycle\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketMetricsConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketPolicy\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketReplication\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketTagging\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteBucketWebsite\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteObject\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteObjectTagging\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"deleteObjects\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketAccelerateConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketAcl\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketAnalyticsConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketCors\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketEncryption\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketInventoryConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketLifecycle\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketLifecycleConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketLocation\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketLogging\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketMetricsConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketNotification\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketNotificationConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketPolicy\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketReplication\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketRequestPayment\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketTagging\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketVersioning\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getBucketWebsite\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getObject\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getObjectAcl\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getObjectTagging\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"getObjectTorrent\": {\n          \"request_parameters\": [\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"headBucket\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"headObject\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listBucketAnalyticsConfigurations\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listBucketInventoryConfigurations\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listBucketMetricsConfigurations\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listMultipartUploads\": {\n          \"request_parameters\": [\n            \"Prefix\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listObjectVersions\": {\n          \"request_parameters\": [\n            \"Prefix\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listObjects\": {\n          \"request_parameters\": [\n            \"Prefix\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listObjectsV2\": {\n          \"request_parameters\": [\n            \"Prefix\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"listParts\": {\n          \"request_parameters\": [\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketAccelerateConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketAcl\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketAnalyticsConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketCors\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketEncryption\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketInventoryConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketLifecycle\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketLifecycleConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketLogging\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketMetricsConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketNotification\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketNotificationConfiguration\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketPolicy\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketReplication\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketRequestPayment\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketTagging\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketVersioning\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putBucketWebsite\": {\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putObject\": {\n          \"request_parameters\": [\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putObjectAcl\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"putObjectTagging\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"restoreObject\": {\n          \"request_parameters\": [\n            \"Key\",\n            \"VersionId\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"uploadPart\": {\n          \"request_parameters\": [\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        },\n        \"uploadPartCopy\": {\n          \"request_parameters\": [\n            \"CopySource\",\n            \"Key\"\n          ],\n          \"request_descriptors\": {\n            \"Bucket\": {\n              \"rename_to\": \"bucket_name\"\n            }\n          }\n        }\n      }\n    },\n    \"sagemakerruntime\": {\n      \"operations\": {\n        \"invokeEndpoint\": {\n          \"request_parameters\": [\n            \"EndpointName\"\n          ]\n        }\n      }\n    }\n  }\n}\n", "\"use strict\";\nvar fs = require('fs');\nvar logger = require('../logger');\nvar whitelist = require('../resources/aws_whitelist.json');\nvar paramTypes = {\n    REQ_DESC: 'request_descriptors',\n    REQ_PARAMS: 'request_parameters',\n    RES_DESC: 'response_descriptors',\n    RES_PARAMS: 'response_parameters'\n};\n/**\n * Represents a set of AWS services, operations and keys or params to capture.\n * @constructor\n * @param {string|Object} [source] - The location or source JSON object of the custom AWS whitelist file. If none is provided, the default file will be used.\n */\nfunction CallCapturer(source) {\n    this.init(source);\n}\nCallCapturer.prototype.init = function init(source) {\n    if (source) {\n        if (typeof source === 'string') {\n            logger.getLogger().info('Using custom AWS whitelist file: ' + source);\n            this.services = loadWhitelist(JSON.parse(fs.readFileSync(source, 'utf8')));\n        }\n        else {\n            logger.getLogger().info('Using custom AWS whitelist source.');\n            this.services = loadWhitelist(source);\n        }\n    }\n    else {\n        this.services = whitelist.services;\n    }\n};\nCallCapturer.prototype.append = function append(source) {\n    var newServices = {};\n    if (typeof source === 'string') {\n        logger.getLogger().info('Appending AWS whitelist with custom file: ' + source);\n        newServices = loadWhitelist(JSON.parse(fs.readFileSync(source, 'utf8')));\n    }\n    else {\n        logger.getLogger().info('Appending AWS whitelist with a custom source.');\n        newServices = loadWhitelist(source);\n    }\n    for (var attribute in newServices) {\n        this.services[attribute] = newServices[attribute];\n    }\n};\nCallCapturer.prototype.capture = function capture(serviceName, response) {\n    var operation = response.request.operation;\n    var call = this.services[serviceName] !== undefined ? this.services[serviceName].operations[operation] : null;\n    if (call === null) {\n        logger.getLogger().debug('Call \"' + serviceName + '.' + operation + '\" is not whitelisted for additional data capturing. Ignoring.');\n        return;\n    }\n    var dataCaptured = {};\n    for (var paramType in call) {\n        var params = call[paramType];\n        if (paramType === paramTypes.REQ_PARAMS) {\n            captureCallParams(params, response.request.params, dataCaptured);\n        }\n        else if (paramType === paramTypes.REQ_DESC) {\n            captureDescriptors(params, response.request.params, dataCaptured);\n        }\n        else if (paramType === paramTypes.RES_PARAMS) {\n            if (response.data) {\n                captureCallParams(params, response.data, dataCaptured);\n            }\n        }\n        else if (paramType === paramTypes.RES_DESC) {\n            if (response.data) {\n                captureDescriptors(params, response.data, dataCaptured);\n            }\n        }\n        else {\n            logger.getLogger().error('Unknown parameter type \"' + paramType + '\". Must be \"request_descriptors\", \"response_descriptors\", ' +\n                '\"request_parameters\" or \"response_parameters\".');\n        }\n    }\n    return dataCaptured;\n};\nfunction captureCallParams(params, call, data) {\n    params.forEach(function (param) {\n        if (typeof call[param] !== 'undefined') {\n            var formatted = toSnakeCase(param);\n            this[formatted] = call[param];\n        }\n    }, data);\n}\nfunction captureDescriptors(descriptors, params, data) {\n    for (var paramName in descriptors) {\n        var attributes = descriptors[paramName];\n        if (typeof params[paramName] !== 'undefined') {\n            var paramData;\n            if (attributes.list && attributes.get_count) {\n                paramData = params[paramName] ? params[paramName].length : 0;\n            }\n            else {\n                paramData = attributes.get_keys === true ? Object.keys(params[paramName]) : params[paramName];\n            }\n            if (typeof attributes.rename_to === 'string') {\n                data[attributes.rename_to] = paramData;\n            }\n            else {\n                var formatted = toSnakeCase(paramName);\n                data[formatted] = paramData;\n            }\n        }\n    }\n}\nfunction toSnakeCase(param) {\n    if (param === 'IPAddress') {\n        return 'ip_address';\n    }\n    else {\n        return param.split(/(?=[A-Z])/).join('_').toLowerCase();\n    }\n}\nfunction loadWhitelist(source) {\n    var doc = source;\n    if (doc.services === undefined) {\n        throw new Error('Document formatting is incorrect. Expecting \"services\" param.');\n    }\n    return doc.services;\n}\nmodule.exports = CallCapturer;\n", "\"use strict\";\nvar CallCapturer = require('../../patchers/call_capturer.js');\nvar capturer = new CallCapturer();\n/**\n * Represents a AWS client call. Automatically captures data from the supplied response object,\n * Data captured depends on the whitelisting file supplied.\n * The base whitelisting file can be found at /lib/resources/aws_whitelist.json.\n * @constructor\n * @param {any} res - The response object from the AWS call. Typed as any to avoid AWS SDK dependency. Otherwise would be AWS.Response.\n * @param {string} serviceName - The service name of the AWS client.\n * @see https://github.com/aws/aws-sdk-js/blob/master/lib/response.js\n */\nfunction Aws(res, serviceName) {\n    this.init(res, serviceName);\n}\nAws.prototype.init = function init(res, serviceName) {\n    //TODO: account ID\n    this.operation = formatOperation(res.request.operation) || '';\n    if (res && res.request && res.request.httpRequest && res.request.httpRequest.region) {\n        this.region = res.request.httpRequest.region;\n    }\n    if (res && res.requestId) {\n        this.request_id = res.requestId;\n    }\n    this.retries = res.retryCount || 0;\n    if (res.extendedRequestId && serviceName && serviceName.toLowerCase() === 's3') {\n        this.id_2 = res.extendedRequestId;\n    }\n    if (serviceName) {\n        this.addData(capturer.capture(serviceName.toLowerCase(), res));\n    }\n};\nAws.prototype.addData = function addData(data) {\n    for (var attribute in data) {\n        this[attribute] = data[attribute];\n    }\n};\n/**\n * Overrides the default whitelisting file to specify what params to capture on each AWS Service call.\n * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n * @exports setAWSWhitelist\n */\nvar setAWSWhitelist = function setAWSWhitelist(source) {\n    if (!source || source instanceof String || !(typeof source === 'string' || (source instanceof Object))) {\n        throw new Error('Please specify a path to the local whitelist file, or supply a whitelist source object.');\n    }\n    capturer = new CallCapturer(source);\n};\n/**\n * Appends to the default whitelisting file to specify what params to capture on each AWS Service call.\n * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n * @exports appendAWSWhitelist\n */\nvar appendAWSWhitelist = function appendAWSWhitelist(source) {\n    if (!source || source instanceof String || !(typeof source === 'string' || (source instanceof Object))) {\n        throw new Error('Please specify a path to the local whitelist file, or supply a whitelist source object.');\n    }\n    capturer.append(source);\n};\nfunction formatOperation(operation) {\n    if (!operation) {\n        return;\n    }\n    return operation.charAt(0).toUpperCase() + operation.slice(1);\n}\nmodule.exports = Aws;\nmodule.exports.appendAWSWhitelist = appendAWSWhitelist;\nmodule.exports.setAWSWhitelist = setAWSWhitelist;\n", "\"use strict\";\n/**\n * Capture module.\n * @module capture\n */\nvar contextUtils = require('./context_utils');\nvar logger = require('./logger');\n/**\n * Wrap to automatically capture information for the segment.\n * @param {string} name - The name of the new subsegment.\n * @param {function} fcn - The function context to wrap. Can take a single 'subsegment' argument.\n * @param {Segment|Subsegment} [parent] - The parent for the new subsegment, for manual mode.\n * @alias module:capture.captureFunc\n * @return {*} - Returns the result if any by executing the provided function.\n */\nvar captureFunc = function captureFunc(name, fcn, parent) {\n    validate(name, fcn);\n    var current, executeFcn;\n    var parentSeg = contextUtils.resolveSegment(parent);\n    if (!parentSeg) {\n        logger.getLogger().warn('Failed to capture function.');\n        return fcn();\n    }\n    current = parentSeg.addNewSubsegment(name);\n    executeFcn = captureFcn(fcn, current);\n    try {\n        const response = executeFcn(current);\n        current.close();\n        return response;\n    }\n    catch (e) {\n        current.close(e);\n        throw (e);\n    }\n};\n/**\n * Wrap to automatically capture information for the sub/segment.  You must close the segment\n * manually from within the function.\n * @param {string} name - The name of the new subsegment.\n * @param {function} fcn - The function context to wrap. Must take a single 'subsegment' argument and call 'subsegment.close([optional error])' when the async function completes.\n * @param {Segment|Subsegment} [parent] - The parent for the new subsegment, for manual mode.\n * @alias module:capture.captureAsyncFunc\n * @return {*} - Returns a promise by executing the provided async function.\n */\nvar captureAsyncFunc = function captureAsyncFunc(name, fcn, parent) {\n    validate(name, fcn);\n    var current, executeFcn;\n    var parentSeg = contextUtils.resolveSegment(parent);\n    if (!parentSeg) {\n        logger.getLogger().warn('Failed to capture async function.');\n        return fcn();\n    }\n    current = parentSeg.addNewSubsegment(name);\n    executeFcn = captureFcn(fcn, current);\n    try {\n        return executeFcn(current);\n    }\n    catch (e) {\n        current.close(e);\n        throw (e);\n    }\n};\n/**\n * Wrap to automatically capture information for the sub/segment. This wraps the callback and returns a function.\n * when executed, all arguments are passed through accordingly. An additional argument is appended to gain access to the newly created subsegment.\n * For this reason, always call the captured callback with the full list of arguments.\n * @param {string} name - The name of the new subsegment.\n * @param {function} fcn - The function context to wrap. Can take a single 'subsegment' argument.\n * @param {Segment|Subsegment} [parent] - The parent for the new subsegment, for manual mode.\n * @alias module:capture.captureCallbackFunc\n */\nvar captureCallbackFunc = function captureCallbackFunc(name, fcn, parent) {\n    validate(name, fcn);\n    var base = contextUtils.resolveSegment(parent);\n    if (!base) {\n        logger.getLogger().warn('Failed to capture callback function.');\n        return fcn;\n    }\n    base.incrementCounter();\n    return function () {\n        var parentSeg = contextUtils.resolveSegment(parent);\n        var args = Array.prototype.slice.call(arguments);\n        captureFunc(name, fcn.bind.apply(fcn, [null].concat(args)), parentSeg);\n        base.decrementCounter();\n    }.bind(this);\n};\nfunction captureFcn(fcn, current) {\n    var executeFcn;\n    if (contextUtils.isAutomaticMode()) {\n        var session = contextUtils.getNamespace();\n        var contextFcn = function () {\n            var value;\n            session.run(function () {\n                contextUtils.setSegment(current);\n                value = fcn(current);\n            });\n            return value;\n        };\n        executeFcn = contextFcn;\n    }\n    else {\n        executeFcn = fcn;\n    }\n    return executeFcn;\n}\nfunction validate(name, fcn) {\n    var error;\n    if (!name || typeof name !== 'string') {\n        error = 'Param \"name\" must be a non-empty string.';\n        logger.getLogger().error(error);\n        throw new Error(error);\n    }\n    else if (typeof fcn !== 'function') {\n        error = 'Param \"fcn\" must be a function.';\n        logger.getLogger().error(error);\n        throw new Error(error);\n    }\n}\nmodule.exports.captureFunc = captureFunc;\nmodule.exports.captureAsyncFunc = captureAsyncFunc;\nmodule.exports.captureCallbackFunc = captureCallbackFunc;\n", "// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n", "const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n", "const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n", "const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n", "const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n", "const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n", "const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n", "const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n", "const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n", "const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n", "const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n", "const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n", "const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n", "const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n", "const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n", "const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", "// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n", "const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n", "const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n", "// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n", "const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n", "const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n", "// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n", "const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n", "// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n", "\"use strict\";\n/**\n * Capture module.\n * @module aws_p\n */\nvar semver = require('semver');\nvar Aws = require('../segments/attributes/aws');\nvar contextUtils = require('../context_utils');\nvar Utils = require('../utils');\nvar logger = require('../logger');\nvar minVersion = '2.7.15';\nvar throttledErrorDefault = function throttledErrorDefault() {\n    return false; // If the customer doesn't provide an aws-sdk with a throttled error function, we can't make assumptions.\n};\n/**\n * Configures the AWS SDK to automatically capture information for the segment.\n * All created clients will automatically be captured.  See 'captureAWSClient'\n * for additional details.\n * @param {AWS} awssdk - The Javascript AWS SDK.\n * @alias module:aws_p.captureAWS\n * @returns {AWS}\n * @see https://github.com/aws/aws-sdk-js\n */\nvar captureAWS = function captureAWS(awssdk) {\n    if (!semver.gte(awssdk.VERSION, minVersion)) {\n        throw new Error('AWS SDK version ' + minVersion + ' or greater required.');\n    }\n    for (var prop in awssdk) {\n        if (awssdk[prop].serviceIdentifier) {\n            var Service = awssdk[prop];\n            Service.prototype.customizeRequests(captureAWSRequest);\n        }\n    }\n    return awssdk;\n};\n/**\n * Configures any AWS Client instance to automatically capture information for the segment.\n * For manual mode, a param with key called 'Segment' is required as a part of the AWS\n * call paramaters, and must reference a Segment or Subsegment object.\n * @param {AWS.Service} service - An instance of a AWS service to wrap.\n * @alias module:aws_p.captureAWSClient\n * @returns {AWS.Service}\n * @see https://github.com/aws/aws-sdk-js\n */\nvar captureAWSClient = function captureAWSClient(service) {\n    service.customizeRequests(captureAWSRequest);\n    return service;\n};\nfunction captureAWSRequest(req) {\n    var parent = contextUtils.resolveSegment(contextUtils.resolveManualSegmentParams(req.params));\n    if (!parent) {\n        var output = this.serviceIdentifier + '.' + req.operation;\n        if (!contextUtils.isAutomaticMode()) {\n            logger.getLogger().info('Call ' + output + ' requires a segment object' +\n                ' on the request params as \"XRaySegment\" for tracing in manual mode. Ignoring.');\n        }\n        else {\n            logger.getLogger().info('Call ' + output +\n                ' is missing the sub/segment context for automatic mode. Ignoring.');\n        }\n        return req;\n    }\n    var throttledError = this.throttledError || throttledErrorDefault;\n    var stack = (new Error()).stack;\n    let subsegment;\n    if (parent.notTraced) {\n        subsegment = parent.addNewSubsegmentWithoutSampling(this.serviceIdentifier);\n    }\n    else {\n        subsegment = parent.addNewSubsegment(this.serviceIdentifier);\n    }\n    var traceId = parent.segment ? parent.segment.trace_id : parent.trace_id;\n    const data = parent.segment ? parent.segment.additionalTraceData : parent.additionalTraceData;\n    var buildListener = function (req) {\n        let traceHeader = 'Root=' + traceId + ';Parent=' + subsegment.id +\n            ';Sampled=' + (subsegment.notTraced ? '0' : '1');\n        if (data != null) {\n            for (const [key, value] of Object.entries(data)) {\n                traceHeader += ';' + key + '=' + value;\n            }\n        }\n        req.httpRequest.headers['X-Amzn-Trace-Id'] = traceHeader;\n    };\n    var completeListener = function (res) {\n        subsegment.addAttribute('namespace', 'aws');\n        subsegment.addAttribute('aws', new Aws(res, subsegment.name));\n        var httpRes = res.httpResponse;\n        if (httpRes) {\n            subsegment.addAttribute('http', new HttpResponse(httpRes));\n            if (httpRes.statusCode === 429 || (res.error && throttledError(res.error))) {\n                subsegment.addThrottleFlag();\n            }\n        }\n        if (res.error) {\n            var err = { message: res.error.message, name: res.error.code, stack: stack };\n            if (httpRes && httpRes.statusCode) {\n                if (Utils.getCauseTypeFromHttpStatus(httpRes.statusCode) == 'error') {\n                    subsegment.addErrorFlag();\n                }\n                subsegment.close(err, true);\n            }\n            else {\n                subsegment.close(err);\n            }\n        }\n        else {\n            if (httpRes && httpRes.statusCode) {\n                var cause = Utils.getCauseTypeFromHttpStatus(httpRes.statusCode);\n                if (cause) {\n                    subsegment[cause] = true;\n                }\n            }\n            subsegment.close();\n        }\n    };\n    req.on('beforePresign', function (req) {\n        // Only the AWS Presigner triggers this event,\n        // so we can rely on this event to notify us when\n        // a request is for a presigned url\n        parent.removeSubsegment(subsegment);\n        parent.decrementCounter();\n        req.removeListener('build', buildListener);\n        req.removeListener('complete', completeListener);\n    });\n    req.on('build', buildListener).on('complete', completeListener);\n    if (!req.__send) {\n        req.__send = req.send;\n        req.send = function (callback) {\n            if (contextUtils.isAutomaticMode()) {\n                var session = contextUtils.getNamespace();\n                session.run(function () {\n                    contextUtils.setSegment(subsegment);\n                    req.__send(callback);\n                });\n            }\n            else {\n                req.__send(callback);\n            }\n        };\n    }\n}\nfunction HttpResponse(res) {\n    this.init(res);\n}\nHttpResponse.prototype.init = function init(res) {\n    this.response = {\n        status: res.statusCode || '',\n    };\n    if (res.headers && res.headers['content-length']) {\n        this.response.content_length = res.headers['content-length'];\n    }\n};\nmodule.exports.captureAWSClient = captureAWSClient;\nmodule.exports.captureAWS = captureAWS;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  isClockSkewError: () => isClockSkewError,\n  isRetryableByTrait: () => isRetryableByTrait,\n  isServerError: () => isServerError,\n  isThrottlingError: () => isThrottlingError,\n  isTransientError: () => isTransientError\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/constants.ts\nvar CLOCK_SKEW_ERROR_CODES = [\n  \"AuthFailure\",\n  \"InvalidSignatureException\",\n  \"RequestExpired\",\n  \"RequestInTheFuture\",\n  \"RequestTimeTooSkewed\",\n  \"SignatureDoesNotMatch\"\n];\nvar THROTTLING_ERROR_CODES = [\n  \"BandwidthLimitExceeded\",\n  \"EC2ThrottledException\",\n  \"LimitExceededException\",\n  \"PriorRequestNotComplete\",\n  \"ProvisionedThroughputExceededException\",\n  \"RequestLimitExceeded\",\n  \"RequestThrottled\",\n  \"RequestThrottledException\",\n  \"SlowDown\",\n  \"ThrottledException\",\n  \"Throttling\",\n  \"ThrottlingException\",\n  \"TooManyRequestsException\",\n  \"TransactionInProgressException\"\n  // DynamoDB\n];\nvar TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nvar TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nvar NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n\n// src/index.ts\nvar isRetryableByTrait = /* @__PURE__ */ __name((error) => error.$retryable !== void 0, \"isRetryableByTrait\");\nvar isClockSkewError = /* @__PURE__ */ __name((error) => CLOCK_SKEW_ERROR_CODES.includes(error.name), \"isClockSkewError\");\nvar isThrottlingError = /* @__PURE__ */ __name((error) => {\n  var _a, _b;\n  return ((_a = error.$metadata) == null ? void 0 : _a.httpStatusCode) === 429 || THROTTLING_ERROR_CODES.includes(error.name) || ((_b = error.$retryable) == null ? void 0 : _b.throttling) == true;\n}, \"isThrottlingError\");\nvar isTransientError = /* @__PURE__ */ __name((error) => {\n  var _a;\n  return TRANSIENT_ERROR_CODES.includes(error.name) || NODEJS_TIMEOUT_ERROR_CODES.includes((error == null ? void 0 : error.code) || \"\") || TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) == null ? void 0 : _a.httpStatusCode) || 0);\n}, \"isTransientError\");\nvar isServerError = /* @__PURE__ */ __name((error) => {\n  var _a;\n  if (((_a = error.$metadata) == null ? void 0 : _a.httpStatusCode) !== void 0) {\n    const statusCode = error.$metadata.httpStatusCode;\n    if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n}, \"isServerError\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  isClockSkewError,\n  isRetryableByTrait,\n  isServerError,\n  isThrottlingError,\n  isTransientError\n});\n\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.captureAWSClient = void 0;\nconst service_error_classification_1 = require(\"@smithy/service-error-classification\");\nconst aws_1 = __importDefault(require(\"../segments/attributes/aws\"));\nconst querystring_1 = require(\"querystring\");\nconst subsegment_1 = __importDefault(require(\"../segments/attributes/subsegment\"));\nconst contextUtils = require('../context_utils');\nconst logger = require('../logger');\nconst { safeParseInt } = require('../utils');\nconst utils_1 = require(\"../utils\");\nconst XRAY_PLUGIN_NAME = 'XRaySDKInstrumentation';\nconst buildAttributesFromMetadata = async (service, operation, region, commandInput, res, error) => {\n    var _a, _b, _c;\n    const { extendedRequestId, requestId, httpStatusCode: statusCode, attempts } = ((_a = res === null || res === void 0 ? void 0 : res.output) === null || _a === void 0 ? void 0 : _a.$metadata) || (error === null || error === void 0 ? void 0 : error.$metadata);\n    const aws = new aws_1.default({\n        extendedRequestId,\n        requestId,\n        retryCount: attempts,\n        data: res === null || res === void 0 ? void 0 : res.output,\n        request: {\n            operation,\n            params: commandInput,\n            httpRequest: {\n                region,\n                statusCode,\n            },\n        },\n    }, service);\n    const http = {};\n    if (statusCode) {\n        http.response = {};\n        http.response.status = statusCode;\n    }\n    if (((_b = res === null || res === void 0 ? void 0 : res.response) === null || _b === void 0 ? void 0 : _b.headers) && ((_c = res === null || res === void 0 ? void 0 : res.response) === null || _c === void 0 ? void 0 : _c.headers['content-length']) !== undefined) {\n        if (!http.response) {\n            http.response = {};\n        }\n        http.response.content_length = safeParseInt(res.response.headers['content-length']);\n    }\n    return [aws, http];\n};\nfunction addFlags(http, subsegment, err) {\n    var _a, _b, _c;\n    if (err && (0, service_error_classification_1.isThrottlingError)(err)) {\n        subsegment.addThrottleFlag();\n    }\n    else if (safeParseInt((_a = http.response) === null || _a === void 0 ? void 0 : _a.status) === 429 || safeParseInt((_b = err === null || err === void 0 ? void 0 : err.$metadata) === null || _b === void 0 ? void 0 : _b.httpStatusCode) === 429) {\n        subsegment.addThrottleFlag();\n    }\n    const cause = (0, utils_1.getCauseTypeFromHttpStatus)(safeParseInt((_c = http.response) === null || _c === void 0 ? void 0 : _c.status));\n    if (cause === 'fault') {\n        subsegment.addFaultFlag();\n    }\n    else if (cause === 'error') {\n        subsegment.addErrorFlag();\n    }\n}\nconst getXRayMiddleware = (config, manualSegment) => (next, context) => async (args) => {\n    var _a;\n    const segment = contextUtils.isAutomaticMode() ? contextUtils.resolveSegment() : manualSegment;\n    const { clientName, commandName } = context;\n    const commandInput = (_a = args === null || args === void 0 ? void 0 : args.input) !== null && _a !== void 0 ? _a : {};\n    const commandOperation = commandName.slice(0, -7); // Strip trailing \"Command\" string\n    const operation = commandOperation.charAt(0).toLowerCase() + commandOperation.slice(1);\n    const service = clientName.slice(0, -6); // Strip trailing \"Client\" string\n    if (!segment) {\n        const output = service + '.' + operation;\n        if (!contextUtils.isAutomaticMode()) {\n            logger.getLogger().info('Call ' + output + ' requires a segment object' +\n                ' passed to captureAWSv3Client for tracing in manual mode. Ignoring.');\n        }\n        else {\n            logger.getLogger().info('Call ' + output +\n                ' is missing the sub/segment context for automatic mode. Ignoring.');\n        }\n        return next(args);\n    }\n    let subsegment;\n    if (segment.notTraced) {\n        subsegment = segment.addNewSubsegmentWithoutSampling(service);\n    }\n    else {\n        subsegment = segment.addNewSubsegment(service);\n    }\n    subsegment.addAttribute('namespace', 'aws');\n    const parent = (segment instanceof subsegment_1.default ? segment.segment : segment);\n    const data = parent.segment ? parent.segment.additionalTraceData : parent.additionalTraceData;\n    let traceHeader = (0, querystring_1.stringify)({\n        Root: parent.trace_id,\n        Parent: subsegment.id,\n        Sampled: subsegment.notTraced ? '0' : '1',\n    }, ';');\n    if (data != null) {\n        for (const [key, value] of Object.entries(data)) {\n            traceHeader += ';' + key + '=' + value;\n        }\n    }\n    args.request.headers['X-Amzn-Trace-Id'] = traceHeader;\n    let res;\n    try {\n        res = await next(args);\n        if (!res) {\n            throw new Error('Failed to get response from instrumented AWS Client.');\n        }\n        const [aws, http] = await buildAttributesFromMetadata(service, operation, await config.region(), commandInput, res, null);\n        subsegment.addAttribute('aws', aws);\n        subsegment.addAttribute('http', http);\n        addFlags(http, subsegment);\n        subsegment.close();\n        return res;\n    }\n    catch (err) {\n        if (err.$metadata) {\n            const [aws, http] = await buildAttributesFromMetadata(service, operation, await config.region(), commandInput, null, err);\n            subsegment.addAttribute('aws', aws);\n            subsegment.addAttribute('http', http);\n            addFlags(http, subsegment, err);\n        }\n        const errObj = { message: err.message, name: err.name, stack: err.stack || new Error().stack };\n        subsegment.close(errObj, true);\n        throw err;\n    }\n};\nconst xRayMiddlewareOptions = {\n    name: XRAY_PLUGIN_NAME,\n    step: 'build',\n};\nconst getXRayPlugin = (config, manualSegment) => ({\n    applyToStack: (stack) => {\n        stack.add(getXRayMiddleware(config, manualSegment), xRayMiddlewareOptions);\n    },\n});\n/**\n * Instruments AWS SDK V3 clients with X-Ray via middleware.\n *\n * @param client - AWS SDK V3 client to instrument\n * @param manualSegment - Parent segment or subsegment that is passed in for manual mode users\n * @returns - the client with the X-Ray instrumentation middleware added to its middleware stack\n */\nfunction captureAWSClient(client, manualSegment) {\n    // Remove existing middleware to ensure operation is idempotent\n    client.middlewareStack.remove(XRAY_PLUGIN_NAME);\n    client.middlewareStack.use(getXRayPlugin(client.config, manualSegment));\n    return client;\n}\nexports.captureAWSClient = captureAWSClient;\n", "\"use strict\";\n/**\n * @module http_p\n */\n/**\n * This module patches the HTTP and HTTPS node built-in libraries and returns a copy of the module with tracing enabled.\n */\nvar url = require('url');\nvar contextUtils = require('../context_utils');\nvar Utils = require('../utils');\nvar logger = require('../logger');\nvar events = require('events');\n/**\n * Wraps the http/https.request() and .get() calls to automatically capture information for the segment.\n * This patches the built-in HTTP and HTTPS modules globally. If using a 3rd party HTTP library,\n * it should still use HTTP under the hood. Be sure to patch globally before requiring the 3rd party library.\n * 3rd party library compatibility is best effort. Some incompatibility issues may arise.\n * @param {http|https} module - The built in Node.js HTTP or HTTPS module.\n * @param {boolean} downstreamXRayEnabled - when true, adds a \"traced:true\" property to the subsegment\n *   so the AWS X-Ray service expects a corresponding segment from the downstream service.\n * @param {function} subsegmentCallback - a callback that is called with the subsegment, the Node.js\n *   http.ClientRequest, the Node.js http.IncomingMessage (if a response was received) and any error issued,\n *   allowing custom annotations and metadata to be added.\n *   to be added to the subsegment.\n * @alias module:http_p.captureHTTPsGlobal\n */\nvar captureHTTPsGlobal = function captureHTTPsGlobal(module, downstreamXRayEnabled, subsegmentCallback) {\n    if (!module.__request) {\n        enableCapture(module, downstreamXRayEnabled, subsegmentCallback);\n    }\n};\n/**\n * Wraps the http/https.request() and .get() calls to automatically capture information for the segment.\n * Returns an instance of the HTTP or HTTPS module that is patched.\n * @param {http|https} module - The built in Node.js HTTP or HTTPS module.\n * @param {boolean} downstreamXRayEnabled - when true, adds a \"traced:true\" property to the subsegment\n *   so the AWS X-Ray service expects a corresponding segment from the downstream service.\n * @param {function} subsegmentCallback - a callback that is called with the subsegment, the Node.js\n *   http.ClientRequest, and the Node.js http.IncomingMessage to allow custom annotations and metadata\n *   to be added to the subsegment.\n * @alias module:http_p.captureHTTPs\n * @returns {http|https}\n */\nvar captureHTTPs = function captureHTTPs(module, downstreamXRayEnabled, subsegmentCallback) {\n    if (module.__request) {\n        return module;\n    }\n    var tracedModule = {};\n    Object.keys(module).forEach(function (val) {\n        tracedModule[val] = module[val];\n    });\n    enableCapture(tracedModule, downstreamXRayEnabled, subsegmentCallback);\n    return tracedModule;\n};\nfunction enableCapture(module, downstreamXRayEnabled, subsegmentCallback) {\n    function captureOutgoingHTTPs(baseFunc, ...args) {\n        let options;\n        let callback;\n        let hasUrl;\n        let urlObj;\n        let arg0 = args[0];\n        if (typeof args[1] === 'object') {\n            hasUrl = true;\n            urlObj = typeof arg0 === 'string' ? new url.URL(arg0) : arg0;\n            options = args[1],\n                callback = args[2];\n        }\n        else {\n            hasUrl = false;\n            options = arg0;\n            callback = args[1];\n        }\n        // Short circuit if the HTTP request has no options or is already being captured\n        if (!options || (options.headers && (options.headers['X-Amzn-Trace-Id']))) {\n            return baseFunc(...args);\n        }\n        // Case of calling a string URL without options, e.g.: http.request('http://amazon.com', callback)\n        if (typeof options === 'string') {\n            options = new url.URL(options);\n        }\n        if (!hasUrl) {\n            urlObj = options;\n        }\n        const parent = contextUtils.resolveSegment(contextUtils.resolveManualSegmentParams(options));\n        const hostname = options.hostname || options.host || urlObj.hostname || urlObj.host || 'Unknown host';\n        if (!parent) {\n            let output = '[ host: ' + hostname;\n            output = options.method ? (output + ', method: ' + options.method) : output;\n            output += ', path: ' + (urlObj.pathname || Utils.stripQueryStringFromPath(options.path)) + ' ]';\n            if (!contextUtils.isAutomaticMode()) {\n                logger.getLogger().info('Options for request ' + output +\n                    ' requires a segment object on the options params as \"XRaySegment\" for tracing in manual mode. Ignoring.');\n            }\n            else {\n                logger.getLogger().info('Options for request ' + output +\n                    ' is missing the sub/segment context for automatic mode. Ignoring.');\n            }\n            // Options are not modified, only parsed for logging. We can pass in the original arguments.\n            return baseFunc(...args);\n        }\n        let subsegment;\n        if (parent.notTraced) {\n            subsegment = parent.addNewSubsegmentWithoutSampling(hostname);\n        }\n        else {\n            subsegment = parent.addNewSubsegment(hostname);\n        }\n        const root = parent.segment ? parent.segment : parent;\n        subsegment.namespace = 'remote';\n        if (!options.headers) {\n            options.headers = {};\n        }\n        options.headers['X-Amzn-Trace-Id'] = 'Root=' + root.trace_id + ';Parent=' + subsegment.id +\n            ';Sampled=' + (subsegment.notTraced ? '0' : '1');\n        const errorCapturer = function errorCapturer(e) {\n            if (subsegmentCallback) {\n                subsegmentCallback(subsegment, this, null, e);\n            }\n            if (subsegment.http && subsegment.http.response) {\n                if (Utils.getCauseTypeFromHttpStatus(subsegment.http.response.status) === 'error') {\n                    subsegment.addErrorFlag();\n                }\n                subsegment.close(e, true);\n            }\n            else {\n                const madeItToDownstream = (e.code !== 'ECONNREFUSED');\n                subsegment.addRemoteRequestData(this, null, madeItToDownstream && downstreamXRayEnabled);\n                subsegment.close(e);\n            }\n        };\n        const optionsCopy = Utils.objectWithoutProperties(options, ['Segment'], true);\n        let req = baseFunc(...(hasUrl ? [arg0, optionsCopy] : [options]), function (res) {\n            res.on('end', function () {\n                if (subsegmentCallback) {\n                    subsegmentCallback(subsegment, this.req, res);\n                }\n                if (res.statusCode === 429) {\n                    subsegment.addThrottleFlag();\n                }\n                const cause = Utils.getCauseTypeFromHttpStatus(res.statusCode);\n                if (cause) {\n                    subsegment[cause] = true;\n                }\n                subsegment.addRemoteRequestData(res.req, res, !!downstreamXRayEnabled);\n                subsegment.close();\n            });\n            if (typeof callback === 'function') {\n                if (contextUtils.isAutomaticMode()) {\n                    const session = contextUtils.getNamespace();\n                    session.run(function () {\n                        contextUtils.setSegment(subsegment);\n                        callback(res);\n                    });\n                }\n                else {\n                    callback(res);\n                }\n                // if no callback provided by user application, AND no explicit response listener\n                // added by user application, then we consume the response so the 'end' event fires\n                // See: https://nodejs.org/api/http.html#http_class_http_clientrequest\n            }\n            else if (res.req && res.req.listenerCount('response') === 0) {\n                res.resume();\n            }\n        });\n        // Use errorMonitor if available (in Node 12.17+), otherwise fall back to standard error listener\n        // See: https://nodejs.org/dist/latest-v12.x/docs/api/events.html#events_eventemitter_errormonitor\n        req.on(events.errorMonitor || 'error', errorCapturer);\n        return req;\n    }\n    module.__request = module.request;\n    function captureHTTPsRequest(...args) {\n        return captureOutgoingHTTPs(module.__request, ...args);\n    }\n    module.__get = module.get;\n    function captureHTTPsGet(...args) {\n        return captureOutgoingHTTPs(module.__get, ...args);\n    }\n    Object.defineProperties(module, {\n        request: { value: captureHTTPsRequest, configurable: true, enumerable: true, writable: true },\n        get: { value: captureHTTPsGet, configurable: true, enumerable: true, writable: true },\n    });\n}\nmodule.exports.captureHTTPsGlobal = captureHTTPsGlobal;\nmodule.exports.captureHTTPs = captureHTTPs;\n", "\"use strict\";\n/**\n * @module promise_p\n */\n/**\n * This module patches native Promise libraries provided by V8 engine\n * so all subsegments generated within Promise are attached to the correct parent.\n */\nconst contextUtils = require('../context_utils');\nconst originalThen = Symbol('original then');\nconst originalCatch = Symbol('original catch');\nfunction patchPromise(Promise) {\n    const then = Promise.prototype.then;\n    if (!then[originalThen]) {\n        Promise.prototype.then = function (onFulfilled, onRejected) {\n            if (contextUtils.isAutomaticMode()\n                && tryGetCurrentSegment()) {\n                const ns = contextUtils.getNamespace();\n                onFulfilled = onFulfilled && ns.bind(onFulfilled);\n                onRejected = onRejected && ns.bind(onRejected);\n            }\n            return then.call(this, onFulfilled, onRejected);\n        };\n        Promise.prototype.then[originalThen] = then;\n    }\n    const origCatch = Promise.prototype.catch;\n    if (origCatch && !origCatch[originalCatch]) {\n        Promise.prototype.catch = function (onRejected) {\n            if (contextUtils.isAutomaticMode()\n                && tryGetCurrentSegment()) {\n                const ns = contextUtils.getNamespace();\n                onRejected = onRejected && ns.bind(onRejected);\n            }\n            return origCatch.call(this, onRejected);\n        };\n        Promise.prototype.catch[originalCatch] = origCatch;\n    }\n}\nfunction unpatchPromise(Promise) {\n    const then = Promise.prototype.then;\n    if (then[originalThen]) {\n        Promise.prototype.then = then[originalThen];\n    }\n    const origCatch = Promise.prototype.catch;\n    if (origCatch && origCatch[originalCatch]) {\n        Promise.prototype.catch = origCatch[originalCatch];\n    }\n}\nfunction tryGetCurrentSegment() {\n    try {\n        return contextUtils.getSegment();\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nfunction capturePromise() {\n    patchPromise(Promise);\n}\nfunction uncapturePromise() {\n    unpatchPromise(Promise);\n}\ncapturePromise.patchThirdPartyPromise = patchPromise;\nmodule.exports.capturePromise = capturePromise;\nmodule.exports.uncapturePromise = uncapturePromise;\n", "\"use strict\";\n/**\n * Represents a SQL database call.\n * @constructor\n * @param {string} databaseVer - The version on the database (user supplied).\n * @param {string} driverVer - The version on the database driver (user supplied).\n * @param {string} user - The user associated to the database call.\n * @param {string} queryType - The SQL query type.\n */\nfunction SqlData(databaseVer, driverVer, user, url, queryType) {\n    this.init(databaseVer, driverVer, user, url, queryType);\n}\nSqlData.prototype.init = function init(databaseVer, driverVer, user, url, queryType) {\n    if (databaseVer) {\n        this.database_version = databaseVer;\n    }\n    if (driverVer) {\n        this.driver_version = driverVer;\n    }\n    if (queryType) {\n        this.preparation = queryType;\n    }\n    this.url = url;\n    this.user = user;\n};\nmodule.exports = SqlData;\n", "\"use strict\";\nvar contextUtils = require('./context_utils');\nvar logging = require('./logger');\nvar segmentUtils = require('./segments/segment_utils');\nvar utils = require('./utils');\nvar LambdaEnv = require('./env/aws_lambda');\n// Import Data from package.json,\n// If the importing of package.json fails leave\n// pkginfo as an empty object\nvar pkginfo = {};\ntry {\n    pkginfo = require('../../package.json');\n}\ncatch (err) {\n    logging.getLogger().debug('Failed to load SDK data:', err);\n}\nvar UNKNOWN = 'unknown';\n/**\n * A module representing the AWSXRay SDK.\n * @namespace AWSXRay\n */\nvar AWSXRay = {\n    /**\n     * @memberof AWSXRay\n     * @type {object}\n     * @namespace AWSXRay.plugins\n     */\n    plugins: {\n        /**\n         * Exposes the AWS EC2 plugin.\n         * @memberof AWSXRay.plugins\n         */\n        EC2Plugin: require('./segments/plugins/ec2_plugin'),\n        /**\n         * Exposes the AWS ECS plugin.\n         * @memberof AWSXRay.plugins\n         */\n        ECSPlugin: require('./segments/plugins/ecs_plugin'),\n        /**\n         * Exposes the AWS Elastic Beanstalk plugin.\n         * @memberof AWSXRay.plugins\n         */\n        ElasticBeanstalkPlugin: require('./segments/plugins/elastic_beanstalk_plugin'),\n    },\n    /**\n     * Enables use of plugins to capture additional data for segments.\n     * @param {Array} plugins - A configurable subset of AWSXRay.plugins.\n     * @memberof AWSXRay\n     * @see AWSXRay.plugins\n     */\n    config: function (plugins) {\n        var pluginData = {};\n        plugins.forEach(function (plugin) {\n            plugin.getData(function (data) {\n                if (data) {\n                    for (var attribute in data) {\n                        pluginData[attribute] = data[attribute];\n                    }\n                }\n            });\n            segmentUtils.setOrigin(plugin.originName);\n            segmentUtils.setPluginData(pluginData);\n        });\n    },\n    /**\n     * Overrides the default whitelisting file to specify what params to capture on each AWS Service call.\n     * If a service or API is not listed, no additional data is captured.\n     * The base whitelisting file can be found at /lib/resources/aws_whitelist.json\n     * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n     * @memberof AWSXRay\n     */\n    setAWSWhitelist: require('./segments/attributes/aws').setAWSWhitelist,\n    /**\n     * Appends to the current whitelisting file.\n     * In the case of a duplicate service API listed, the new source will override the previous values.\n     * @param {string|Object} source - The path to the custom whitelist file, or a whitelist source JSON object.\n     * @memberof AWSXRay\n     */\n    appendAWSWhitelist: require('./segments/attributes/aws').appendAWSWhitelist,\n    /**\n     * Overrides the default streaming threshold (100).\n     * The threshold represents the maximum number of subsegments on a single segment before\n     * the SDK begins to send the completed subsegments out of band of the main segment.\n     * Reduce this threshold if you see the 'Segment too large to send' error.\n     * @param {number} threshold - The new threshold to use.\n     * @memberof AWSXRay\n     */\n    setStreamingThreshold: segmentUtils.setStreamingThreshold,\n    /**\n     * Set your own logger for the SDK.\n     * @param {Object} logger - A logger which responds to debug/info/warn/error calls.\n     * @memberof AWSXRay\n     */\n    setLogger: logging.setLogger,\n    /**\n     * Gets the set logger for the SDK.\n     * @memberof AWSXRay\n     */\n    getLogger: logging.getLogger,\n    /**\n     * Configures the address and port the daemon is expected to be on.\n     * @param {string} address - Address of the daemon the segments should be sent to.  Expects 'x.x.x.x', ':yyyy' or 'x.x.x.x:yyyy' IPv4 formats.\n     * @module DaemonConfig\n     * @memberof AWSXRay\n     * @function\n     * @see module:DaemonConfig.setDaemonAddress\n     */\n    setDaemonAddress: require('./daemon_config').setDaemonAddress,\n    /**\n     * @param {string} name - The name of the new subsegment.\n     * @param {function} fcn - The function conext to wrap.\n     * @param {Segment|Subsegment} [parent] - The parent for the new subsegment, for manual mode.\n     * @memberof AWSXRay\n     * @function\n     * @see module:capture.captureFunc\n     */\n    captureFunc: require('./capture').captureFunc,\n    /**\n     * @param {string} name - The name of the new subsegment.\n     * @param {function} fcn - The function conext to wrap.\n     * @param {Segment|Subsegment} [parent] - The parent for the new subsegment, for manual mode.\n     * @memberof AWSXRay\n     * @function\n     * @see module:capture.captureAsyncFunc\n     */\n    captureAsyncFunc: require('./capture').captureAsyncFunc,\n    /**\n     * @param {string} name - The name of the new subsegment.\n     * @param {function} fcn - The function conext to wrap.\n     * @param {Segment|Subsegment} [parent] - The parent for the new subsegment, for manual mode.\n     * @memberof AWSXRay\n     * @function\n     * @see module:capture.captureCallbackFunc\n     */\n    captureCallbackFunc: require('./capture').captureCallbackFunc,\n    /**\n     * @param {AWS} awssdk - The Javascript AWS SDK.\n     * @memberof AWSXRay\n     * @function\n     * @see module:aws_p.captureAWS\n     */\n    captureAWS: require('./patchers/aws_p').captureAWS,\n    /**\n     * @param {AWS.Service} service - An instance of a AWS service to wrap.\n     * @memberof AWSXRay\n     * @function\n     * @see module:aws_p.captureAWSClient\n     */\n    captureAWSClient: require('./patchers/aws_p').captureAWSClient,\n    /**\n     * @param {AWSv3.Service} service - An instance of a AWS SDK v3 service to wrap.\n     * @param {Segment|Subsegment} segment - Optional segment for manual mode.\n     * @memberof AWSXRay\n     * @function\n     * @see module:aws3_p.captureAWSClient\n     */\n    captureAWSv3Client: require('./patchers/aws3_p').captureAWSClient,\n    /**\n     * @param {http|https} module - The built in Node.js HTTP or HTTPS module.\n     * @memberof AWSXRay\n     * @function\n     * @returns {http|https}\n     * @see module:http_p.captureHTTPs\n     */\n    captureHTTPs: require('./patchers/http_p').captureHTTPs,\n    /**\n     * @param {http|https} module - The built in Node.js HTTP or HTTPS module.\n     * @memberof AWSXRay\n     * @function\n     * @see module:http_p.captureHTTPsGlobal\n     */\n    captureHTTPsGlobal: require('./patchers/http_p').captureHTTPsGlobal,\n    /**\n     * @memberof AWSXRay\n     * @function\n     * @see module:promise_p.capturePromise\n     */\n    capturePromise: require('./patchers/promise_p').capturePromise,\n    /**\n     * Exposes various helper methods.\n     * @memberof AWSXRay\n     * @function\n     * @see module:utils\n     */\n    utils: utils,\n    /**\n     * @memberof AWSXRay\n     * @type {object}\n     * @namespace AWSXRay.database\n     */\n    database: {\n        /**\n         * Exposes the SqlData class.\n         * @memberof AWSXRay.database\n         * @see SqlData\n         */\n        SqlData: require('./database/sql_data'),\n    },\n    /**\n     * Exposes the Middleware Utils class.\n     * @memberof AWSXRay\n     * @function\n     * @see module:mw_utils\n     */\n    middleware: require('./middleware/mw_utils'),\n    /**\n     * Gets the current namespace of the context.\n     * Used for supporting functions that can be used in automatic mode.\n     * @memberof AWSXRay\n     * @function\n     * @returns {Segment|Subsegment}\n     * @see module:context_utils.getNamespace\n     */\n    getNamespace: contextUtils.getNamespace,\n    /**\n     * Resolves the current segment or subsegment, checks manual and automatic modes.\n     * Used for supporting functions that can be used in both manual and automatic modes.\n     * @memberof AWSXRay\n     * @function\n     * @returns {Segment|Subsegment}\n     * @see module:context_utils.resolveSegment\n     */\n    resolveSegment: contextUtils.resolveSegment,\n    /**\n     * Returns the current segment or subsegment. For use with automatic mode only.\n     * @memberof AWSXRay\n     * @function\n     * @returns {Segment|Subsegment}\n     * @see module:context_utils.getSegment\n     */\n    getSegment: contextUtils.getSegment,\n    /**\n     * Sets the current segment or subsegment.  For use with automatic mode only.\n     * @memberof AWSXRay\n     * @function\n     * @see module:context_utils.setSegment\n     */\n    setSegment: contextUtils.setSegment,\n    /**\n     * Returns true if automatic mode is enabled, otherwise false.\n     * @memberof AWSXRay\n     * @function\n     * @see module:context_utils.isAutomaticMode\n     */\n    isAutomaticMode: contextUtils.isAutomaticMode,\n    /**\n     * Enables automatic mode. Automatic mode uses 'cls-hooked'.\n     * @see https://github.com/jeff-lewis/cls-hooked\n     * @memberof AWSXRay\n     * @function\n     * @see module:context_utils.enableAutomaticMode\n     */\n    enableAutomaticMode: contextUtils.enableAutomaticMode,\n    /**\n     * Disables automatic mode. Current segment or subsegment must be passed manually\n     * via the parent optional on captureFunc, captureAsyncFunc etc.\n     * @memberof AWSXRay\n     * @function\n     * @see module:context_utils.enableManualMode\n     */\n    enableManualMode: contextUtils.enableManualMode,\n    /**\n     * Sets the context missing strategy.\n     * @param {Object} strategy - The strategy to set. This object's contextMissing function will be called whenever trace context is not found.\n     */\n    setContextMissingStrategy: contextUtils.setContextMissingStrategy,\n    /**\n     * Exposes the segment class.\n     * @memberof AWSXRay\n     * @function\n     */\n    Segment: require('./segments/segment'),\n    /**\n     * Exposes the subsegment class.\n     * @memberof AWSXRay\n     * @see Subsegment\n     */\n    Subsegment: require('./segments/attributes/subsegment'),\n    SegmentUtils: segmentUtils\n};\n/**\n * Exposes the IncomingRequestData, to capture incoming request data.\n * For use with middleware.\n * @memberof AWSXRay.middleware\n * @see IncomingRequestData\n */\nAWSXRay.middleware.IncomingRequestData = require('./middleware/incoming_request_data'),\n    (function () {\n        var data = {\n            runtime: (process.release && process.release.name) ? process.release.name : UNKNOWN,\n            runtime_version: process.version,\n            version: process.env.npm_package_version || UNKNOWN,\n            name: process.env.npm_package_name || UNKNOWN\n        };\n        var sdkData = {\n            sdk: 'X-Ray for Node.js',\n            sdk_version: pkginfo.version ? pkginfo.version : UNKNOWN,\n            package: pkginfo.name ? pkginfo.name : UNKNOWN,\n        };\n        segmentUtils.setSDKData(sdkData);\n        segmentUtils.setServiceData(data);\n        if (process.env.LAMBDA_TASK_ROOT) {\n            LambdaEnv.init();\n        }\n    })();\nmodule.exports = AWSXRay;\n", "\"use strict\";\n// Convenience file to require the SDK from the root of the repository\nmodule.exports = require('./aws-xray');\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderService = void 0;\nconst aws_xray_sdk_core_1 = require(\"aws-xray-sdk-core\");\nconst commons_1 = require(\"@aws-lambda-powertools/commons\");\nclass ProviderService {\n    captureAWS(awssdk) {\n        return (0, aws_xray_sdk_core_1.captureAWS)(awssdk);\n    }\n    captureAWSClient(service) {\n        return (0, aws_xray_sdk_core_1.captureAWSClient)(service);\n    }\n    captureAWSv3Client(service) {\n        (0, commons_1.addUserAgentMiddleware)(service, 'tracer');\n        // Type must be aliased as any because of this https://github.com/aws/aws-xray-sdk-node/issues/439#issuecomment-859715660\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (0, aws_xray_sdk_core_1.captureAWSv3Client)(service);\n    }\n    captureAsyncFunc(name, fcn, _parent) {\n        return (0, aws_xray_sdk_core_1.captureAsyncFunc)(name, fcn);\n    }\n    captureFunc(name, fcn, _parent) {\n        return (0, aws_xray_sdk_core_1.captureFunc)(name, fcn);\n    }\n    captureHTTPsGlobal() {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        (0, aws_xray_sdk_core_1.captureHTTPsGlobal)(require('http'));\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        (0, aws_xray_sdk_core_1.captureHTTPsGlobal)(require('https'));\n    }\n    getNamespace() {\n        return (0, aws_xray_sdk_core_1.getNamespace)();\n    }\n    getSegment() {\n        return (0, aws_xray_sdk_core_1.getSegment)();\n    }\n    putAnnotation(key, value) {\n        const segment = this.getSegment();\n        if (segment === undefined) {\n            console.warn('No active segment or subsegment found, skipping annotation');\n            return;\n        }\n        if (segment instanceof aws_xray_sdk_core_1.Segment) {\n            console.warn('You cannot annotate the main segment in a Lambda execution environment');\n            return;\n        }\n        segment.addAnnotation(key, value);\n    }\n    putMetadata(key, value, namespace) {\n        const segment = this.getSegment();\n        if (segment === undefined) {\n            console.warn('No active segment or subsegment found, skipping metadata addition');\n            return;\n        }\n        if (segment instanceof aws_xray_sdk_core_1.Segment) {\n            console.warn('You cannot add metadata to the main segment in a Lambda execution environment');\n            return;\n        }\n        segment.addMetadata(key, value, namespace);\n    }\n    setContextMissingStrategy(strategy) {\n        (0, aws_xray_sdk_core_1.setContextMissingStrategy)(strategy);\n    }\n    setDaemonAddress(address) {\n        (0, aws_xray_sdk_core_1.setDaemonAddress)(address);\n    }\n    setLogger(logObj) {\n        (0, aws_xray_sdk_core_1.setLogger)(logObj);\n    }\n    setSegment(segment) {\n        (0, aws_xray_sdk_core_1.setSegment)(segment);\n    }\n}\nexports.ProviderService = ProviderService;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ProviderService\"), exports);\n__exportStar(require(\"./ProviderServiceInterface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tracer = void 0;\nconst commons_1 = require(\"@aws-lambda-powertools/commons\");\nconst config_1 = require(\"./config\");\nconst provider_1 = require(\"./provider\");\nconst aws_xray_sdk_core_1 = require(\"aws-xray-sdk-core\");\n/**\n * ## Intro\n * Tracer is an opinionated thin wrapper for [AWS X-Ray SDK for Node.js](https://github.com/aws/aws-xray-sdk-node).\n *\n * Tracing data can be visualized through AWS X-Ray Console.\n *\n * ## Key features\n *   * Auto capture cold start as annotation, and responses or full exceptions as metadata\n *   * Auto-disable when not running in AWS Lambda environment\n *   * Automatically trace HTTP(s) clients and generate segments for each request\n *   * Support tracing functions via decorators, middleware, and manual instrumentation\n *   * Support tracing AWS SDK v2 and v3 via AWS X-Ray SDK for Node.js\n *\n * ## Usage\n *\n * For more usage examples, see [our documentation](https://docs.powertools.aws.dev/lambda/typescript/latest/core/tracer/).\n *\n * ### Functions usage with middleware\n *\n * If you use function-based Lambda handlers you can use the [captureLambdaHandler()](./_aws_lambda_powertools_tracer.Tracer.html) middy middleware to automatically:\n * * handle the subsegment lifecycle\n * * add the `ServiceName` and `ColdStart` annotations\n * * add the function response as metadata\n * * add the function error as metadata (if any)\n *\n * @example\n * ```typescript\n * import { captureLambdaHandler, Tracer } from '@aws-lambda-powertools/tracer';\n * import middy from '@middy/core';\n *\n * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n *\n * const lambdaHandler = async (_event: unknown, _context: unknown) => {\n *   ...\n * };\n *\n * export const handler = middy(lambdaHandler).use(captureLambdaHandler(tracer));\n * ```\n *\n * ### Object oriented usage with decorators\n *\n * If instead you use TypeScript Classes to wrap your Lambda handler you can use the [@tracer.captureLambdaHandler()](./_aws_lambda_powertools_tracer.Tracer.html#captureLambdaHandler) decorator to automatically:\n * * handle the subsegment lifecycle\n * * add the `ServiceName` and `ColdStart` annotations\n * * add the function response as metadata\n * * add the function error as metadata (if any)\n *\n * @example\n * ```typescript\n * import { Tracer } from '@aws-lambda-powertools/tracer';\n * import { LambdaInterface } from '@aws-lambda-powertools/commons';\n *\n * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n *\n * class Lambda implements LambdaInterface {\n *   \u2063@tracer.captureLambdaHandler()\n *   public handler(_event: unknown, _context: unknown) {\n *     ...\n *   }\n * }\n *\n * const handlerClass = new Lambda();\n * export const handler = handlerClass.handler.bind(handlerClass);\n * ```\n *\n * ### Functions usage with manual instrumentation\n *\n * If you prefer to manually instrument your Lambda handler you can use the methods in the tracer class directly.\n *\n * @example\n * ```typescript\n * import { Tracer } from '@aws-lambda-powertools/tracer';\n *\n * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n *\n * export const handler = async (_event: unknown, _context: unknown) => {\n *   const segment = tracer.getSegment(); // This is the facade segment (the one that is created by AWS Lambda)\n *   // Create subsegment for the function & set it as active\n *   const subsegment = segment.addNewSubsegment(`## ${process.env._HANDLER}`);\n *   tracer.setSegment(subsegment);\n *\n *   // Annotate the subsegment with the cold start & serviceName\n *   tracer.annotateColdStart();\n *   tracer.addServiceNameAnnotation();\n *\n *   let res;\n *   try {\n *       // ... your own logic goes here\n *       // Add the response as metadata\n *       tracer.addResponseAsMetadata(res, process.env._HANDLER);\n *   } catch (err) {\n *       // Add the error as metadata\n *       tracer.addErrorAsMetadata(err as Error);\n *       throw err;\n *   } finally {\n *       // Close the subsegment\n *       subsegment.close();\n *       // Set the facade segment as active again\n *       tracer.setSegment(segment);\n *   }\n *\n *   return res;\n * }\n * ```\n */\nclass Tracer extends commons_1.Utility {\n    constructor(options = {}) {\n        super();\n        this.captureError = true;\n        this.captureHTTPsRequests = true;\n        this.captureResponse = true;\n        this.tracingEnabled = true;\n        this.setOptions(options);\n        this.provider = new provider_1.ProviderService();\n        if (this.isTracingEnabled() && this.captureHTTPsRequests) {\n            this.provider.captureHTTPsGlobal();\n        }\n        if (!this.isTracingEnabled()) {\n            // Tell x-ray-sdk to not throw an error if context is missing but tracing is disabled\n            this.provider.setContextMissingStrategy(() => ({}));\n        }\n    }\n    /**\n     * Add an error to the current segment or subsegment as metadata.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-errors\n     *\n     * @param error - Error to serialize as metadata\n     * @param [remote] - Whether the error was thrown by a remote service. Defaults to `false`\n     */\n    addErrorAsMetadata(error, remote) {\n        if (!this.isTracingEnabled()) {\n            return;\n        }\n        const subsegment = this.getSegment();\n        if (subsegment === undefined) {\n            return;\n        }\n        if (!this.captureError) {\n            subsegment.addErrorFlag();\n            return;\n        }\n        subsegment.addError(error, remote || false);\n    }\n    /**\n     * Add response data to the current segment or subsegment as metadata.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-annotations\n     *\n     * @param data - Data to serialize as metadata\n     * @param methodName - Name of the method that is being traced\n     */\n    addResponseAsMetadata(data, methodName) {\n        if (data === undefined ||\n            !this.captureResponse ||\n            !this.isTracingEnabled()) {\n            return;\n        }\n        this.putMetadata(`${methodName} response`, data);\n    }\n    /**\n     * Add service name to the current segment or subsegment as annotation.\n     *\n     */\n    addServiceNameAnnotation() {\n        if (!this.isTracingEnabled()) {\n            return;\n        }\n        this.putAnnotation('Service', this.serviceName);\n    }\n    /**\n     * Add ColdStart annotation to the current segment or subsegment.\n     *\n     * If Tracer has been initialized outside the Lambda handler then the same instance\n     * of Tracer will be reused throughout the lifecycle of that same Lambda execution environment\n     * and this method will annotate `ColdStart: false` after the first invocation.\n     *\n     * @see https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html\n     */\n    annotateColdStart() {\n        if (this.isTracingEnabled()) {\n            this.putAnnotation('ColdStart', this.getColdStart());\n        }\n    }\n    /**\n     * Patch all AWS SDK v2 clients and create traces when your application makes calls to AWS services.\n     *\n     * If you want to patch a specific client use {@link captureAWSClient} and if you are using AWS SDK v3 use {@link captureAWSv3Client} instead.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-awssdkclients.html\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     * const AWS = tracer.captureAWS(require('aws-sdk'));\n     *\n     * export const handler = async (_event: unknown, _context: unknown) => {\n     *   ...\n     * }\n     * ```\n     *\n     * @param aws - AWS SDK v2 import\n     * @returns AWS - Instrumented AWS SDK\n     */\n    captureAWS(aws) {\n        if (!this.isTracingEnabled())\n            return aws;\n        return this.provider.captureAWS(aws);\n    }\n    /**\n     * Patch a specific AWS SDK v2 client and create traces when your application makes calls to that AWS service.\n     *\n     * If you want to patch all clients use {@link captureAWS} and if you are using AWS SDK v3 use {@link captureAWSv3Client} instead.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-awssdkclients.html\n     *\n     * @example\n     * ```typescript\n     * import { S3 } from 'aws-sdk';\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     * const s3 = tracer.captureAWSClient(new S3({ apiVersion: '2006-03-01' }));\n     *\n     * export const handler = async (_event: unknown, _context: unknown) => {\n     *   ...\n     * }\n     * ```\n     *\n     * @param service - AWS SDK v2 client\n     * @returns service - Instrumented AWS SDK v2 client\n     */\n    captureAWSClient(service) {\n        if (!this.isTracingEnabled())\n            return service;\n        try {\n            return this.provider.captureAWSClient(service);\n        }\n        catch (error) {\n            try {\n                // This is needed because some aws-sdk clients like AWS.DynamoDB.DocumentDB don't comply with the same\n                // instrumentation contract like most base clients.\n                // For detailed explanation see: https://github.com/aws-powertools/powertools-lambda-typescript/issues/524#issuecomment-1024493662\n                this.provider.captureAWSClient(service.service);\n                return service;\n            }\n            catch {\n                throw error;\n            }\n        }\n    }\n    /**\n     * Patch an AWS SDK v3 client and create traces when your application makes calls to that AWS service.\n     *\n     * If you are using AWS SDK v2 use {@link captureAWSClient} instead.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-awssdkclients.html\n     *\n     * @example\n     * ```typescript\n     * import { S3Client } from '@aws-sdk/client-s3';\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     * const client = new S3Client({});\n     * tracer.captureAWSv3Client(client);\n     *\n     * export const handler = async (_event: unknown, _context: unknown) => {\n     *   ...\n     * }\n     * ```\n     *\n     * @param service - AWS SDK v3 client\n     * @returns service - Instrumented AWS SDK v3 client\n     */\n    captureAWSv3Client(service) {\n        if (!this.isTracingEnabled())\n            return service;\n        return this.provider.captureAWSv3Client(service);\n    }\n    /**\n     * A decorator automating capture of metadata and annotations on segments or subsegments for a Lambda Handler.\n     *\n     * Using this decorator on your handler function will automatically:\n     * * handle the subsegment lifecycle\n     * * add the `ColdStart` annotation\n     * * add the function response as metadata\n     * * add the function error as metadata (if any)\n     *\n     * Note: Currently TypeScript only supports decorators on classes and methods. If you are using the\n     * function syntax, you should use the middleware instead.\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     * import { LambdaInterface } from '@aws-lambda-powertools/commons';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     *\n     * class Lambda implements LambdaInterface {\n     *   \u2063@tracer.captureLambdaHandler()\n     *   public handler(_event: unknown, _context: unknown) {\n     *     // ...\n     *   }\n     * }\n     *\n     * const handlerClass = new Lambda();\n     * export const handler = handlerClass.handler.bind(handlerClass);\n     * ```\n     *\n     * @decorator Class\n     * @param options - (_optional_) Options for the decorator\n     */\n    captureLambdaHandler(options) {\n        return (_target, _propertyKey, descriptor) => {\n            /**\n             * The descriptor.value is the method this decorator decorates, it cannot be undefined.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const originalMethod = descriptor.value;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const tracerRef = this;\n            // Use a function() {} instead of an () => {} arrow function so that we can\n            // access `myClass` as `this` in a decorated `myClass.myMethod()`.\n            descriptor.value = function (event, context, callback) {\n                // eslint-disable-next-line @typescript-eslint/no-this-alias\n                const handlerRef = this;\n                if (!tracerRef.isTracingEnabled()) {\n                    return originalMethod.apply(handlerRef, [event, context, callback]);\n                }\n                return tracerRef.provider.captureAsyncFunc(`## ${process.env._HANDLER}`, async (subsegment) => {\n                    tracerRef.annotateColdStart();\n                    tracerRef.addServiceNameAnnotation();\n                    let result;\n                    try {\n                        result = await originalMethod.apply(handlerRef, [\n                            event,\n                            context,\n                            callback,\n                        ]);\n                        if (options?.captureResponse ?? true) {\n                            tracerRef.addResponseAsMetadata(result, process.env._HANDLER);\n                        }\n                    }\n                    catch (error) {\n                        tracerRef.addErrorAsMetadata(error);\n                        throw error;\n                    }\n                    finally {\n                        try {\n                            subsegment?.close();\n                        }\n                        catch (error) {\n                            console.warn(`Failed to close or serialize segment %s. We are catching the error but data might be lost.`, subsegment?.name, error);\n                        }\n                    }\n                    return result;\n                });\n            };\n            return descriptor;\n        };\n    }\n    /**\n     * A decorator automating capture of metadata and annotations on segments or subsegments for an arbitrary function.\n     *\n     * Using this decorator on your function will automatically:\n     * * handle the subsegment lifecycle\n     * * add the function response as metadata\n     * * add the function error as metadata (if any)\n     *\n     * Note: Currently TypeScript only supports decorators on classes and methods. If you are using the\n     * function syntax, you should use the middleware instead.\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     * import { LambdaInterface } from '@aws-lambda-powertools/commons';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     *\n     * class Lambda implements LambdaInterface {\n     *   \u2063@tracer.captureMethod()\n     *   public myMethod(param: string) {\n     *     // ...\n     *   }\n     *\n     *   public handler(_event: unknown, _context: unknown) {\n     *     this.myMethod('foo');\n     *   }\n     * }\n     *\n     * const handlerClass = new Lambda();\n     * export const handler = handlerClass.handler.bind(handlerClass);;\n     * ```\n     *\n     * @decorator Class\n     * @param options - (_optional_) Options for the decorator\n     */\n    captureMethod(options) {\n        return (_target, propertyKey, descriptor) => {\n            // The descriptor.value is the method this decorator decorates, it cannot be undefined.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const originalMethod = descriptor.value;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const tracerRef = this;\n            // Use a function() {} instead of an () => {} arrow function so that we can\n            // access `myClass` as `this` in a decorated `myClass.myMethod()`.\n            descriptor.value = function (...args) {\n                if (!tracerRef.isTracingEnabled()) {\n                    return originalMethod.apply(this, [...args]);\n                }\n                const methodName = String(propertyKey);\n                const subsegmentName = options?.subSegmentName\n                    ? options.subSegmentName\n                    : `### ${methodName}`;\n                return tracerRef.provider.captureAsyncFunc(subsegmentName, async (subsegment) => {\n                    let result;\n                    try {\n                        result = await originalMethod.apply(this, [...args]);\n                        if (options?.captureResponse ?? true) {\n                            tracerRef.addResponseAsMetadata(result, methodName);\n                        }\n                    }\n                    catch (error) {\n                        tracerRef.addErrorAsMetadata(error);\n                        throw error;\n                    }\n                    finally {\n                        try {\n                            subsegment?.close();\n                        }\n                        catch (error) {\n                            console.warn(`Failed to close or serialize segment %s. We are catching the error but data might be lost.`, subsegment?.name, error);\n                        }\n                    }\n                    return result;\n                });\n            };\n            return descriptor;\n        };\n    }\n    /**\n     * Get the current root AWS X-Ray trace id.\n     *\n     * Utility method that returns the current AWS X-Ray Root trace id. Useful as correlation id for downstream processes.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-traces\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     *\n     * export const handler = async () => {\n     *   try {\n     *     ...\n     *   } catch (err) {\n     *     const rootTraceId = tracer.getRootXrayTraceId();\n     *\n     *     // Example of returning an error response\n     *     return {\n     *       statusCode: 500,\n     *       // Include the rootTraceId in the response so we can show a \"contact support\" button that\n     *       // takes the customer to a customer service form with the trace as additional context.\n     *       body: `Internal Error - Please contact support and quote the following id: ${rootTraceId}`,\n     *       headers: { '_X_AMZN_TRACE_ID': rootTraceId },\n     *     };\n     *   }\n     * }\n     * ```\n     *\n     * @returns string - The root X-Ray trace id.\n     */\n    getRootXrayTraceId() {\n        return this.envVarsService.getXrayTraceId();\n    }\n    /**\n     * Get the active segment or subsegment (if any) in the current scope.\n     *\n     * Usually you won't need to call this method unless you are creating custom subsegments or using manual mode.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-segments\n     * @see https://docs.powertools.aws.dev/lambda/typescript/latest/core/tracer/#escape-hatch-mechanism\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     *\n     * export const handler = async (_event: unknown, _context: unknown) => {\n     *   const currentSegment = tracer.getSegment();\n     *   ... // Do something with segment\n     * }\n     * ```\n     *\n     * @returns The active segment or subsegment in the current scope. Will log a warning and return `undefined` if no segment is found.\n     */\n    getSegment() {\n        if (!this.isTracingEnabled()) {\n            return new aws_xray_sdk_core_1.Subsegment('## Dummy segment');\n        }\n        const segment = this.provider.getSegment();\n        if (segment === undefined) {\n            console.warn('Failed to get the current sub/segment from the context, this is likely because you are not using the Tracer in a Lambda function.');\n        }\n        return segment;\n    }\n    /**\n     * Get the current value of the AWS X-Ray Sampled flag.\n     *\n     * Utility method that returns the current AWS X-Ray Sampled flag.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-traces\n     *\n     * @returns boolean - `true` if the trace is sampled, `false` if tracing is disabled or the trace is not sampled.\n     */\n    isTraceSampled() {\n        if (!this.isTracingEnabled())\n            return false;\n        return this.envVarsService.getXrayTraceSampled();\n    }\n    /**\n     * Get the current value of the `tracingEnabled` property.\n     *\n     * You can use this method during manual instrumentation to determine\n     * if tracer is currently enabled.\n     *\n     * @returns tracingEnabled - `true` if tracing is enabled, `false` otherwise.\n     */\n    isTracingEnabled() {\n        return this.tracingEnabled;\n    }\n    /**\n     * Adds annotation to existing segment or subsegment.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-segment.html#xray-sdk-nodejs-segment-annotations\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     *\n     * export const handler = async (_event: unknown, _context: unknown) => {\n     *   tracer.putAnnotation('successfulBooking', true);\n     * }\n     * ```\n     *\n     * @param key - Annotation key\n     * @param value - Value for annotation\n     */\n    putAnnotation(key, value) {\n        if (!this.isTracingEnabled())\n            return;\n        this.provider.putAnnotation(key, value);\n    }\n    /**\n     * Adds metadata to existing segment or subsegment.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-segment.html#xray-sdk-nodejs-segment-metadata\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     *\n     * export const handler = async (_event: unknown, _context: unknown) => {\n     *   const res = someLogic();\n     *   tracer.putMetadata('paymentResponse', res);\n     * }\n     * ```\n     *\n     * @param key - Metadata key\n     * @param value - Value for metadata\n     * @param namespace - Namespace that metadata will lie under, if none is passed it will use the serviceName\n     */\n    putMetadata(key, value, namespace) {\n        if (!this.isTracingEnabled())\n            return;\n        this.provider.putMetadata(key, value, namespace || this.serviceName);\n    }\n    /**\n     * Sets the passed subsegment as the current active subsegment.\n     *\n     * If you are using a middleware or a decorator this is done automatically for you.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-subsegments.html\n     *\n     * @example\n     * ```typescript\n     * import { Tracer } from '@aws-lambda-powertools/tracer';\n     * import { Subsegment } from 'aws-xray-sdk-core';\n     *\n     * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n     *\n     * export const handler = async (_event: unknown, _context: unknown) => {\n     *   const subsegment = new Subsegment('### foo.bar');\n     *   tracer.setSegment(subsegment);\n     * }\n     * ```\n     *\n     * @param segment - Subsegment to set as the current segment\n     */\n    setSegment(segment) {\n        if (!this.isTracingEnabled())\n            return;\n        return this.provider.setSegment(segment);\n    }\n    /**\n     * Getter for `customConfigService`.\n     * Used internally during initialization.\n     */\n    getCustomConfigService() {\n        return this.customConfigService;\n    }\n    /**\n     * Getter for `envVarsService`.\n     * Used internally during initialization.\n     */\n    getEnvVarsService() {\n        return this.envVarsService;\n    }\n    /**\n     * Determine if we are running inside an Amplify CLI process.\n     * Used internally during initialization.\n     */\n    isAmplifyCli() {\n        return (this.getEnvVarsService().getAwsExecutionEnv() ===\n            'AWS_Lambda_amplify-mock');\n    }\n    /**\n     * Determine if we are running in a Lambda execution environment.\n     * Used internally during initialization.\n     */\n    isLambdaExecutionEnv() {\n        return this.getEnvVarsService().getAwsExecutionEnv() !== '';\n    }\n    /**\n     * Determine if we are running inside a SAM CLI process.\n     * Used internally during initialization.\n     */\n    isLambdaSamCli() {\n        return this.getEnvVarsService().getSamLocal() !== '';\n    }\n    /**\n     * Setter for `captureError` based on configuration passed and environment variables.\n     * Used internally during initialization.\n     */\n    setCaptureError() {\n        const customConfigValue = this.getCustomConfigService()?.getTracingCaptureError();\n        if (customConfigValue !== undefined &&\n            customConfigValue.toLowerCase() === 'false') {\n            this.captureError = false;\n            return;\n        }\n        const envVarsValue = this.getEnvVarsService().getTracingCaptureError();\n        if (envVarsValue.toLowerCase() === 'false') {\n            this.captureError = false;\n            return;\n        }\n    }\n    /**\n     * Patch all HTTP(s) clients and create traces when your application makes calls outgoing calls.\n     *\n     * Calls using third-party HTTP request libraries, such as Axios, are supported as long as they use the native http\n     * module under the hood. Support for third-party HTTP request libraries is provided on a best effort basis.\n     *\n     * @see https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-nodejs-httpclients.html\n     *\n     * @param enabled - Whether or not to patch all HTTP clients\n     * @returns void\n     */\n    setCaptureHTTPsRequests(enabled) {\n        if (enabled !== undefined && !enabled) {\n            this.captureHTTPsRequests = false;\n            return;\n        }\n        const customConfigValue = this.getCustomConfigService()?.getCaptureHTTPsRequests();\n        if (customConfigValue !== undefined &&\n            customConfigValue.toLowerCase() === 'false') {\n            this.captureHTTPsRequests = false;\n            return;\n        }\n        const envVarsValue = this.getEnvVarsService().getCaptureHTTPsRequests();\n        if (envVarsValue.toLowerCase() === 'false') {\n            this.captureHTTPsRequests = false;\n            return;\n        }\n    }\n    /**\n     * Setter for `captureResponse` based on configuration passed and environment variables.\n     * Used internally during initialization.\n     */\n    setCaptureResponse() {\n        const customConfigValue = this.getCustomConfigService()?.getTracingCaptureResponse();\n        if (customConfigValue !== undefined &&\n            customConfigValue.toLowerCase() === 'false') {\n            this.captureResponse = false;\n            return;\n        }\n        const envVarsValue = this.getEnvVarsService().getTracingCaptureResponse();\n        if (envVarsValue.toLowerCase() === 'false') {\n            this.captureResponse = false;\n            return;\n        }\n    }\n    /**\n     * Setter for `customConfigService` based on configuration passed.\n     * Used internally during initialization.\n     *\n     * @param customConfigService - Custom configuration service to use\n     */\n    setCustomConfigService(customConfigService) {\n        this.customConfigService = customConfigService\n            ? customConfigService\n            : undefined;\n    }\n    /**\n     * Setter and initializer for `envVarsService`.\n     * Used internally during initialization.\n     */\n    setEnvVarsService() {\n        this.envVarsService = new config_1.EnvironmentVariablesService();\n    }\n    /**\n     * Method that reconciles the configuration passed with the environment variables.\n     * Used internally during initialization.\n     *\n     * @param options - Configuration passed to the tracer\n     */\n    setOptions(options) {\n        const { enabled, serviceName, captureHTTPsRequests, customConfigService } = options;\n        this.setEnvVarsService();\n        this.setCustomConfigService(customConfigService);\n        this.setTracingEnabled(enabled);\n        this.setCaptureResponse();\n        this.setCaptureError();\n        this.setServiceName(serviceName);\n        this.setCaptureHTTPsRequests(captureHTTPsRequests);\n        return this;\n    }\n    /**\n     * Setter for `customConfigService` based on configurations passed and environment variables.\n     * Used internally during initialization.\n     *\n     * @param serviceName - Name of the service to use\n     */\n    setServiceName(serviceName) {\n        if (serviceName !== undefined && this.isValidServiceName(serviceName)) {\n            this.serviceName = serviceName;\n            return;\n        }\n        const customConfigValue = this.getCustomConfigService()?.getServiceName();\n        if (customConfigValue !== undefined &&\n            this.isValidServiceName(customConfigValue)) {\n            this.serviceName = customConfigValue;\n            return;\n        }\n        const envVarsValue = this.getEnvVarsService().getServiceName();\n        if (envVarsValue !== undefined && this.isValidServiceName(envVarsValue)) {\n            this.serviceName = envVarsValue;\n            return;\n        }\n        this.serviceName = this.getDefaultServiceName();\n    }\n    /**\n     * Setter for `tracingEnabled` based on configurations passed and environment variables.\n     * Used internally during initialization.\n     *\n     * @param enabled - Whether or not tracing is enabled\n     */\n    setTracingEnabled(enabled) {\n        if (enabled !== undefined && !enabled) {\n            this.tracingEnabled = enabled;\n            return;\n        }\n        const customConfigValue = this.getCustomConfigService()?.getTracingEnabled();\n        if (customConfigValue !== undefined &&\n            customConfigValue.toLowerCase() === 'false') {\n            this.tracingEnabled = false;\n            return;\n        }\n        const envVarsValue = this.getEnvVarsService().getTracingEnabled();\n        if (envVarsValue.toLowerCase() === 'false') {\n            this.tracingEnabled = false;\n            return;\n        }\n        if (this.isAmplifyCli() ||\n            this.isLambdaSamCli() ||\n            !this.isLambdaExecutionEnv()) {\n            this.tracingEnabled = false;\n        }\n    }\n}\nexports.Tracer = Tracer;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.captureLambdaHandler = void 0;\nconst middleware_1 = require(\"@aws-lambda-powertools/commons/lib/middleware\");\n/**\n * A middy middleware automating capture of metadata and annotations on segments or subsegments for a Lambda Handler.\n *\n * Using this middleware on your handler function will automatically:\n * * handle the subsegment lifecycle\n * * add the `ColdStart` annotation\n * * add the function response as metadata\n * * add the function error as metadata (if any)\n *\n * @example\n * ```typescript\n * import { Tracer, captureLambdaHandler } from '@aws-lambda-powertools/tracer';\n * import middy from '@middy/core';\n *\n * const tracer = new Tracer({ serviceName: 'serverlessAirline' });\n *\n * const lambdaHandler = async (_event: any, _context: any) => {\n *   ...\n * };\n *\n * export const handler = middy(lambdaHandler).use(captureLambdaHandler(tracer));\n * ```\n *\n * @param target - The Tracer instance to use for tracing\n * @param options - (_optional_) Options for the middleware\n * @returns middleware - The middy middleware object\n */\nconst captureLambdaHandler = (target, options) => {\n    let lambdaSegment;\n    let handlerSegment;\n    /**\n     * Set the cleanup function to be called in case other middlewares return early.\n     *\n     * @param request - The request object\n     */\n    const setCleanupFunction = (request) => {\n        request.internal = {\n            ...request.internal,\n            [middleware_1.TRACER_KEY]: close,\n        };\n    };\n    const open = () => {\n        const segment = target.getSegment();\n        if (segment === undefined) {\n            return;\n        }\n        // If segment is defined, then it is a Segment as this middleware is only used for Lambda Handlers\n        lambdaSegment = segment;\n        handlerSegment = lambdaSegment.addNewSubsegment(`## ${process.env._HANDLER}`);\n        target.setSegment(handlerSegment);\n    };\n    const close = () => {\n        if (handlerSegment === undefined || lambdaSegment === null) {\n            return;\n        }\n        try {\n            handlerSegment.close();\n        }\n        catch (error) {\n            console.warn(`Failed to close or serialize segment %s. We are catching the error but data might be lost.`, handlerSegment.name, error);\n        }\n        target.setSegment(lambdaSegment);\n    };\n    const captureLambdaHandlerBefore = async (request) => {\n        if (target.isTracingEnabled()) {\n            open();\n            setCleanupFunction(request);\n            target.annotateColdStart();\n            target.addServiceNameAnnotation();\n        }\n    };\n    const captureLambdaHandlerAfter = async (request) => {\n        if (target.isTracingEnabled()) {\n            if (options?.captureResponse ?? true) {\n                target.addResponseAsMetadata(request.response, process.env._HANDLER);\n            }\n            close();\n        }\n    };\n    const captureLambdaHandlerError = async (request) => {\n        if (target.isTracingEnabled()) {\n            target.addErrorAsMetadata(request.error);\n            close();\n        }\n    };\n    return {\n        before: captureLambdaHandlerBefore,\n        after: captureLambdaHandlerAfter,\n        onError: captureLambdaHandlerError,\n    };\n};\nexports.captureLambdaHandler = captureLambdaHandler;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./Tracer\"), exports);\n__exportStar(require(\"./TracerInterface\"), exports);\n__exportStar(require(\"./middleware/middy\"), exports);\n", "/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n", "var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n", "'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n", "'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nclass ArrayParser {\n  constructor (source, transform) {\n    this.source = source\n    this.transform = transform || identity\n    this.position = 0\n    this.entries = []\n    this.recorded = []\n    this.dimension = 0\n  }\n\n  isEof () {\n    return this.position >= this.source.length\n  }\n\n  nextCharacter () {\n    var character = this.source[this.position++]\n    if (character === '\\\\') {\n      return {\n        value: this.source[this.position++],\n        escaped: true\n      }\n    }\n    return {\n      value: character,\n      escaped: false\n    }\n  }\n\n  record (character) {\n    this.recorded.push(character)\n  }\n\n  newEntry (includeEmpty) {\n    var entry\n    if (this.recorded.length > 0 || includeEmpty) {\n      entry = this.recorded.join('')\n      if (entry === 'NULL' && !includeEmpty) {\n        entry = null\n      }\n      if (entry !== null) entry = this.transform(entry)\n      this.entries.push(entry)\n      this.recorded = []\n    }\n  }\n\n  consumeDimensions () {\n    if (this.source[0] === '[') {\n      while (!this.isEof()) {\n        var char = this.nextCharacter()\n        if (char.value === '=') break\n      }\n    }\n  }\n\n  parse (nested) {\n    var character, parser, quote\n    this.consumeDimensions()\n    while (!this.isEof()) {\n      character = this.nextCharacter()\n      if (character.value === '{' && !quote) {\n        this.dimension++\n        if (this.dimension > 1) {\n          parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n          this.entries.push(parser.parse(true))\n          this.position += parser.position - 2\n        }\n      } else if (character.value === '}' && !quote) {\n        this.dimension--\n        if (!this.dimension) {\n          this.newEntry()\n          if (nested) return this.entries\n        }\n      } else if (character.value === '\"' && !character.escaped) {\n        if (quote) this.newEntry(true)\n        quote = !quote\n      } else if (character.value === ',' && !quote) {\n        this.newEntry()\n      } else {\n        this.record(character.value)\n      }\n    }\n    if (this.dimension !== 0) {\n      throw new Error('array dimension not balanced')\n    }\n    return this.entries\n  }\n}\n\nfunction identity (value) {\n  return value\n}\n", "var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n", "'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return getDate(isoDate) || null\n  }\n\n  var isBC = !!matches[8]\n  var year = parseInt(matches[1], 10)\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, ms))\n\n    // Account for years from 0 to 99 being interpreted as 1900-1999\n    // by Date.UTC / the multi-argument form of the Date constructor\n    if (is0To99(year)) {\n      date.setUTCFullYear(year)\n    }\n\n    if (offset !== 0) {\n      date.setTime(date.getTime() - offset)\n    }\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n\n    if (is0To99(year)) {\n      date.setFullYear(year)\n    }\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  if (!matches) {\n    return\n  }\n\n  var year = parseInt(matches[1], 10)\n  var isBC = !!matches[4]\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n\n  if (is0To99(year)) {\n    date.setFullYear(year)\n  }\n\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  if (isoDate.endsWith('+00')) {\n    return 0\n  }\n\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\nfunction bcYearToNegativeYear (year) {\n  // Account for numerical difference between representations of BC years\n  // See: https://github.com/bendrucker/postgres-date/issues/5\n  return -(year - 1)\n}\n\nfunction is0To99 (num) {\n  return num >= 0 && num < 100\n}\n", "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n", "'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n", "'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n", "var array = require('postgres-array')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 'TRUE' ||\n    value === 't' ||\n    value === 'true' ||\n    value === 'y' ||\n    value === 'yes' ||\n    value === 'on' ||\n    value === '1';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseBaseTenInt (string) {\n  return parseInt(string, 10)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(parseBaseTenInt))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parsePointArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parsePoint(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseIntervalArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseInterval(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(parseByteA));\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(JSON.parse));\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(651, parseStringArray); // cidr[]\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1017, parsePointArray); // point[]\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1040, parseStringArray); // macaddr[]\n  register(1041, parseStringArray); // inet[]\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(1187, parseIntervalArray);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(3907, parseStringArray); // numrange[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n  register(1270, parseStringArray); // timetz[]\n};\n\nmodule.exports = {\n  init: init\n};\n", "'use strict';\n\n// selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n\tvar high = buffer.readInt32BE(0);\n\tvar low = buffer.readUInt32BE(4);\n\tvar sign = '';\n\n\tif (high < 0) {\n\t\thigh = ~high + (low === 0);\n\t\tlow = (~low + 1) >>> 0;\n\t\tsign = '-';\n\t}\n\n\tvar result = '';\n\tvar carry;\n\tvar t;\n\tvar digits;\n\tvar pad;\n\tvar l;\n\tvar i;\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\tt = 0x100000000 * carry + low;\n\t\tdigits = '' + t % BASE;\n\n\t\treturn sign + digits + result;\n\t}\n}\n\nmodule.exports = readInt8;\n", "var parseInt64 = require('pg-int8');\n\nvar parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(20, parseInt64);\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n", "/**\n * Following query was used to generate this file:\n\n SELECT json_object_agg(UPPER(PT.typname), PT.oid::int4 ORDER BY pt.oid)\n FROM pg_type PT\n WHERE typnamespace = (SELECT pgn.oid FROM pg_namespace pgn WHERE nspname = 'pg_catalog') -- Take only builting Postgres types with stable OID (extension types are not guaranted to be stable)\n AND typtype = 'b' -- Only basic types\n AND typelem = 0 -- Ignore aliases\n AND typisdefined -- Ignore undefined types\n */\n\nmodule.exports = {\n    BOOL: 16,\n    BYTEA: 17,\n    CHAR: 18,\n    INT8: 20,\n    INT2: 21,\n    INT4: 23,\n    REGPROC: 24,\n    TEXT: 25,\n    OID: 26,\n    TID: 27,\n    XID: 28,\n    CID: 29,\n    JSON: 114,\n    XML: 142,\n    PG_NODE_TREE: 194,\n    SMGR: 210,\n    PATH: 602,\n    POLYGON: 604,\n    CIDR: 650,\n    FLOAT4: 700,\n    FLOAT8: 701,\n    ABSTIME: 702,\n    RELTIME: 703,\n    TINTERVAL: 704,\n    CIRCLE: 718,\n    MACADDR8: 774,\n    MONEY: 790,\n    MACADDR: 829,\n    INET: 869,\n    ACLITEM: 1033,\n    BPCHAR: 1042,\n    VARCHAR: 1043,\n    DATE: 1082,\n    TIME: 1083,\n    TIMESTAMP: 1114,\n    TIMESTAMPTZ: 1184,\n    INTERVAL: 1186,\n    TIMETZ: 1266,\n    BIT: 1560,\n    VARBIT: 1562,\n    NUMERIC: 1700,\n    REFCURSOR: 1790,\n    REGPROCEDURE: 2202,\n    REGOPER: 2203,\n    REGOPERATOR: 2204,\n    REGCLASS: 2205,\n    REGTYPE: 2206,\n    UUID: 2950,\n    TXID_SNAPSHOT: 2970,\n    PG_LSN: 3220,\n    PG_NDISTINCT: 3361,\n    PG_DEPENDENCIES: 3402,\n    TSVECTOR: 3614,\n    TSQUERY: 3615,\n    GTSVECTOR: 3642,\n    REGCONFIG: 3734,\n    REGDICTIONARY: 3769,\n    JSONB: 3802,\n    REGNAMESPACE: 4089,\n    REGROLE: 4096\n};\n", "var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n", "'use strict'\n\nmodule.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  // database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  // name of database to connect\n  database: undefined,\n\n  // database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString: undefined,\n\n  // database port\n  port: 5432,\n\n  // number of rows to return at a time from a prepared statement's\n  // portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\n\n  // number of connections to use in connection pool\n  // 0 will disable connection pooling\n  max: 10,\n\n  // max milliseconds a client can go unused before it is removed\n  // from the pool and destroyed\n  idleTimeoutMillis: 30000,\n\n  client_encoding: '',\n\n  ssl: false,\n\n  application_name: undefined,\n\n  fallback_application_name: undefined,\n\n  options: undefined,\n\n  parseInputDatesAsUTC: false,\n\n  // max milliseconds any query using this connection will execute for before timing out in error.\n  // false=unlimited\n  statement_timeout: false,\n\n  // Abort any statement that waits longer than the specified duration in milliseconds while attempting to acquire a lock.\n  // false=unlimited\n  lock_timeout: false,\n\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\n  // false=unlimited\n  idle_in_transaction_session_timeout: false,\n\n  // max milliseconds to wait for query to complete (client side)\n  query_timeout: false,\n\n  connect_timeout: 0,\n\n  keepalives: 1,\n\n  keepalives_idle: 0,\n}\n\nvar pgTypes = require('pg-types')\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\n\n// parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__('parseInt8', function (val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\n})\n", "'use strict'\n\nconst defaults = require('./defaults')\n\nfunction escapeElement(elementRepresentation) {\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  // null and undefined are both null for postgres\n  if (val == null) {\n    return null\n  }\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject(val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad(number, digits) {\n  number = '' + number\n  while (number.length < digits) {\n    number = '0' + number\n  }\n  return number\n}\n\nfunction dateToString(date) {\n  var offset = -date.getTimezoneOffset()\n\n  var year = date.getFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getMonth() + 1, 2) +\n    '-' +\n    pad(date.getDate(), 2) +\n    'T' +\n    pad(date.getHours(), 2) +\n    ':' +\n    pad(date.getMinutes(), 2) +\n    ':' +\n    pad(date.getSeconds(), 2) +\n    '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else {\n    ret += '+'\n  }\n\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction dateToStringUTC(date) {\n  var year = date.getUTCFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getUTCMonth() + 1, 2) +\n    '-' +\n    pad(date.getUTCDate(), 2) +\n    'T' +\n    pad(date.getUTCHours(), 2) +\n    ':' +\n    pad(date.getUTCMinutes(), 2) +\n    ':' +\n    pad(date.getUTCSeconds(), 2) +\n    '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  ret += '+00:00'\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction normalizeQueryConfig(config, values, callback) {\n  // can take in strings or config objects\n  config = typeof config === 'string' ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\n// Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\nconst escapeIdentifier = function (str) {\n  return '\"' + str.replace(/\"/g, '\"\"') + '\"'\n}\n\nconst escapeLiteral = function (str) {\n  var hasBackslash = false\n  var escaped = \"'\"\n\n  for (var i = 0; i < str.length; i++) {\n    var c = str[i]\n    if (c === \"'\") {\n      escaped += c + c\n    } else if (c === '\\\\') {\n      escaped += c + c\n      hasBackslash = true\n    } else {\n      escaped += c\n    }\n  }\n\n  escaped += \"'\"\n\n  if (hasBackslash === true) {\n    escaped = ' E' + escaped\n  }\n\n  return escaped\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper(value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  escapeIdentifier,\n  escapeLiteral,\n}\n", "'use strict'\n// This file contains crypto utility functions for versions of Node.js < 15.0.0,\n// which does not support the WebCrypto.subtle API.\n\nconst nodeCrypto = require('crypto')\n\nfunction md5(string) {\n  return nodeCrypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nfunction postgresMd5PasswordHash(user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nfunction sha256(text) {\n  return nodeCrypto.createHash('sha256').update(text).digest()\n}\n\nfunction hmacSha256(key, msg) {\n  return nodeCrypto.createHmac('sha256', key).update(msg).digest()\n}\n\nasync function deriveKey(password, salt, iterations) {\n  return nodeCrypto.pbkdf2Sync(password, salt, iterations, 32, 'sha256')\n}\n\nmodule.exports = {\n  postgresMd5PasswordHash,\n  randomBytes: nodeCrypto.randomBytes,\n  deriveKey,\n  sha256,\n  hmacSha256,\n  md5,\n}\n", "const nodeCrypto = require('crypto')\n\nmodule.exports = {\n  postgresMd5PasswordHash,\n  randomBytes,\n  deriveKey,\n  sha256,\n  hmacSha256,\n  md5,\n}\n\n/**\n * The Web Crypto API - grabbed from the Node.js library or the global\n * @type Crypto\n */\nconst webCrypto = nodeCrypto.webcrypto || globalThis.crypto\n/**\n * The SubtleCrypto API for low level crypto operations.\n * @type SubtleCrypto\n */\nconst subtleCrypto = webCrypto.subtle\nconst textEncoder = new TextEncoder()\n\n/**\n *\n * @param {*} length\n * @returns\n */\nfunction randomBytes(length) {\n  return webCrypto.getRandomValues(Buffer.alloc(length))\n}\n\nasync function md5(string) {\n  try {\n    return nodeCrypto.createHash('md5').update(string, 'utf-8').digest('hex')\n  } catch (e) {\n    // `createHash()` failed so we are probably not in Node.js, use the WebCrypto API instead.\n    // Note that the MD5 algorithm on WebCrypto is not available in Node.js.\n    // This is why we cannot just use WebCrypto in all environments.\n    const data = typeof string === 'string' ? textEncoder.encode(string) : string\n    const hash = await subtleCrypto.digest('MD5', data)\n    return Array.from(new Uint8Array(hash))\n      .map((b) => b.toString(16).padStart(2, '0'))\n      .join('')\n  }\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nasync function postgresMd5PasswordHash(user, password, salt) {\n  var inner = await md5(password + user)\n  var outer = await md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\n/**\n * Create a SHA-256 digest of the given data\n * @param {Buffer} data\n */\nasync function sha256(text) {\n  return await subtleCrypto.digest('SHA-256', text)\n}\n\n/**\n * Sign the message with the given key\n * @param {ArrayBuffer} keyBuffer\n * @param {string} msg\n */\nasync function hmacSha256(keyBuffer, msg) {\n  const key = await subtleCrypto.importKey('raw', keyBuffer, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign'])\n  return await subtleCrypto.sign('HMAC', key, textEncoder.encode(msg))\n}\n\n/**\n * Derive a key from the password and salt\n * @param {string} password\n * @param {Uint8Array} salt\n * @param {number} iterations\n */\nasync function deriveKey(password, salt, iterations) {\n  const key = await subtleCrypto.importKey('raw', textEncoder.encode(password), 'PBKDF2', false, ['deriveBits'])\n  const params = { name: 'PBKDF2', hash: 'SHA-256', salt: salt, iterations: iterations }\n  return await subtleCrypto.deriveBits(params, key, 32 * 8, ['deriveBits'])\n}\n", "'use strict'\n\nconst useLegacyCrypto = parseInt(process.versions && process.versions.node && process.versions.node.split('.')[0]) < 15\nif (useLegacyCrypto) {\n  // We are on an old version of Node.js that requires legacy crypto utilities.\n  module.exports = require('./utils-legacy')\n} else {\n  module.exports = require('./utils-webcrypto');\n}\n", "'use strict'\nconst crypto = require('./utils')\n\nfunction startSession(mechanisms) {\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\n  }\n\n  const clientNonce = crypto.randomBytes(18).toString('base64')\n\n  return {\n    mechanism: 'SCRAM-SHA-256',\n    clientNonce,\n    response: 'n,,n=*,r=' + clientNonce,\n    message: 'SASLInitialResponse',\n  }\n}\n\nasync function continueSession(session, password, serverData) {\n  if (session.message !== 'SASLInitialResponse') {\n    throw new Error('SASL: Last message was not SASLInitialResponse')\n  }\n  if (typeof password !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string')\n  }\n  if (password === '') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a non-empty string')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string')\n  }\n\n  const sv = parseServerFirstMessage(serverData)\n\n  if (!sv.nonce.startsWith(session.clientNonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\n  } else if (sv.nonce.length === session.clientNonce.length) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short')\n  }\n\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\n\n  var saltBytes = Buffer.from(sv.salt, 'base64')\n  var saltedPassword = await crypto.deriveKey(password, saltBytes, sv.iteration)\n  var clientKey = await crypto.hmacSha256(saltedPassword, 'Client Key')\n  var storedKey = await crypto.sha256(clientKey)\n  var clientSignature = await crypto.hmacSha256(storedKey, authMessage)\n  var clientProof = xorBuffers(Buffer.from(clientKey), Buffer.from(clientSignature)).toString('base64')\n  var serverKey = await crypto.hmacSha256(saltedPassword, 'Server Key')\n  var serverSignatureBytes = await crypto.hmacSha256(serverKey, authMessage)\n\n  session.message = 'SASLResponse'\n  session.serverSignature = Buffer.from(serverSignatureBytes).toString('base64')\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\n}\n\nfunction finalizeSession(session, serverData) {\n  if (session.message !== 'SASLResponse') {\n    throw new Error('SASL: Last message was not SASLResponse')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string')\n  }\n\n  const { serverSignature } = parseServerFinalMessage(serverData)\n\n  if (serverSignature !== session.serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\n  }\n}\n\n/**\n * printable       = %x21-2B / %x2D-7E\n *                   ;; Printable ASCII except \",\".\n *                   ;; Note that any \"printable\" is also\n *                   ;; a valid \"value\".\n */\nfunction isPrintableChars(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: text must be a string')\n  }\n  return text\n    .split('')\n    .map((_, i) => text.charCodeAt(i))\n    .every((c) => (c >= 0x21 && c <= 0x2b) || (c >= 0x2d && c <= 0x7e))\n}\n\n/**\n * base64-char     = ALPHA / DIGIT / \"/\" / \"+\"\n *\n * base64-4        = 4base64-char\n *\n * base64-3        = 3base64-char \"=\"\n *\n * base64-2        = 2base64-char \"==\"\n *\n * base64          = *base64-4 [base64-3 / base64-2]\n */\nfunction isBase64(text) {\n  return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(text)\n}\n\nfunction parseAttributePairs(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: attribute pairs text must be a string')\n  }\n\n  return new Map(\n    text.split(',').map((attrValue) => {\n      if (!/^.=/.test(attrValue)) {\n        throw new Error('SASL: Invalid attribute pair entry')\n      }\n      const name = attrValue[0]\n      const value = attrValue.substring(2)\n      return [name, value]\n    })\n  )\n}\n\nfunction parseServerFirstMessage(data) {\n  const attrPairs = parseAttributePairs(data)\n\n  const nonce = attrPairs.get('r')\n  if (!nonce) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\n  } else if (!isPrintableChars(nonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters')\n  }\n  const salt = attrPairs.get('s')\n  if (!salt) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\n  } else if (!isBase64(salt)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64')\n  }\n  const iterationText = attrPairs.get('i')\n  if (!iterationText) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\n  } else if (!/^[1-9][0-9]*$/.test(iterationText)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count')\n  }\n  const iteration = parseInt(iterationText, 10)\n\n  return {\n    nonce,\n    salt,\n    iteration,\n  }\n}\n\nfunction parseServerFinalMessage(serverData) {\n  const attrPairs = parseAttributePairs(serverData)\n  const serverSignature = attrPairs.get('v')\n  if (!serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing')\n  } else if (!isBase64(serverSignature)) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64')\n  }\n  return {\n    serverSignature,\n  }\n}\n\nfunction xorBuffers(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    throw new TypeError('first argument must be a Buffer')\n  }\n  if (!Buffer.isBuffer(b)) {\n    throw new TypeError('second argument must be a Buffer')\n  }\n  if (a.length !== b.length) {\n    throw new Error('Buffer lengths must match')\n  }\n  if (a.length === 0) {\n    throw new Error('Buffers cannot be empty')\n  }\n  return Buffer.from(a.map((_, i) => a[i] ^ b[i]))\n}\n\nmodule.exports = {\n  startSession,\n  continueSession,\n  finalizeSession,\n}\n", "'use strict'\n\nvar types = require('pg-types')\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types\n  this.text = {}\n  this.binary = {}\n}\n\nTypeOverrides.prototype.getOverrides = function (format) {\n  switch (format) {\n    case 'text':\n      return this.text\n    case 'binary':\n      return this.binary\n    default:\n      return {}\n  }\n}\n\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\n  if (typeof format === 'function') {\n    parseFn = format\n    format = 'text'\n  }\n  this.getOverrides(format)[oid] = parseFn\n}\n\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\n  format = format || 'text'\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\n}\n\nmodule.exports = TypeOverrides\n", "'use strict'\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    const config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // Check for empty host in URL\n\n  const config = {}\n  let result\n  let dummyHost = false\n  if (/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\n    // Ensure spaces are encoded as %20\n    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1')\n  }\n\n  try {\n    result = new URL(str, 'postgres://base')\n  } catch (e) {\n    // The URL is invalid so try again with a dummy host\n    result = new URL(str.replace('@/', '@___DUMMY___/'), 'postgres://base')\n    dummyHost = true\n  }\n\n  // We'd like to use Object.fromEntries() here but Node.js 10 does not support it\n  for (const entry of result.searchParams.entries()) {\n    config[entry[0]] = entry[1]\n  }\n\n  config.user = config.user || decodeURIComponent(result.username)\n  config.password = config.password || decodeURIComponent(result.password)\n\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.searchParams.get('db')\n    config.client_encoding = result.searchParams.get('encoding')\n    return config\n  }\n  const hostname = dummyHost ? '' : result.hostname\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = decodeURIComponent(hostname)\n  } else if (hostname && /^%2f/i.test(hostname)) {\n    // Only prepend the hostname to the pathname if it is not a URL encoded Unix socket host.\n    result.pathname = hostname + result.pathname\n  }\n  if (!config.port) {\n    // Only set the port if there is no equivalent query param.\n    config.port = result.port\n  }\n\n  const pathname = result.pathname.slice(1) || null\n  config.database = pathname ? decodeURI(pathname) : null\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  // Only try to load fs if we expect to read from the disk\n  const fs = config.sslcert || config.sslkey || config.sslrootcert ? require('fs') : null\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n", "'use strict'\n\nvar dns = require('dns')\n\nvar defaults = require('./defaults')\n\nvar parse = require('pg-connection-string').parse // parses a connection string\n\nvar val = function (key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env['PG' + key.toUpperCase()]\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[envVar]\n  }\n\n  return config[key] || envVar || defaults[key]\n}\n\nvar readSSLConfigFromEnvironment = function () {\n  switch (process.env.PGSSLMODE) {\n    case 'disable':\n      return false\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full':\n      return true\n    case 'no-verify':\n      return { rejectUnauthorized: false }\n  }\n  return defaults.ssl\n}\n\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\nvar quoteParamValue = function (value) {\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\n}\n\nvar add = function (params, config, paramName) {\n  var value = config[paramName]\n  if (value !== undefined && value !== null) {\n    params.push(paramName + '=' + quoteParamValue(value))\n  }\n}\n\nclass ConnectionParameters {\n  constructor(config) {\n    // if a string is passed, it is a raw connection string so we parse it into a config\n    config = typeof config === 'string' ? parse(config) : config || {}\n\n    // if the config has a connectionString defined, parse IT into the config we use\n    // this will override other default values with what is stored in connectionString\n    if (config.connectionString) {\n      config = Object.assign({}, config, parse(config.connectionString))\n    }\n\n    this.user = val('user', config)\n    this.database = val('database', config)\n\n    if (this.database === undefined) {\n      this.database = this.user\n    }\n\n    this.port = parseInt(val('port', config), 10)\n    this.host = val('host', config)\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: val('password', config),\n    })\n\n    this.binary = val('binary', config)\n    this.options = val('options', config)\n\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\n\n    if (typeof this.ssl === 'string') {\n      if (this.ssl === 'true') {\n        this.ssl = true\n      }\n    }\n    // support passing in ssl=no-verify via connection string\n    if (this.ssl === 'no-verify') {\n      this.ssl = { rejectUnauthorized: false }\n    }\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.client_encoding = val('client_encoding', config)\n    this.replication = val('replication', config)\n    // a domain socket begins with '/'\n    this.isDomainSocket = !(this.host || '').indexOf('/')\n\n    this.application_name = val('application_name', config, 'PGAPPNAME')\n    this.fallback_application_name = val('fallback_application_name', config, false)\n    this.statement_timeout = val('statement_timeout', config, false)\n    this.lock_timeout = val('lock_timeout', config, false)\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\n    this.query_timeout = val('query_timeout', config, false)\n\n    if (config.connectionTimeoutMillis === undefined) {\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\n    } else {\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\n    }\n\n    if (config.keepAlive === false) {\n      this.keepalives = 0\n    } else if (config.keepAlive === true) {\n      this.keepalives = 1\n    }\n\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\n    }\n  }\n\n  getLibpqConnectionString(cb) {\n    var params = []\n    add(params, this, 'user')\n    add(params, this, 'password')\n    add(params, this, 'port')\n    add(params, this, 'application_name')\n    add(params, this, 'fallback_application_name')\n    add(params, this, 'connect_timeout')\n    add(params, this, 'options')\n\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\n    add(params, ssl, 'sslmode')\n    add(params, ssl, 'sslca')\n    add(params, ssl, 'sslkey')\n    add(params, ssl, 'sslcert')\n    add(params, ssl, 'sslrootcert')\n\n    if (this.database) {\n      params.push('dbname=' + quoteParamValue(this.database))\n    }\n    if (this.replication) {\n      params.push('replication=' + quoteParamValue(this.replication))\n    }\n    if (this.host) {\n      params.push('host=' + quoteParamValue(this.host))\n    }\n    if (this.isDomainSocket) {\n      return cb(null, params.join(' '))\n    }\n    if (this.client_encoding) {\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\n    }\n    dns.lookup(this.host, function (err, address) {\n      if (err) return cb(err, null)\n      params.push('hostaddr=' + quoteParamValue(address))\n      return cb(null, params.join(' '))\n    })\n  }\n}\n\nmodule.exports = ConnectionParameters\n", "'use strict'\n\nvar types = require('pg-types')\n\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\n\n// result object returned from query\n// in the 'end' event and also\n// passed as second argument to provided callback\nclass Result {\n  constructor(rowMode, types) {\n    this.command = null\n    this.rowCount = null\n    this.oid = null\n    this.rows = []\n    this.fields = []\n    this._parsers = undefined\n    this._types = types\n    this.RowCtor = null\n    this.rowAsArray = rowMode === 'array'\n    if (this.rowAsArray) {\n      this.parseRow = this._parseRowAsArray\n    }\n    this._prebuiltEmptyResultObject = null\n  }\n\n  // adds a command complete message\n  addCommandComplete(msg) {\n    var match\n    if (msg.text) {\n      // pure javascript\n      match = matchRegexp.exec(msg.text)\n    } else {\n      // native bindings\n      match = matchRegexp.exec(msg.command)\n    }\n    if (match) {\n      this.command = match[1]\n      if (match[3]) {\n        // COMMMAND OID ROWS\n        this.oid = parseInt(match[2], 10)\n        this.rowCount = parseInt(match[3], 10)\n      } else if (match[2]) {\n        // COMMAND ROWS\n        this.rowCount = parseInt(match[2], 10)\n      }\n    }\n  }\n\n  _parseRowAsArray(rowData) {\n    var row = new Array(rowData.length)\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      if (rawValue !== null) {\n        row[i] = this._parsers[i](rawValue)\n      } else {\n        row[i] = null\n      }\n    }\n    return row\n  }\n\n  parseRow(rowData) {\n    var row = { ... this._prebuiltEmptyResultObject }\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      var field = this.fields[i].name\n      if (rawValue !== null) {\n        row[field] = this._parsers[i](rawValue)\n      }\n    }\n    return row\n  }\n\n  addRow(row) {\n    this.rows.push(row)\n  }\n\n  addFields(fieldDescriptions) {\n    // clears field definitions\n    // multiple query statements in 1 action can result in multiple sets\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\n    // you need to reset the fields\n    this.fields = fieldDescriptions\n    if (this.fields.length) {\n      this._parsers = new Array(fieldDescriptions.length)\n    }\n    for (var i = 0; i < fieldDescriptions.length; i++) {\n      var desc = fieldDescriptions[i]\n      if (this._types) {\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      } else {\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      }\n    }\n    this._createPrebuiltEmptyResultObject()\n  }\n  _createPrebuiltEmptyResultObject() {\n    var row = {}\n    for (var i = 0; i < this.fields.length; i++) {\n      row[this.fields[i].name] = null\n    }\n    this._prebuiltEmptyResultObject = { ... row }\n  }\n}\n\nmodule.exports = Result\n", "'use strict'\n\nconst { EventEmitter } = require('events')\n\nconst Result = require('./result')\nconst utils = require('./utils')\n\nclass Query extends EventEmitter {\n  constructor(config, values, callback) {\n    super()\n\n    config = utils.normalizeQueryConfig(config, values, callback)\n\n    this.text = config.text\n    this.values = config.values\n    this.rows = config.rows\n    this.types = config.types\n    this.name = config.name\n    this.binary = config.binary\n    // use unique portal name each time\n    this.portal = config.portal || ''\n    this.callback = config.callback\n    this._rowMode = config.rowMode\n    if (process.domain && config.callback) {\n      this.callback = process.domain.bind(config.callback)\n    }\n    this._result = new Result(this._rowMode, this.types)\n\n    // potential for multiple results\n    this._results = this._result\n    this.isPreparedStatement = false\n    this._canceledDueToError = false\n    this._promise = null\n  }\n\n  requiresPreparation() {\n    // named queries must always be prepared\n    if (this.name) {\n      return true\n    }\n    // always prepare if there are max number of rows expected per\n    // portal execution\n    if (this.rows) {\n      return true\n    }\n    // don't prepare empty text queries\n    if (!this.text) {\n      return false\n    }\n    // prepare if there are values\n    if (!this.values) {\n      return false\n    }\n    return this.values.length > 0\n  }\n\n  _checkForMultirow() {\n    // if we already have a result with a command property\n    // then we've already executed one query in a multi-statement simple query\n    // turn our results into an array of results\n    if (this._result.command) {\n      if (!Array.isArray(this._results)) {\n        this._results = [this._result]\n      }\n      this._result = new Result(this._rowMode, this.types)\n      this._results.push(this._result)\n    }\n  }\n\n  // associates row metadata from the supplied\n  // message with this query object\n  // metadata used when parsing row results\n  handleRowDescription(msg) {\n    this._checkForMultirow()\n    this._result.addFields(msg.fields)\n    this._accumulateRows = this.callback || !this.listeners('row').length\n  }\n\n  handleDataRow(msg) {\n    let row\n\n    if (this._canceledDueToError) {\n      return\n    }\n\n    try {\n      row = this._result.parseRow(msg.fields)\n    } catch (err) {\n      this._canceledDueToError = err\n      return\n    }\n\n    this.emit('row', row, this._result)\n    if (this._accumulateRows) {\n      this._result.addRow(row)\n    }\n  }\n\n  handleCommandComplete(msg, connection) {\n    this._checkForMultirow()\n    this._result.addCommandComplete(msg)\n    // need to sync after each command complete of a prepared statement\n    // if we were using a row count which results in multiple calls to _getRows\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  // if a named prepared statement is created with empty query text\n  // the backend will send an emptyQuery message but *not* a command complete message\n  // since we pipeline sync immediately after execute we don't need to do anything here\n  // unless we have rows specified, in which case we did not pipeline the intial sync call\n  handleEmptyQuery(connection) {\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  handleError(err, connection) {\n    // need to sync after error during a prepared statement\n    if (this._canceledDueToError) {\n      err = this._canceledDueToError\n      this._canceledDueToError = false\n    }\n    // if callback supplied do not emit error event as uncaught error\n    // events will bubble up to node process\n    if (this.callback) {\n      return this.callback(err)\n    }\n    this.emit('error', err)\n  }\n\n  handleReadyForQuery(con) {\n    if (this._canceledDueToError) {\n      return this.handleError(this._canceledDueToError, con)\n    }\n    if (this.callback) {\n      try {\n        this.callback(null, this._results)\n      }\n      catch(err) {\n        process.nextTick(() => {\n          throw err\n        })\n      }\n    }\n    this.emit('end', this._results)\n  }\n\n  submit(connection) {\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\n    }\n    const previous = connection.parsedStatements[this.name]\n    if (this.text && previous && this.text !== previous) {\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n    }\n    if (this.values && !Array.isArray(this.values)) {\n      return new Error('Query values must be an array')\n    }\n    if (this.requiresPreparation()) {\n      this.prepare(connection)\n    } else {\n      connection.query(this.text)\n    }\n    return null\n  }\n\n  hasBeenParsed(connection) {\n    return this.name && connection.parsedStatements[this.name]\n  }\n\n  handlePortalSuspended(connection) {\n    this._getRows(connection, this.rows)\n  }\n\n  _getRows(connection, rows) {\n    connection.execute({\n      portal: this.portal,\n      rows: rows,\n    })\n    // if we're not reading pages of rows send the sync command\n    // to indicate the pipeline is finished\n    if (!rows) {\n      connection.sync()\n    } else {\n      // otherwise flush the call out to read more rows\n      connection.flush()\n    }\n  }\n\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  prepare(connection) {\n    // prepared statements need sync to be called after each command\n    // complete or when an error is encountered\n    this.isPreparedStatement = true\n\n    // TODO refactor this poor encapsulation\n    if (!this.hasBeenParsed(connection)) {\n      connection.parse({\n        text: this.text,\n        name: this.name,\n        types: this.types,\n      })\n    }\n\n    // because we're mapping user supplied values to\n    // postgres wire protocol compatible values it could\n    // throw an exception, so try/catch this section\n    try {\n      connection.bind({\n        portal: this.portal,\n        statement: this.name,\n        values: this.values,\n        binary: this.binary,\n        valueMapper: utils.prepareValue,\n      })\n    } catch (err) {\n      this.handleError(err, connection)\n      return\n    }\n\n    connection.describe({\n      type: 'P',\n      name: this.portal || '',\n    })\n\n    this._getRows(connection, this.rows)\n  }\n\n  handleCopyInResponse(connection) {\n    connection.sendCopyFail('No source stream defined')\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleCopyData(msg, connection) {\n    // noop\n  }\n}\n\nmodule.exports = Query\n", "export type Mode = 'text' | 'binary'\n\nexport type MessageName =\n  | 'parseComplete'\n  | 'bindComplete'\n  | 'closeComplete'\n  | 'noData'\n  | 'portalSuspended'\n  | 'replicationStart'\n  | 'emptyQuery'\n  | 'copyDone'\n  | 'copyData'\n  | 'rowDescription'\n  | 'parameterDescription'\n  | 'parameterStatus'\n  | 'backendKeyData'\n  | 'notification'\n  | 'readyForQuery'\n  | 'commandComplete'\n  | 'dataRow'\n  | 'copyInResponse'\n  | 'copyOutResponse'\n  | 'authenticationOk'\n  | 'authenticationMD5Password'\n  | 'authenticationCleartextPassword'\n  | 'authenticationSASL'\n  | 'authenticationSASLContinue'\n  | 'authenticationSASLFinal'\n  | 'error'\n  | 'notice'\n\nexport interface BackendMessage {\n  name: MessageName\n  length: number\n}\n\nexport const parseComplete: BackendMessage = {\n  name: 'parseComplete',\n  length: 5,\n}\n\nexport const bindComplete: BackendMessage = {\n  name: 'bindComplete',\n  length: 5,\n}\n\nexport const closeComplete: BackendMessage = {\n  name: 'closeComplete',\n  length: 5,\n}\n\nexport const noData: BackendMessage = {\n  name: 'noData',\n  length: 5,\n}\n\nexport const portalSuspended: BackendMessage = {\n  name: 'portalSuspended',\n  length: 5,\n}\n\nexport const replicationStart: BackendMessage = {\n  name: 'replicationStart',\n  length: 4,\n}\n\nexport const emptyQuery: BackendMessage = {\n  name: 'emptyQuery',\n  length: 4,\n}\n\nexport const copyDone: BackendMessage = {\n  name: 'copyDone',\n  length: 4,\n}\n\ninterface NoticeOrError {\n  message: string | undefined\n  severity: string | undefined\n  code: string | undefined\n  detail: string | undefined\n  hint: string | undefined\n  position: string | undefined\n  internalPosition: string | undefined\n  internalQuery: string | undefined\n  where: string | undefined\n  schema: string | undefined\n  table: string | undefined\n  column: string | undefined\n  dataType: string | undefined\n  constraint: string | undefined\n  file: string | undefined\n  line: string | undefined\n  routine: string | undefined\n}\n\nexport class DatabaseError extends Error implements NoticeOrError {\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n  constructor(message: string, public readonly length: number, public readonly name: MessageName) {\n    super(message)\n  }\n}\n\nexport class CopyDataMessage {\n  public readonly name = 'copyData'\n  constructor(public readonly length: number, public readonly chunk: Buffer) {}\n}\n\nexport class CopyResponse {\n  public readonly columnTypes: number[]\n  constructor(\n    public readonly length: number,\n    public readonly name: MessageName,\n    public readonly binary: boolean,\n    columnCount: number\n  ) {\n    this.columnTypes = new Array(columnCount)\n  }\n}\n\nexport class Field {\n  constructor(\n    public readonly name: string,\n    public readonly tableID: number,\n    public readonly columnID: number,\n    public readonly dataTypeID: number,\n    public readonly dataTypeSize: number,\n    public readonly dataTypeModifier: number,\n    public readonly format: Mode\n  ) {}\n}\n\nexport class RowDescriptionMessage {\n  public readonly name: MessageName = 'rowDescription'\n  public readonly fields: Field[]\n  constructor(public readonly length: number, public readonly fieldCount: number) {\n    this.fields = new Array(this.fieldCount)\n  }\n}\n\nexport class ParameterDescriptionMessage {\n  public readonly name: MessageName = 'parameterDescription'\n  public readonly dataTypeIDs: number[]\n  constructor(public readonly length: number, public readonly parameterCount: number) {\n    this.dataTypeIDs = new Array(this.parameterCount)\n  }\n}\n\nexport class ParameterStatusMessage {\n  public readonly name: MessageName = 'parameterStatus'\n  constructor(\n    public readonly length: number,\n    public readonly parameterName: string,\n    public readonly parameterValue: string\n  ) {}\n}\n\nexport class AuthenticationMD5Password implements BackendMessage {\n  public readonly name: MessageName = 'authenticationMD5Password'\n  constructor(public readonly length: number, public readonly salt: Buffer) {}\n}\n\nexport class BackendKeyDataMessage {\n  public readonly name: MessageName = 'backendKeyData'\n  constructor(public readonly length: number, public readonly processID: number, public readonly secretKey: number) {}\n}\n\nexport class NotificationResponseMessage {\n  public readonly name: MessageName = 'notification'\n  constructor(\n    public readonly length: number,\n    public readonly processId: number,\n    public readonly channel: string,\n    public readonly payload: string\n  ) {}\n}\n\nexport class ReadyForQueryMessage {\n  public readonly name: MessageName = 'readyForQuery'\n  constructor(public readonly length: number, public readonly status: string) {}\n}\n\nexport class CommandCompleteMessage {\n  public readonly name: MessageName = 'commandComplete'\n  constructor(public readonly length: number, public readonly text: string) {}\n}\n\nexport class DataRowMessage {\n  public readonly fieldCount: number\n  public readonly name: MessageName = 'dataRow'\n  constructor(public length: number, public fields: any[]) {\n    this.fieldCount = fields.length\n  }\n}\n\nexport class NoticeMessage implements BackendMessage, NoticeOrError {\n  constructor(public readonly length: number, public readonly message: string | undefined) {}\n  public readonly name = 'notice'\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n}\n", "//binary data writer tuned for encoding binary specific to the postgres binary protocol\n\nexport class Writer {\n  private buffer: Buffer\n  private offset: number = 5\n  private headerPosition: number = 0\n  constructor(private size = 256) {\n    this.buffer = Buffer.allocUnsafe(size)\n  }\n\n  private ensure(size: number): void {\n    var remaining = this.buffer.length - this.offset\n    if (remaining < size) {\n      var oldBuffer = this.buffer\n      // exponential growth factor of around ~ 1.5\n      // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n      var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size\n      this.buffer = Buffer.allocUnsafe(newSize)\n      oldBuffer.copy(this.buffer)\n    }\n  }\n\n  public addInt32(num: number): Writer {\n    this.ensure(4)\n    this.buffer[this.offset++] = (num >>> 24) & 0xff\n    this.buffer[this.offset++] = (num >>> 16) & 0xff\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\n    return this\n  }\n\n  public addInt16(num: number): Writer {\n    this.ensure(2)\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\n    return this\n  }\n\n  public addCString(string: string): Writer {\n    if (!string) {\n      this.ensure(1)\n    } else {\n      var len = Buffer.byteLength(string)\n      this.ensure(len + 1) // +1 for null terminator\n      this.buffer.write(string, this.offset, 'utf-8')\n      this.offset += len\n    }\n\n    this.buffer[this.offset++] = 0 // null terminator\n    return this\n  }\n\n  public addString(string: string = ''): Writer {\n    var len = Buffer.byteLength(string)\n    this.ensure(len)\n    this.buffer.write(string, this.offset)\n    this.offset += len\n    return this\n  }\n\n  public add(otherBuffer: Buffer): Writer {\n    this.ensure(otherBuffer.length)\n    otherBuffer.copy(this.buffer, this.offset)\n    this.offset += otherBuffer.length\n    return this\n  }\n\n  private join(code?: number): Buffer {\n    if (code) {\n      this.buffer[this.headerPosition] = code\n      //length is everything in this packet minus the code\n      const length = this.offset - (this.headerPosition + 1)\n      this.buffer.writeInt32BE(length, this.headerPosition + 1)\n    }\n    return this.buffer.slice(code ? 0 : 5, this.offset)\n  }\n\n  public flush(code?: number): Buffer {\n    var result = this.join(code)\n    this.offset = 5\n    this.headerPosition = 0\n    this.buffer = Buffer.allocUnsafe(this.size)\n    return result\n  }\n}\n", "import { Writer } from './buffer-writer'\n\nconst enum code {\n  startup = 0x70,\n  query = 0x51,\n  parse = 0x50,\n  bind = 0x42,\n  execute = 0x45,\n  flush = 0x48,\n  sync = 0x53,\n  end = 0x58,\n  close = 0x43,\n  describe = 0x44,\n  copyFromChunk = 0x64,\n  copyDone = 0x63,\n  copyFail = 0x66,\n}\n\nconst writer = new Writer()\n\nconst startup = (opts: Record<string, string>): Buffer => {\n  // protocol version\n  writer.addInt16(3).addInt16(0)\n  for (const key of Object.keys(opts)) {\n    writer.addCString(key).addCString(opts[key])\n  }\n\n  writer.addCString('client_encoding').addCString('UTF8')\n\n  var bodyBuffer = writer.addCString('').flush()\n  // this message is sent without a code\n\n  var length = bodyBuffer.length + 4\n\n  return new Writer().addInt32(length).add(bodyBuffer).flush()\n}\n\nconst requestSsl = (): Buffer => {\n  const response = Buffer.allocUnsafe(8)\n  response.writeInt32BE(8, 0)\n  response.writeInt32BE(80877103, 4)\n  return response\n}\n\nconst password = (password: string): Buffer => {\n  return writer.addCString(password).flush(code.startup)\n}\n\nconst sendSASLInitialResponseMessage = function (mechanism: string, initialResponse: string): Buffer {\n  // 0x70 = 'p'\n  writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse)\n\n  return writer.flush(code.startup)\n}\n\nconst sendSCRAMClientFinalMessage = function (additionalData: string): Buffer {\n  return writer.addString(additionalData).flush(code.startup)\n}\n\nconst query = (text: string): Buffer => {\n  return writer.addCString(text).flush(code.query)\n}\n\ntype ParseOpts = {\n  name?: string\n  types?: number[]\n  text: string\n}\n\nconst emptyArray: any[] = []\n\nconst parse = (query: ParseOpts): Buffer => {\n  // expect something like this:\n  // { name: 'queryName',\n  //   text: 'select * from blah',\n  //   types: ['int8', 'bool'] }\n\n  // normalize missing query names to allow for null\n  const name = query.name || ''\n  if (name.length > 63) {\n    /* eslint-disable no-console */\n    console.error('Warning! Postgres only supports 63 characters for query names.')\n    console.error('You supplied %s (%s)', name, name.length)\n    console.error('This can cause conflicts and silent errors executing queries')\n    /* eslint-enable no-console */\n  }\n\n  const types = query.types || emptyArray\n\n  var len = types.length\n\n  var buffer = writer\n    .addCString(name) // name of query\n    .addCString(query.text) // actual query text\n    .addInt16(len)\n\n  for (var i = 0; i < len; i++) {\n    buffer.addInt32(types[i])\n  }\n\n  return writer.flush(code.parse)\n}\n\ntype ValueMapper = (param: any, index: number) => any\n\ntype BindOpts = {\n  portal?: string\n  binary?: boolean\n  statement?: string\n  values?: any[]\n  // optional map from JS value to postgres value per parameter\n  valueMapper?: ValueMapper\n}\n\nconst paramWriter = new Writer()\n\n// make this a const enum so typescript will inline the value\nconst enum ParamType {\n  STRING = 0,\n  BINARY = 1,\n}\n\nconst writeValues = function (values: any[], valueMapper?: ValueMapper): void {\n  for (let i = 0; i < values.length; i++) {\n    const mappedVal = valueMapper ? valueMapper(values[i], i) : values[i]\n    if (mappedVal == null) {\n      // add the param type (string) to the writer\n      writer.addInt16(ParamType.STRING)\n      // write -1 to the param writer to indicate null\n      paramWriter.addInt32(-1)\n    } else if (mappedVal instanceof Buffer) {\n      // add the param type (binary) to the writer\n      writer.addInt16(ParamType.BINARY)\n      // add the buffer to the param writer\n      paramWriter.addInt32(mappedVal.length)\n      paramWriter.add(mappedVal)\n    } else {\n      // add the param type (string) to the writer\n      writer.addInt16(ParamType.STRING)\n      paramWriter.addInt32(Buffer.byteLength(mappedVal))\n      paramWriter.addString(mappedVal)\n    }\n  }\n}\n\nconst bind = (config: BindOpts = {}): Buffer => {\n  // normalize config\n  const portal = config.portal || ''\n  const statement = config.statement || ''\n  const binary = config.binary || false\n  const values = config.values || emptyArray\n  const len = values.length\n\n  writer.addCString(portal).addCString(statement)\n  writer.addInt16(len)\n\n  writeValues(values, config.valueMapper)\n\n  writer.addInt16(len)\n  writer.add(paramWriter.flush())\n\n  // format code\n  writer.addInt16(binary ? ParamType.BINARY : ParamType.STRING)\n  return writer.flush(code.bind)\n}\n\ntype ExecOpts = {\n  portal?: string\n  rows?: number\n}\n\nconst emptyExecute = Buffer.from([code.execute, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00])\n\nconst execute = (config?: ExecOpts): Buffer => {\n  // this is the happy path for most queries\n  if (!config || (!config.portal && !config.rows)) {\n    return emptyExecute\n  }\n\n  const portal = config.portal || ''\n  const rows = config.rows || 0\n\n  const portalLength = Buffer.byteLength(portal)\n  const len = 4 + portalLength + 1 + 4\n  // one extra bit for code\n  const buff = Buffer.allocUnsafe(1 + len)\n  buff[0] = code.execute\n  buff.writeInt32BE(len, 1)\n  buff.write(portal, 5, 'utf-8')\n  buff[portalLength + 5] = 0 // null terminate portal cString\n  buff.writeUInt32BE(rows, buff.length - 4)\n  return buff\n}\n\nconst cancel = (processID: number, secretKey: number): Buffer => {\n  const buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32BE(16, 0)\n  buffer.writeInt16BE(1234, 4)\n  buffer.writeInt16BE(5678, 6)\n  buffer.writeInt32BE(processID, 8)\n  buffer.writeInt32BE(secretKey, 12)\n  return buffer\n}\n\ntype PortalOpts = {\n  type: 'S' | 'P'\n  name?: string\n}\n\nconst cstringMessage = (code: code, string: string): Buffer => {\n  const stringLen = Buffer.byteLength(string)\n  const len = 4 + stringLen + 1\n  // one extra bit for code\n  const buffer = Buffer.allocUnsafe(1 + len)\n  buffer[0] = code\n  buffer.writeInt32BE(len, 1)\n  buffer.write(string, 5, 'utf-8')\n  buffer[len] = 0 // null terminate cString\n  return buffer\n}\n\nconst emptyDescribePortal = writer.addCString('P').flush(code.describe)\nconst emptyDescribeStatement = writer.addCString('S').flush(code.describe)\n\nconst describe = (msg: PortalOpts): Buffer => {\n  return msg.name\n    ? cstringMessage(code.describe, `${msg.type}${msg.name || ''}`)\n    : msg.type === 'P'\n    ? emptyDescribePortal\n    : emptyDescribeStatement\n}\n\nconst close = (msg: PortalOpts): Buffer => {\n  const text = `${msg.type}${msg.name || ''}`\n  return cstringMessage(code.close, text)\n}\n\nconst copyData = (chunk: Buffer): Buffer => {\n  return writer.add(chunk).flush(code.copyFromChunk)\n}\n\nconst copyFail = (message: string): Buffer => {\n  return cstringMessage(code.copyFail, message)\n}\n\nconst codeOnlyBuffer = (code: code): Buffer => Buffer.from([code, 0x00, 0x00, 0x00, 0x04])\n\nconst flushBuffer = codeOnlyBuffer(code.flush)\nconst syncBuffer = codeOnlyBuffer(code.sync)\nconst endBuffer = codeOnlyBuffer(code.end)\nconst copyDoneBuffer = codeOnlyBuffer(code.copyDone)\n\nconst serialize = {\n  startup,\n  password,\n  requestSsl,\n  sendSASLInitialResponseMessage,\n  sendSCRAMClientFinalMessage,\n  query,\n  parse,\n  bind,\n  execute,\n  describe,\n  close,\n  flush: () => flushBuffer,\n  sync: () => syncBuffer,\n  end: () => endBuffer,\n  copyData,\n  copyDone: () => copyDoneBuffer,\n  copyFail,\n  cancel,\n}\n\nexport { serialize }\n", "const emptyBuffer = Buffer.allocUnsafe(0)\n\nexport class BufferReader {\n  private buffer: Buffer = emptyBuffer\n\n  // TODO(bmc): support non-utf8 encoding?\n  private encoding: string = 'utf-8'\n\n  constructor(private offset: number = 0) {}\n\n  public setBuffer(offset: number, buffer: Buffer): void {\n    this.offset = offset\n    this.buffer = buffer\n  }\n\n  public int16(): number {\n    const result = this.buffer.readInt16BE(this.offset)\n    this.offset += 2\n    return result\n  }\n\n  public byte(): number {\n    const result = this.buffer[this.offset]\n    this.offset++\n    return result\n  }\n\n  public int32(): number {\n    const result = this.buffer.readInt32BE(this.offset)\n    this.offset += 4\n    return result\n  }\n\n  public string(length: number): string {\n    const result = this.buffer.toString(this.encoding, this.offset, this.offset + length)\n    this.offset += length\n    return result\n  }\n\n  public cstring(): string {\n    const start = this.offset\n    let end = start\n    while (this.buffer[end++] !== 0) {}\n    this.offset = end\n    return this.buffer.toString(this.encoding, start, end - 1)\n  }\n\n  public bytes(length: number): Buffer {\n    const result = this.buffer.slice(this.offset, this.offset + length)\n    this.offset += length\n    return result\n  }\n}\n", "import { TransformOptions } from 'stream'\nimport {\n  Mode,\n  bindComplete,\n  parseComplete,\n  closeComplete,\n  noData,\n  portalSuspended,\n  copyDone,\n  replicationStart,\n  emptyQuery,\n  ReadyForQueryMessage,\n  CommandCompleteMessage,\n  CopyDataMessage,\n  CopyResponse,\n  NotificationResponseMessage,\n  RowDescriptionMessage,\n  ParameterDescriptionMessage,\n  Field,\n  DataRowMessage,\n  ParameterStatusMessage,\n  BackendKeyDataMessage,\n  DatabaseError,\n  BackendMessage,\n  MessageName,\n  AuthenticationMD5Password,\n  NoticeMessage,\n} from './messages'\nimport { BufferReader } from './buffer-reader'\nimport assert from 'assert'\n\n// every message is prefixed with a single bye\nconst CODE_LENGTH = 1\n// every message has an int32 length which includes itself but does\n// NOT include the code in the length\nconst LEN_LENGTH = 4\n\nconst HEADER_LENGTH = CODE_LENGTH + LEN_LENGTH\n\nexport type Packet = {\n  code: number\n  packet: Buffer\n}\n\nconst emptyBuffer = Buffer.allocUnsafe(0)\n\ntype StreamOptions = TransformOptions & {\n  mode: Mode\n}\n\nconst enum MessageCodes {\n  DataRow = 0x44, // D\n  ParseComplete = 0x31, // 1\n  BindComplete = 0x32, // 2\n  CloseComplete = 0x33, // 3\n  CommandComplete = 0x43, // C\n  ReadyForQuery = 0x5a, // Z\n  NoData = 0x6e, // n\n  NotificationResponse = 0x41, // A\n  AuthenticationResponse = 0x52, // R\n  ParameterStatus = 0x53, // S\n  BackendKeyData = 0x4b, // K\n  ErrorMessage = 0x45, // E\n  NoticeMessage = 0x4e, // N\n  RowDescriptionMessage = 0x54, // T\n  ParameterDescriptionMessage = 0x74, // t\n  PortalSuspended = 0x73, // s\n  ReplicationStart = 0x57, // W\n  EmptyQuery = 0x49, // I\n  CopyIn = 0x47, // G\n  CopyOut = 0x48, // H\n  CopyDone = 0x63, // c\n  CopyData = 0x64, // d\n}\n\nexport type MessageCallback = (msg: BackendMessage) => void\n\nexport class Parser {\n  private buffer: Buffer = emptyBuffer\n  private bufferLength: number = 0\n  private bufferOffset: number = 0\n  private reader = new BufferReader()\n  private mode: Mode\n\n  constructor(opts?: StreamOptions) {\n    if (opts?.mode === 'binary') {\n      throw new Error('Binary mode not supported yet')\n    }\n    this.mode = opts?.mode || 'text'\n  }\n\n  public parse(buffer: Buffer, callback: MessageCallback) {\n    this.mergeBuffer(buffer)\n    const bufferFullLength = this.bufferOffset + this.bufferLength\n    let offset = this.bufferOffset\n    while (offset + HEADER_LENGTH <= bufferFullLength) {\n      // code is 1 byte long - it identifies the message type\n      const code = this.buffer[offset]\n      // length is 1 Uint32BE - it is the length of the message EXCLUDING the code\n      const length = this.buffer.readUInt32BE(offset + CODE_LENGTH)\n      const fullMessageLength = CODE_LENGTH + length\n      if (fullMessageLength + offset <= bufferFullLength) {\n        const message = this.handlePacket(offset + HEADER_LENGTH, code, length, this.buffer)\n        callback(message)\n        offset += fullMessageLength\n      } else {\n        break\n      }\n    }\n    if (offset === bufferFullLength) {\n      // No more use for the buffer\n      this.buffer = emptyBuffer\n      this.bufferLength = 0\n      this.bufferOffset = 0\n    } else {\n      // Adjust the cursors of remainingBuffer\n      this.bufferLength = bufferFullLength - offset\n      this.bufferOffset = offset\n    }\n  }\n\n  private mergeBuffer(buffer: Buffer): void {\n    if (this.bufferLength > 0) {\n      const newLength = this.bufferLength + buffer.byteLength\n      const newFullLength = newLength + this.bufferOffset\n      if (newFullLength > this.buffer.byteLength) {\n        // We can't concat the new buffer with the remaining one\n        let newBuffer: Buffer\n        if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\n          // We can move the relevant part to the beginning of the buffer instead of allocating a new buffer\n          newBuffer = this.buffer\n        } else {\n          // Allocate a new larger buffer\n          let newBufferLength = this.buffer.byteLength * 2\n          while (newLength >= newBufferLength) {\n            newBufferLength *= 2\n          }\n          newBuffer = Buffer.allocUnsafe(newBufferLength)\n        }\n        // Move the remaining buffer to the new one\n        this.buffer.copy(newBuffer, 0, this.bufferOffset, this.bufferOffset + this.bufferLength)\n        this.buffer = newBuffer\n        this.bufferOffset = 0\n      }\n      // Concat the new buffer with the remaining one\n      buffer.copy(this.buffer, this.bufferOffset + this.bufferLength)\n      this.bufferLength = newLength\n    } else {\n      this.buffer = buffer\n      this.bufferOffset = 0\n      this.bufferLength = buffer.byteLength\n    }\n  }\n\n  private handlePacket(offset: number, code: number, length: number, bytes: Buffer): BackendMessage {\n    switch (code) {\n      case MessageCodes.BindComplete:\n        return bindComplete\n      case MessageCodes.ParseComplete:\n        return parseComplete\n      case MessageCodes.CloseComplete:\n        return closeComplete\n      case MessageCodes.NoData:\n        return noData\n      case MessageCodes.PortalSuspended:\n        return portalSuspended\n      case MessageCodes.CopyDone:\n        return copyDone\n      case MessageCodes.ReplicationStart:\n        return replicationStart\n      case MessageCodes.EmptyQuery:\n        return emptyQuery\n      case MessageCodes.DataRow:\n        return this.parseDataRowMessage(offset, length, bytes)\n      case MessageCodes.CommandComplete:\n        return this.parseCommandCompleteMessage(offset, length, bytes)\n      case MessageCodes.ReadyForQuery:\n        return this.parseReadyForQueryMessage(offset, length, bytes)\n      case MessageCodes.NotificationResponse:\n        return this.parseNotificationMessage(offset, length, bytes)\n      case MessageCodes.AuthenticationResponse:\n        return this.parseAuthenticationResponse(offset, length, bytes)\n      case MessageCodes.ParameterStatus:\n        return this.parseParameterStatusMessage(offset, length, bytes)\n      case MessageCodes.BackendKeyData:\n        return this.parseBackendKeyData(offset, length, bytes)\n      case MessageCodes.ErrorMessage:\n        return this.parseErrorMessage(offset, length, bytes, 'error')\n      case MessageCodes.NoticeMessage:\n        return this.parseErrorMessage(offset, length, bytes, 'notice')\n      case MessageCodes.RowDescriptionMessage:\n        return this.parseRowDescriptionMessage(offset, length, bytes)\n      case MessageCodes.ParameterDescriptionMessage:\n        return this.parseParameterDescriptionMessage(offset, length, bytes)\n      case MessageCodes.CopyIn:\n        return this.parseCopyInMessage(offset, length, bytes)\n      case MessageCodes.CopyOut:\n        return this.parseCopyOutMessage(offset, length, bytes)\n      case MessageCodes.CopyData:\n        return this.parseCopyData(offset, length, bytes)\n      default:\n        assert.fail(`unknown message code: ${code.toString(16)}`)\n    }\n  }\n\n  private parseReadyForQueryMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const status = this.reader.string(1)\n    return new ReadyForQueryMessage(length, status)\n  }\n\n  private parseCommandCompleteMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const text = this.reader.cstring()\n    return new CommandCompleteMessage(length, text)\n  }\n\n  private parseCopyData(offset: number, length: number, bytes: Buffer) {\n    const chunk = bytes.slice(offset, offset + (length - 4))\n    return new CopyDataMessage(length, chunk)\n  }\n\n  private parseCopyInMessage(offset: number, length: number, bytes: Buffer) {\n    return this.parseCopyMessage(offset, length, bytes, 'copyInResponse')\n  }\n\n  private parseCopyOutMessage(offset: number, length: number, bytes: Buffer) {\n    return this.parseCopyMessage(offset, length, bytes, 'copyOutResponse')\n  }\n\n  private parseCopyMessage(offset: number, length: number, bytes: Buffer, messageName: MessageName) {\n    this.reader.setBuffer(offset, bytes)\n    const isBinary = this.reader.byte() !== 0\n    const columnCount = this.reader.int16()\n    const message = new CopyResponse(length, messageName, isBinary, columnCount)\n    for (let i = 0; i < columnCount; i++) {\n      message.columnTypes[i] = this.reader.int16()\n    }\n    return message\n  }\n\n  private parseNotificationMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const processId = this.reader.int32()\n    const channel = this.reader.cstring()\n    const payload = this.reader.cstring()\n    return new NotificationResponseMessage(length, processId, channel, payload)\n  }\n\n  private parseRowDescriptionMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const fieldCount = this.reader.int16()\n    const message = new RowDescriptionMessage(length, fieldCount)\n    for (let i = 0; i < fieldCount; i++) {\n      message.fields[i] = this.parseField()\n    }\n    return message\n  }\n\n  private parseField(): Field {\n    const name = this.reader.cstring()\n    const tableID = this.reader.int32()\n    const columnID = this.reader.int16()\n    const dataTypeID = this.reader.int32()\n    const dataTypeSize = this.reader.int16()\n    const dataTypeModifier = this.reader.int32()\n    const mode = this.reader.int16() === 0 ? 'text' : 'binary'\n    return new Field(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, mode)\n  }\n\n  private parseParameterDescriptionMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const parameterCount = this.reader.int16()\n    const message = new ParameterDescriptionMessage(length, parameterCount)\n    for (let i = 0; i < parameterCount; i++) {\n      message.dataTypeIDs[i] = this.reader.int32()\n    }\n    return message\n  }\n\n  private parseDataRowMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const fieldCount = this.reader.int16()\n    const fields: any[] = new Array(fieldCount)\n    for (let i = 0; i < fieldCount; i++) {\n      const len = this.reader.int32()\n      // a -1 for length means the value of the field is null\n      fields[i] = len === -1 ? null : this.reader.string(len)\n    }\n    return new DataRowMessage(length, fields)\n  }\n\n  private parseParameterStatusMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const name = this.reader.cstring()\n    const value = this.reader.cstring()\n    return new ParameterStatusMessage(length, name, value)\n  }\n\n  private parseBackendKeyData(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const processID = this.reader.int32()\n    const secretKey = this.reader.int32()\n    return new BackendKeyDataMessage(length, processID, secretKey)\n  }\n\n  public parseAuthenticationResponse(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const code = this.reader.int32()\n    // TODO(bmc): maybe better types here\n    const message: BackendMessage & any = {\n      name: 'authenticationOk',\n      length,\n    }\n\n    switch (code) {\n      case 0: // AuthenticationOk\n        break\n      case 3: // AuthenticationCleartextPassword\n        if (message.length === 8) {\n          message.name = 'authenticationCleartextPassword'\n        }\n        break\n      case 5: // AuthenticationMD5Password\n        if (message.length === 12) {\n          message.name = 'authenticationMD5Password'\n          const salt = this.reader.bytes(4)\n          return new AuthenticationMD5Password(length, salt)\n        }\n        break\n      case 10: // AuthenticationSASL\n        message.name = 'authenticationSASL'\n        message.mechanisms = []\n        let mechanism: string\n        do {\n          mechanism = this.reader.cstring()\n\n          if (mechanism) {\n            message.mechanisms.push(mechanism)\n          }\n        } while (mechanism)\n        break\n      case 11: // AuthenticationSASLContinue\n        message.name = 'authenticationSASLContinue'\n        message.data = this.reader.string(length - 8)\n        break\n      case 12: // AuthenticationSASLFinal\n        message.name = 'authenticationSASLFinal'\n        message.data = this.reader.string(length - 8)\n        break\n      default:\n        throw new Error('Unknown authenticationOk message type ' + code)\n    }\n    return message\n  }\n\n  private parseErrorMessage(offset: number, length: number, bytes: Buffer, name: MessageName) {\n    this.reader.setBuffer(offset, bytes)\n    const fields: Record<string, string> = {}\n    let fieldType = this.reader.string(1)\n    while (fieldType !== '\\0') {\n      fields[fieldType] = this.reader.cstring()\n      fieldType = this.reader.string(1)\n    }\n\n    const messageValue = fields.M\n\n    const message =\n      name === 'notice' ? new NoticeMessage(length, messageValue) : new DatabaseError(messageValue, length, name)\n\n    message.severity = fields.S\n    message.code = fields.C\n    message.detail = fields.D\n    message.hint = fields.H\n    message.position = fields.P\n    message.internalPosition = fields.p\n    message.internalQuery = fields.q\n    message.where = fields.W\n    message.schema = fields.s\n    message.table = fields.t\n    message.column = fields.c\n    message.dataType = fields.d\n    message.constraint = fields.n\n    message.file = fields.F\n    message.line = fields.L\n    message.routine = fields.R\n    return message\n  }\n}\n", "import { BackendMessage, DatabaseError } from './messages'\nimport { serialize } from './serializer'\nimport { Parser, MessageCallback } from './parser'\n\nexport function parse(stream: NodeJS.ReadableStream, callback: MessageCallback): Promise<void> {\n  const parser = new Parser()\n  stream.on('data', (buffer: Buffer) => parser.parse(buffer, callback))\n  return new Promise((resolve) => stream.on('end', () => resolve()))\n}\n\nexport { serialize, DatabaseError }\n", "// This is an empty module that is served up when outside of a workerd environment\n// See the `exports` field in package.json\nexport default {}\n", "/**\n * Get a socket stream compatible with the current runtime environment.\n * @returns {Duplex}\n */\nmodule.exports.getStream = function getStream(ssl) {\n  const net = require('net')\n  if (typeof net.Socket === 'function') {\n    return new net.Socket()\n  } else {\n    const { CloudflareSocket } = require('pg-cloudflare')\n    return new CloudflareSocket(ssl)\n  }\n}\n\n/**\n * Get a TLS secured socket, compatible with the current environment,\n * using the socket and other settings given in `options`.\n * @returns {Duplex}\n */\nmodule.exports.getSecureStream = function getSecureStream(options) {\n  var tls = require('tls')\n  if (tls.connect) {\n    return tls.connect(options)\n  } else {\n    options.socket.startTls(options)\n    return options.socket\n  }\n}\n", "'use strict'\n\nvar net = require('net')\nvar EventEmitter = require('events').EventEmitter\n\nconst { parse, serialize } = require('pg-protocol')\nconst { getStream, getSecureStream } = require('./stream')\n\nconst flushBuffer = serialize.flush()\nconst syncBuffer = serialize.sync()\nconst endBuffer = serialize.end()\n\n// TODO(bmc) support binary mode at some point\nclass Connection extends EventEmitter {\n  constructor(config) {\n    super()\n    config = config || {}\n\n    this.stream = config.stream || getStream(config.ssl)\n    if (typeof this.stream === 'function') {\n      this.stream = this.stream(config)\n    }\n\n    this._keepAlive = config.keepAlive\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\n    this.lastBuffer = false\n    this.parsedStatements = {}\n    this.ssl = config.ssl || false\n    this._ending = false\n    this._emitMessage = false\n    var self = this\n    this.on('newListener', function (eventName) {\n      if (eventName === 'message') {\n        self._emitMessage = true\n      }\n    })\n  }\n\n  connect(port, host) {\n    var self = this\n\n    this._connecting = true\n    this.stream.setNoDelay(true)\n    this.stream.connect(port, host)\n\n    this.stream.once('connect', function () {\n      if (self._keepAlive) {\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\n      }\n      self.emit('connect')\n    })\n\n    const reportStreamError = function (error) {\n      // errors about disconnections should be ignored during disconnect\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\n        return\n      }\n      self.emit('error', error)\n    }\n    this.stream.on('error', reportStreamError)\n\n    this.stream.on('close', function () {\n      self.emit('end')\n    })\n\n    if (!this.ssl) {\n      return this.attachListeners(this.stream)\n    }\n\n    this.stream.once('data', function (buffer) {\n      var responseCode = buffer.toString('utf8')\n      switch (responseCode) {\n        case 'S': // Server supports SSL connections, continue with a secure connection\n          break\n        case 'N': // Server does not support SSL connections\n          self.stream.end()\n          return self.emit('error', new Error('The server does not support SSL connections'))\n        default:\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\n          self.stream.end()\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\n      }\n      const options = {\n        socket: self.stream,\n      }\n\n      if (self.ssl !== true) {\n        Object.assign(options, self.ssl)\n\n        if ('key' in self.ssl) {\n          options.key = self.ssl.key\n        }\n      }\n\n      var net = require('net')\n      if (net.isIP && net.isIP(host) === 0) {\n        options.servername = host\n      }\n      try {\n        self.stream = getSecureStream(options)\n      } catch (err) {\n        return self.emit('error', err)\n      }\n      self.attachListeners(self.stream)\n      self.stream.on('error', reportStreamError)\n\n      self.emit('sslconnect')\n    })\n  }\n\n  attachListeners(stream) {\n    parse(stream, (msg) => {\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\n      if (this._emitMessage) {\n        this.emit('message', msg)\n      }\n      this.emit(eventName, msg)\n    })\n  }\n\n  requestSsl() {\n    this.stream.write(serialize.requestSsl())\n  }\n\n  startup(config) {\n    this.stream.write(serialize.startup(config))\n  }\n\n  cancel(processID, secretKey) {\n    this._send(serialize.cancel(processID, secretKey))\n  }\n\n  password(password) {\n    this._send(serialize.password(password))\n  }\n\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\n  }\n\n  sendSCRAMClientFinalMessage(additionalData) {\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\n  }\n\n  _send(buffer) {\n    if (!this.stream.writable) {\n      return false\n    }\n    return this.stream.write(buffer)\n  }\n\n  query(text) {\n    this._send(serialize.query(text))\n  }\n\n  // send parse message\n  parse(query) {\n    this._send(serialize.parse(query))\n  }\n\n  // send bind message\n  bind(config) {\n    this._send(serialize.bind(config))\n  }\n\n  // send execute message\n  execute(config) {\n    this._send(serialize.execute(config))\n  }\n\n  flush() {\n    if (this.stream.writable) {\n      this.stream.write(flushBuffer)\n    }\n  }\n\n  sync() {\n    this._ending = true\n    this._send(syncBuffer)\n  }\n\n  ref() {\n    this.stream.ref()\n  }\n\n  unref() {\n    this.stream.unref()\n  }\n\n  end() {\n    // 0x58 = 'X'\n    this._ending = true\n    if (!this._connecting || !this.stream.writable) {\n      this.stream.end()\n      return\n    }\n    return this.stream.write(endBuffer, () => {\n      this.stream.end()\n    })\n  }\n\n  close(msg) {\n    this._send(serialize.close(msg))\n  }\n\n  describe(msg) {\n    this._send(serialize.describe(msg))\n  }\n\n  sendCopyFromChunk(chunk) {\n    this._send(serialize.copyData(chunk))\n  }\n\n  endCopyFrom() {\n    this._send(serialize.copyDone())\n  }\n\n  sendCopyFail(msg) {\n    this._send(serialize.copyFail(msg))\n  }\n}\n\nmodule.exports = Connection\n", "/*\nCopyright (c) 2014-2021, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  let list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    const buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (let i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) {\n    cb(new Error('maximum buffer reached'))\n    return\n  }\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp) && !matcher[Symbol.split]) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.autoDestroy = true\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow || false\n  stream.overflow = false\n  stream._destroy = function (err, cb) {\n    // Weird Node v12 bug that we need to work around\n    this._writableState.errorEmitted = false\n    cb(err)\n  }\n\n  return stream\n}\n\nmodule.exports = split\n", "'use strict';\n\nvar path = require('path')\n  , Stream = require('stream').Stream\n  , split = require('split2')\n  , util = require('util')\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, 'isWin', {\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n});\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(rawEnv){\n    var env = rawEnv || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA || './' , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME || './', '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        stream.destroy();\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        stream.destroy();\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n", "'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n", "'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar utils = require('./utils')\nvar sasl = require('./crypto/sasl')\nvar TypeOverrides = require('./type-overrides')\n\nvar ConnectionParameters = require('./connection-parameters')\nvar Query = require('./query')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nconst crypto = require('./crypto/utils')\n\nclass Client extends EventEmitter {\n  constructor(config) {\n    super()\n\n    this.connectionParameters = new ConnectionParameters(config)\n    this.user = this.connectionParameters.user\n    this.database = this.connectionParameters.database\n    this.port = this.connectionParameters.port\n    this.host = this.connectionParameters.host\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: this.connectionParameters.password,\n    })\n\n    this.replication = this.connectionParameters.replication\n\n    var c = config || {}\n\n    this._Promise = c.Promise || global.Promise\n    this._types = new TypeOverrides(c.types)\n    this._ending = false\n    this._ended = false\n    this._connecting = false\n    this._connected = false\n    this._connectionError = false\n    this._queryable = true\n\n    this.connection =\n      c.connection ||\n      new Connection({\n        stream: c.stream,\n        ssl: this.connectionParameters.ssl,\n        keepAlive: c.keepAlive || false,\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\n        encoding: this.connectionParameters.client_encoding || 'utf8',\n      })\n    this.queryQueue = []\n    this.binary = c.binary || defaults.binary\n    this.processID = null\n    this.secretKey = null\n    this.ssl = this.connectionParameters.ssl || false\n    // As with Password, make SSL->Key (the private key) non-enumerable.\n    // It won't show up in stack traces\n    // or if the client is console.logged\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\n  }\n\n  _errorAllQueries(err) {\n    const enqueueError = (query) => {\n      process.nextTick(() => {\n        query.handleError(err, this.connection)\n      })\n    }\n\n    if (this.activeQuery) {\n      enqueueError(this.activeQuery)\n      this.activeQuery = null\n    }\n\n    this.queryQueue.forEach(enqueueError)\n    this.queryQueue.length = 0\n  }\n\n  _connect(callback) {\n    var self = this\n    var con = this.connection\n    this._connectionCallback = callback\n\n    if (this._connecting || this._connected) {\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\n      process.nextTick(() => {\n        callback(err)\n      })\n      return\n    }\n    this._connecting = true\n\n    this.connectionTimeoutHandle\n    if (this._connectionTimeoutMillis > 0) {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        con._ending = true\n        con.stream.destroy(new Error('timeout expired'))\n      }, this._connectionTimeoutMillis)\n    }\n\n    if (this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\n    } else {\n      con.connect(this.port, this.host)\n    }\n\n    // once connection is established send startup message\n    con.on('connect', function () {\n      if (self.ssl) {\n        con.requestSsl()\n      } else {\n        con.startup(self.getStartupConf())\n      }\n    })\n\n    con.on('sslconnect', function () {\n      con.startup(self.getStartupConf())\n    })\n\n    this._attachListeners(con)\n\n    con.once('end', () => {\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\n\n      clearTimeout(this.connectionTimeoutHandle)\n      this._errorAllQueries(error)\n      this._ended = true\n\n      if (!this._ending) {\n        // if the connection is ended without us calling .end()\n        // on this client then we have an unexpected disconnection\n        // treat this as an error unless we've already emitted an error\n        // during connection.\n        if (this._connecting && !this._connectionError) {\n          if (this._connectionCallback) {\n            this._connectionCallback(error)\n          } else {\n            this._handleErrorEvent(error)\n          }\n        } else if (!this._connectionError) {\n          this._handleErrorEvent(error)\n        }\n      }\n\n      process.nextTick(() => {\n        this.emit('end')\n      })\n    })\n  }\n\n  connect(callback) {\n    if (callback) {\n      this._connect(callback)\n      return\n    }\n\n    return new this._Promise((resolve, reject) => {\n      this._connect((error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  _attachListeners(con) {\n    // password request handling\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\n    // password request handling\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\n    // password request handling (SASL)\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\n    con.on('error', this._handleErrorEvent.bind(this))\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\n    con.on('notice', this._handleNotice.bind(this))\n    con.on('rowDescription', this._handleRowDescription.bind(this))\n    con.on('dataRow', this._handleDataRow.bind(this))\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\n    con.on('parseComplete', this._handleParseComplete.bind(this))\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\n    con.on('copyData', this._handleCopyData.bind(this))\n    con.on('notification', this._handleNotification.bind(this))\n  }\n\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\n  // it can be supplied by the user if required - this is a breaking change!\n  _checkPgPass(cb) {\n    const con = this.connection\n    if (typeof this.password === 'function') {\n      this._Promise\n        .resolve()\n        .then(() => this.password())\n        .then((pass) => {\n          if (pass !== undefined) {\n            if (typeof pass !== 'string') {\n              con.emit('error', new TypeError('Password must be a string'))\n              return\n            }\n            this.connectionParameters.password = this.password = pass\n          } else {\n            this.connectionParameters.password = this.password = null\n          }\n          cb()\n        })\n        .catch((err) => {\n          con.emit('error', err)\n        })\n    } else if (this.password !== null) {\n      cb()\n    } else {\n      try {\n        const pgPass = require('pgpass')\n        pgPass(this.connectionParameters, (pass) => {\n          if (undefined !== pass) {\n            this.connectionParameters.password = this.password = pass\n          }\n          cb()\n        })\n      } catch (e) {\n        this.emit('error', e)\n      }\n    }\n  }\n\n  _handleAuthCleartextPassword(msg) {\n    this._checkPgPass(() => {\n      this.connection.password(this.password)\n    })\n  }\n\n  _handleAuthMD5Password(msg) {\n    this._checkPgPass(async () => {\n      try {\n        const hashedPassword = await crypto.postgresMd5PasswordHash(this.user, this.password, msg.salt)\n        this.connection.password(hashedPassword)\n      } catch (e) {\n        this.emit('error', e)\n      }\n    })\n  }\n\n  _handleAuthSASL(msg) {\n    this._checkPgPass(() => {\n      try {\n        this.saslSession = sasl.startSession(msg.mechanisms)\n        this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\n      } catch (err) {\n        this.connection.emit('error', err)\n      }\n    })\n  }\n\n  async _handleAuthSASLContinue(msg) {\n    try {\n      await sasl.continueSession(this.saslSession, this.password, msg.data)\n      this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\n    } catch (err) {\n      this.connection.emit('error', err)\n    }\n  }\n\n  _handleAuthSASLFinal(msg) {\n    try {\n      sasl.finalizeSession(this.saslSession, msg.data)\n      this.saslSession = null\n    } catch (err) {\n      this.connection.emit('error', err)\n    }\n  }\n\n  _handleBackendKeyData(msg) {\n    this.processID = msg.processID\n    this.secretKey = msg.secretKey\n  }\n\n  _handleReadyForQuery(msg) {\n    if (this._connecting) {\n      this._connecting = false\n      this._connected = true\n      clearTimeout(this.connectionTimeoutHandle)\n\n      // process possible callback argument to Client#connect\n      if (this._connectionCallback) {\n        this._connectionCallback(null, this)\n        // remove callback for proper error handling\n        // after the connect event\n        this._connectionCallback = null\n      }\n      this.emit('connect')\n    }\n    const { activeQuery } = this\n    this.activeQuery = null\n    this.readyForQuery = true\n    if (activeQuery) {\n      activeQuery.handleReadyForQuery(this.connection)\n    }\n    this._pulseQueryQueue()\n  }\n\n  // if we receieve an error event or error message\n  // during the connection process we handle it here\n  _handleErrorWhileConnecting(err) {\n    if (this._connectionError) {\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\n      return\n    }\n    this._connectionError = true\n    clearTimeout(this.connectionTimeoutHandle)\n    if (this._connectionCallback) {\n      return this._connectionCallback(err)\n    }\n    this.emit('error', err)\n  }\n\n  // if we're connected and we receive an error event from the connection\n  // this means the socket is dead - do a hard abort of all queries and emit\n  // the socket error on the client as well\n  _handleErrorEvent(err) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(err)\n    }\n    this._queryable = false\n    this._errorAllQueries(err)\n    this.emit('error', err)\n  }\n\n  // handle error messages from the postgres backend\n  _handleErrorMessage(msg) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(msg)\n    }\n    const activeQuery = this.activeQuery\n\n    if (!activeQuery) {\n      this._handleErrorEvent(msg)\n      return\n    }\n\n    this.activeQuery = null\n    activeQuery.handleError(msg, this.connection)\n  }\n\n  _handleRowDescription(msg) {\n    // delegate rowDescription to active query\n    this.activeQuery.handleRowDescription(msg)\n  }\n\n  _handleDataRow(msg) {\n    // delegate dataRow to active query\n    this.activeQuery.handleDataRow(msg)\n  }\n\n  _handlePortalSuspended(msg) {\n    // delegate portalSuspended to active query\n    this.activeQuery.handlePortalSuspended(this.connection)\n  }\n\n  _handleEmptyQuery(msg) {\n    // delegate emptyQuery to active query\n    this.activeQuery.handleEmptyQuery(this.connection)\n  }\n\n  _handleCommandComplete(msg) {\n    // delegate commandComplete to active query\n    this.activeQuery.handleCommandComplete(msg, this.connection)\n  }\n\n  _handleParseComplete(msg) {\n    // if a prepared statement has a name and properly parses\n    // we track that its already been executed so we don't parse\n    // it again on the same client\n    if (this.activeQuery.name) {\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\n    }\n  }\n\n  _handleCopyInResponse(msg) {\n    this.activeQuery.handleCopyInResponse(this.connection)\n  }\n\n  _handleCopyData(msg) {\n    this.activeQuery.handleCopyData(msg, this.connection)\n  }\n\n  _handleNotification(msg) {\n    this.emit('notification', msg)\n  }\n\n  _handleNotice(msg) {\n    this.emit('notice', msg)\n  }\n\n  getStartupConf() {\n    var params = this.connectionParameters\n\n    var data = {\n      user: params.user,\n      database: params.database,\n    }\n\n    var appName = params.application_name || params.fallback_application_name\n    if (appName) {\n      data.application_name = appName\n    }\n    if (params.replication) {\n      data.replication = '' + params.replication\n    }\n    if (params.statement_timeout) {\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\n    }\n    if (params.lock_timeout) {\n      data.lock_timeout = String(parseInt(params.lock_timeout, 10))\n    }\n    if (params.idle_in_transaction_session_timeout) {\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\n    }\n    if (params.options) {\n      data.options = params.options\n    }\n\n    return data\n  }\n\n  cancel(client, query) {\n    if (client.activeQuery === query) {\n      var con = this.connection\n\n      if (this.host && this.host.indexOf('/') === 0) {\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\n      } else {\n        con.connect(this.port, this.host)\n      }\n\n      // once connection is established send cancel message\n      con.on('connect', function () {\n        con.cancel(client.processID, client.secretKey)\n      })\n    } else if (client.queryQueue.indexOf(query) !== -1) {\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\n    }\n  }\n\n  setTypeParser(oid, format, parseFn) {\n    return this._types.setTypeParser(oid, format, parseFn)\n  }\n\n  getTypeParser(oid, format) {\n    return this._types.getTypeParser(oid, format)\n  }\n\n  // escapeIdentifier and escapeLiteral moved to utility functions & exported\n  // on PG\n  // re-exported here for backwards compatibility\n  escapeIdentifier(str) {\n    return utils.escapeIdentifier(str)\n  }\n\n  escapeLiteral(str) {\n    return utils.escapeLiteral(str)\n  }\n\n  _pulseQueryQueue() {\n    if (this.readyForQuery === true) {\n      this.activeQuery = this.queryQueue.shift()\n      if (this.activeQuery) {\n        this.readyForQuery = false\n        this.hasExecuted = true\n\n        const queryError = this.activeQuery.submit(this.connection)\n        if (queryError) {\n          process.nextTick(() => {\n            this.activeQuery.handleError(queryError, this.connection)\n            this.readyForQuery = true\n            this._pulseQueryQueue()\n          })\n        }\n      } else if (this.hasExecuted) {\n        this.activeQuery = null\n        this.emit('drain')\n      }\n    }\n  }\n\n  query(config, values, callback) {\n    // can take in strings, config object or query object\n    var query\n    var result\n    var readTimeout\n    var readTimeoutTimer\n    var queryCallback\n\n    if (config === null || config === undefined) {\n      throw new TypeError('Client was passed a null or undefined query')\n    } else if (typeof config.submit === 'function') {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      result = query = config\n      if (typeof values === 'function') {\n        query.callback = query.callback || values\n      }\n    } else {\n      readTimeout = this.connectionParameters.query_timeout\n      query = new Query(config, values, callback)\n      if (!query.callback) {\n        result = new this._Promise((resolve, reject) => {\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\n        }).catch(err => {\n          // replace the stack trace that leads to `TCP.onStreamRead` with one that leads back to the\n          // application that created the query\n          Error.captureStackTrace(err);\n          throw err;\n        })\n      }\n    }\n\n    if (readTimeout) {\n      queryCallback = query.callback\n\n      readTimeoutTimer = setTimeout(() => {\n        var error = new Error('Query read timeout')\n\n        process.nextTick(() => {\n          query.handleError(error, this.connection)\n        })\n\n        queryCallback(error)\n\n        // we already returned an error,\n        // just do nothing if query completes\n        query.callback = () => {}\n\n        // Remove from queue\n        var index = this.queryQueue.indexOf(query)\n        if (index > -1) {\n          this.queryQueue.splice(index, 1)\n        }\n\n        this._pulseQueryQueue()\n      }, readTimeout)\n\n      query.callback = (err, res) => {\n        clearTimeout(readTimeoutTimer)\n        queryCallback(err, res)\n      }\n    }\n\n    if (this.binary && !query.binary) {\n      query.binary = true\n    }\n\n    if (query._result && !query._result._types) {\n      query._result._types = this._types\n    }\n\n    if (!this._queryable) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    if (this._ending) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    this.queryQueue.push(query)\n    this._pulseQueryQueue()\n    return result\n  }\n\n  ref() {\n    this.connection.ref()\n  }\n\n  unref() {\n    this.connection.unref()\n  }\n\n  end(cb) {\n    this._ending = true\n\n    // if we have never connected, then end is a noop, callback immediately\n    if (!this.connection._connecting || this._ended) {\n      if (cb) {\n        cb()\n      } else {\n        return this._Promise.resolve()\n      }\n    }\n\n    if (this.activeQuery || !this._queryable) {\n      // if we have an active query we need to force a disconnect\n      // on the socket - otherwise a hung query could block end forever\n      this.connection.stream.destroy()\n    } else {\n      this.connection.end()\n    }\n\n    if (cb) {\n      this.connection.once('end', cb)\n    } else {\n      return new this._Promise((resolve) => {\n        this.connection.once('end', resolve)\n      })\n    }\n  }\n}\n\n// expose a Query constructor\nClient.Query = Query\n\nmodule.exports = Client\n", "'use strict'\nconst EventEmitter = require('events').EventEmitter\n\nconst NOOP = function () {}\n\nconst removeWhere = (list, predicate) => {\n  const i = list.findIndex(predicate)\n\n  return i === -1 ? undefined : list.splice(i, 1)[0]\n}\n\nclass IdleItem {\n  constructor(client, idleListener, timeoutId) {\n    this.client = client\n    this.idleListener = idleListener\n    this.timeoutId = timeoutId\n  }\n}\n\nclass PendingItem {\n  constructor(callback) {\n    this.callback = callback\n  }\n}\n\nfunction throwOnDoubleRelease() {\n  throw new Error('Release called on client which has already been released to the pool.')\n}\n\nfunction promisify(Promise, callback) {\n  if (callback) {\n    return { callback: callback, result: undefined }\n  }\n  let rej\n  let res\n  const cb = function (err, client) {\n    err ? rej(err) : res(client)\n  }\n  const result = new Promise(function (resolve, reject) {\n    res = resolve\n    rej = reject\n  }).catch(err => {\n    // replace the stack trace that leads to `TCP.onStreamRead` with one that leads back to the\n    // application that created the query\n    Error.captureStackTrace(err);\n    throw err;\n  })\n  return { callback: cb, result: result }\n}\n\nfunction makeIdleListener(pool, client) {\n  return function idleListener(err) {\n    err.client = client\n\n    client.removeListener('error', idleListener)\n    client.on('error', () => {\n      pool.log('additional client error after disconnection due to error', err)\n    })\n    pool._remove(client)\n    // TODO - document that once the pool emits an error\n    // the client has already been closed & purged and is unusable\n    pool.emit('error', err, client)\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options, Client) {\n    super()\n    this.options = Object.assign({}, options)\n\n    if (options != null && 'password' in options) {\n      // \"hiding\" the password so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options, 'password', {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: options.password,\n      })\n    }\n    if (options != null && options.ssl && options.ssl.key) {\n      // \"hiding\" the ssl->key so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.options.max = this.options.max || this.options.poolSize || 10\n    this.options.maxUses = this.options.maxUses || Infinity\n    this.options.allowExitOnIdle = this.options.allowExitOnIdle || false\n    this.options.maxLifetimeSeconds = this.options.maxLifetimeSeconds || 0\n    this.log = this.options.log || function () {}\n    this.Client = this.options.Client || Client || require('pg').Client\n    this.Promise = this.options.Promise || global.Promise\n\n    if (typeof this.options.idleTimeoutMillis === 'undefined') {\n      this.options.idleTimeoutMillis = 10000\n    }\n\n    this._clients = []\n    this._idle = []\n    this._expired = new WeakSet()\n    this._pendingQueue = []\n    this._endCallback = undefined\n    this.ending = false\n    this.ended = false\n  }\n\n  _isFull() {\n    return this._clients.length >= this.options.max\n  }\n\n  _pulseQueue() {\n    this.log('pulse queue')\n    if (this.ended) {\n      this.log('pulse queue ended')\n      return\n    }\n    if (this.ending) {\n      this.log('pulse queue on ending')\n      if (this._idle.length) {\n        this._idle.slice().map((item) => {\n          this._remove(item.client)\n        })\n      }\n      if (!this._clients.length) {\n        this.ended = true\n        this._endCallback()\n      }\n      return\n    }\n\n    // if we don't have any waiting, do nothing\n    if (!this._pendingQueue.length) {\n      this.log('no queued requests')\n      return\n    }\n    // if we don't have any idle clients and we have no more room do nothing\n    if (!this._idle.length && this._isFull()) {\n      return\n    }\n    const pendingItem = this._pendingQueue.shift()\n    if (this._idle.length) {\n      const idleItem = this._idle.pop()\n      clearTimeout(idleItem.timeoutId)\n      const client = idleItem.client\n      client.ref && client.ref()\n      const idleListener = idleItem.idleListener\n\n      return this._acquireClient(client, pendingItem, idleListener, false)\n    }\n    if (!this._isFull()) {\n      return this.newClient(pendingItem)\n    }\n    throw new Error('unexpected condition')\n  }\n\n  _remove(client) {\n    const removed = removeWhere(this._idle, (item) => item.client === client)\n\n    if (removed !== undefined) {\n      clearTimeout(removed.timeoutId)\n    }\n\n    this._clients = this._clients.filter((c) => c !== client)\n    client.end()\n    this.emit('remove', client)\n  }\n\n  connect(cb) {\n    if (this.ending) {\n      const err = new Error('Cannot use a pool after calling end on the pool')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n\n    const response = promisify(this.Promise, cb)\n    const result = response.result\n\n    // if we don't have to connect a new client, don't do so\n    if (this._isFull() || this._idle.length) {\n      // if we have idle clients schedule a pulse immediately\n      if (this._idle.length) {\n        process.nextTick(() => this._pulseQueue())\n      }\n\n      if (!this.options.connectionTimeoutMillis) {\n        this._pendingQueue.push(new PendingItem(response.callback))\n        return result\n      }\n\n      const queueCallback = (err, res, done) => {\n        clearTimeout(tid)\n        response.callback(err, res, done)\n      }\n\n      const pendingItem = new PendingItem(queueCallback)\n\n      // set connection timeout on checking out an existing client\n      const tid = setTimeout(() => {\n        // remove the callback from pending waiters because\n        // we're going to call it with a timeout error\n        removeWhere(this._pendingQueue, (i) => i.callback === queueCallback)\n        pendingItem.timedOut = true\n        response.callback(new Error('timeout exceeded when trying to connect'))\n      }, this.options.connectionTimeoutMillis)\n\n      this._pendingQueue.push(pendingItem)\n      return result\n    }\n\n    this.newClient(new PendingItem(response.callback))\n\n    return result\n  }\n\n  newClient(pendingItem) {\n    const client = new this.Client(this.options)\n    this._clients.push(client)\n    const idleListener = makeIdleListener(this, client)\n\n    this.log('checking client timeout')\n\n    // connection timeout logic\n    let tid\n    let timeoutHit = false\n    if (this.options.connectionTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('ending client due to timeout')\n        timeoutHit = true\n        // force kill the node driver, and let libpq do its teardown\n        client.connection ? client.connection.stream.destroy() : client.end()\n      }, this.options.connectionTimeoutMillis)\n    }\n\n    this.log('connecting new client')\n    client.connect((err) => {\n      if (tid) {\n        clearTimeout(tid)\n      }\n      client.on('error', idleListener)\n      if (err) {\n        this.log('client failed to connect', err)\n        // remove the dead client from our list of clients\n        this._clients = this._clients.filter((c) => c !== client)\n        if (timeoutHit) {\n          err.message = 'Connection terminated due to connection timeout'\n        }\n\n        // this client won\u2019t be released, so move on immediately\n        this._pulseQueue()\n\n        if (!pendingItem.timedOut) {\n          pendingItem.callback(err, undefined, NOOP)\n        }\n      } else {\n        this.log('new client connected')\n\n        if (this.options.maxLifetimeSeconds !== 0) {\n          const maxLifetimeTimeout = setTimeout(() => {\n            this.log('ending client due to expired lifetime')\n            this._expired.add(client)\n            const idleIndex = this._idle.findIndex((idleItem) => idleItem.client === client)\n            if (idleIndex !== -1) {\n              this._acquireClient(\n                client,\n                new PendingItem((err, client, clientRelease) => clientRelease()),\n                idleListener,\n                false\n              )\n            }\n          }, this.options.maxLifetimeSeconds * 1000)\n\n          maxLifetimeTimeout.unref()\n          client.once('end', () => clearTimeout(maxLifetimeTimeout))\n        }\n\n        return this._acquireClient(client, pendingItem, idleListener, true)\n      }\n    })\n  }\n\n  // acquire a client for a pending work item\n  _acquireClient(client, pendingItem, idleListener, isNew) {\n    if (isNew) {\n      this.emit('connect', client)\n    }\n\n    this.emit('acquire', client)\n\n    client.release = this._releaseOnce(client, idleListener)\n\n    client.removeListener('error', idleListener)\n\n    if (!pendingItem.timedOut) {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, (err) => {\n          if (err) {\n            client.release(err)\n            return pendingItem.callback(err, undefined, NOOP)\n          }\n\n          pendingItem.callback(undefined, client, client.release)\n        })\n      } else {\n        pendingItem.callback(undefined, client, client.release)\n      }\n    } else {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, client.release)\n      } else {\n        client.release()\n      }\n    }\n  }\n\n  // returns a function that wraps _release and throws if called more than once\n  _releaseOnce(client, idleListener) {\n    let released = false\n\n    return (err) => {\n      if (released) {\n        throwOnDoubleRelease()\n      }\n\n      released = true\n      this._release(client, idleListener, err)\n    }\n  }\n\n  // release a client back to the poll, include an error\n  // to remove it from the pool\n  _release(client, idleListener, err) {\n    client.on('error', idleListener)\n\n    client._poolUseCount = (client._poolUseCount || 0) + 1\n\n    this.emit('release', err, client)\n\n    // TODO(bmc): expose a proper, public interface _queryable and _ending\n    if (err || this.ending || !client._queryable || client._ending || client._poolUseCount >= this.options.maxUses) {\n      if (client._poolUseCount >= this.options.maxUses) {\n        this.log('remove expended client')\n      }\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    const isExpired = this._expired.has(client)\n    if (isExpired) {\n      this.log('remove expired client')\n      this._expired.delete(client)\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    // idle timeout\n    let tid\n    if (this.options.idleTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('remove idle client')\n        this._remove(client)\n      }, this.options.idleTimeoutMillis)\n\n      if (this.options.allowExitOnIdle) {\n        // allow Node to exit if this is all that's left\n        tid.unref()\n      }\n    }\n\n    if (this.options.allowExitOnIdle) {\n      client.unref()\n    }\n\n    this._idle.push(new IdleItem(client, idleListener, tid))\n    this._pulseQueue()\n  }\n\n  query(text, values, cb) {\n    // guard clause against passing a function as the first parameter\n    if (typeof text === 'function') {\n      const response = promisify(this.Promise, text)\n      setImmediate(function () {\n        return response.callback(new Error('Passing a function as the first parameter to pool.query is not supported'))\n      })\n      return response.result\n    }\n\n    // allow plain text query without values\n    if (typeof values === 'function') {\n      cb = values\n      values = undefined\n    }\n    const response = promisify(this.Promise, cb)\n    cb = response.callback\n\n    this.connect((err, client) => {\n      if (err) {\n        return cb(err)\n      }\n\n      let clientReleased = false\n      const onError = (err) => {\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        cb(err)\n      }\n\n      client.once('error', onError)\n      this.log('dispatching query')\n      try {\n        client.query(text, values, (err, res) => {\n          this.log('query dispatched')\n          client.removeListener('error', onError)\n          if (clientReleased) {\n            return\n          }\n          clientReleased = true\n          client.release(err)\n          if (err) {\n            return cb(err)\n          }\n          return cb(undefined, res)\n        })\n      } catch (err) {\n        client.release(err)\n        return cb(err)\n      }\n    })\n    return response.result\n  }\n\n  end(cb) {\n    this.log('ending')\n    if (this.ending) {\n      const err = new Error('Called end on pool more than once')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n    this.ending = true\n    const promised = promisify(this.Promise, cb)\n    this._endCallback = promised.callback\n    this._pulseQueue()\n    return promised.result\n  }\n\n  get waitingCount() {\n    return this._pendingQueue.length\n  }\n\n  get idleCount() {\n    return this._idle.length\n  }\n\n  get expiredCount() {\n    return this._clients.reduce((acc, client) => acc + (this._expired.has(client) ? 1 : 0), 0)\n  }\n\n  get totalCount() {\n    return this._clients.length\n  }\n}\nmodule.exports = Pool\n", "'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('../utils')\n\nvar NativeQuery = (module.exports = function (config, values, callback) {\n  EventEmitter.call(this)\n  config = utils.normalizeQueryConfig(config, values, callback)\n  this.text = config.text\n  this.values = config.values\n  this.name = config.name\n  this.callback = config.callback\n  this.state = 'new'\n  this._arrayMode = config.rowMode === 'array'\n\n  // if the 'row' event is listened for\n  // then emit them as they come in\n  // without setting singleRowMode to true\n  // this has almost no meaning because libpq\n  // reads all rows into memory befor returning any\n  this._emitRowEvents = false\n  this.on(\n    'newListener',\n    function (event) {\n      if (event === 'row') this._emitRowEvents = true\n    }.bind(this)\n  )\n})\n\nutil.inherits(NativeQuery, EventEmitter)\n\nvar errorFieldMap = {\n  /* eslint-disable quote-props */\n  sqlState: 'code',\n  statementPosition: 'position',\n  messagePrimary: 'message',\n  context: 'where',\n  schemaName: 'schema',\n  tableName: 'table',\n  columnName: 'column',\n  dataTypeName: 'dataType',\n  constraintName: 'constraint',\n  sourceFile: 'file',\n  sourceLine: 'line',\n  sourceFunction: 'routine',\n}\n\nNativeQuery.prototype.handleError = function (err) {\n  // copy pq error fields into the error object\n  var fields = this.native.pq.resultErrorFields()\n  if (fields) {\n    for (var key in fields) {\n      var normalizedFieldName = errorFieldMap[key] || key\n      err[normalizedFieldName] = fields[key]\n    }\n  }\n  if (this.callback) {\n    this.callback(err)\n  } else {\n    this.emit('error', err)\n  }\n  this.state = 'error'\n}\n\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\n  return this._getPromise().then(onSuccess, onFailure)\n}\n\nNativeQuery.prototype.catch = function (callback) {\n  return this._getPromise().catch(callback)\n}\n\nNativeQuery.prototype._getPromise = function () {\n  if (this._promise) return this._promise\n  this._promise = new Promise(\n    function (resolve, reject) {\n      this._once('end', resolve)\n      this._once('error', reject)\n    }.bind(this)\n  )\n  return this._promise\n}\n\nNativeQuery.prototype.submit = function (client) {\n  this.state = 'running'\n  var self = this\n  this.native = client.native\n  client.native.arrayMode = this._arrayMode\n\n  var after = function (err, rows, results) {\n    client.native.arrayMode = false\n    setImmediate(function () {\n      self.emit('_done')\n    })\n\n    // handle possible query error\n    if (err) {\n      return self.handleError(err)\n    }\n\n    // emit row events for each row in the result\n    if (self._emitRowEvents) {\n      if (results.length > 1) {\n        rows.forEach((rowOfRows, i) => {\n          rowOfRows.forEach((row) => {\n            self.emit('row', row, results[i])\n          })\n        })\n      } else {\n        rows.forEach(function (row) {\n          self.emit('row', row, results)\n        })\n      }\n    }\n\n    // handle successful result\n    self.state = 'end'\n    self.emit('end', results)\n    if (self.callback) {\n      self.callback(null, results)\n    }\n  }\n\n  if (process.domain) {\n    after = process.domain.bind(after)\n  }\n\n  // named query\n  if (this.name) {\n    if (this.name.length > 63) {\n      /* eslint-disable no-console */\n      console.error('Warning! Postgres only supports 63 characters for query names.')\n      console.error('You supplied %s (%s)', this.name, this.name.length)\n      console.error('This can cause conflicts and silent errors executing queries')\n      /* eslint-enable no-console */\n    }\n    var values = (this.values || []).map(utils.prepareValue)\n\n    // check if the client has already executed this named query\n    // if so...just execute it again - skip the planning phase\n    if (client.namedQueries[this.name]) {\n      if (this.text && client.namedQueries[this.name] !== this.text) {\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n        return after(err)\n      }\n      return client.native.execute(this.name, values, after)\n    }\n    // plan the named query the first time, then execute it\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\n      if (err) return after(err)\n      client.namedQueries[self.name] = self.text\n      return self.native.execute(self.name, values, after)\n    })\n  } else if (this.values) {\n    if (!Array.isArray(this.values)) {\n      const err = new Error('Query values must be an array')\n      return after(err)\n    }\n    var vals = this.values.map(utils.prepareValue)\n    client.native.query(this.text, vals, after)\n  } else {\n    client.native.query(this.text, after)\n  }\n}\n", "'use strict'\n\n// eslint-disable-next-line\nvar Native\ntry {\n  // Wrap this `require()` in a try-catch to avoid upstream bundlers from complaining that this might not be available since it is an optional import\n  Native = require('pg-native')\n} catch (e) {\n  throw e\n}\nvar TypeOverrides = require('../type-overrides')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar ConnectionParameters = require('../connection-parameters')\n\nvar NativeQuery = require('./query')\n\nvar Client = (module.exports = function (config) {\n  EventEmitter.call(this)\n  config = config || {}\n\n  this._Promise = config.Promise || global.Promise\n  this._types = new TypeOverrides(config.types)\n\n  this.native = new Native({\n    types: this._types,\n  })\n\n  this._queryQueue = []\n  this._ending = false\n  this._connecting = false\n  this._connected = false\n  this._queryable = true\n\n  // keep these on the object for legacy reasons\n  // for the time being. TODO: deprecate all this jazz\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\n  if (config.nativeConnectionString) cp.nativeConnectionString = config.nativeConnectionString\n  this.user = cp.user\n\n  // \"hiding\" the password so it doesn't show up in stack traces\n  // or if the client is console.logged\n  Object.defineProperty(this, 'password', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: cp.password,\n  })\n  this.database = cp.database\n  this.host = cp.host\n  this.port = cp.port\n\n  // a hash to hold named queries\n  this.namedQueries = {}\n})\n\nClient.Query = NativeQuery\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype._errorAllQueries = function (err) {\n  const enqueueError = (query) => {\n    process.nextTick(() => {\n      query.native = this.native\n      query.handleError(err)\n    })\n  }\n\n  if (this._hasActiveQuery()) {\n    enqueueError(this._activeQuery)\n    this._activeQuery = null\n  }\n\n  this._queryQueue.forEach(enqueueError)\n  this._queryQueue.length = 0\n}\n\n// connect to the backend\n// pass an optional callback to be called once connected\n// or with an error if there was a connection error\nClient.prototype._connect = function (cb) {\n  var self = this\n\n  if (this._connecting) {\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\n    return\n  }\n\n  this._connecting = true\n\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\n    if (self.connectionParameters.nativeConnectionString) conString = self.connectionParameters.nativeConnectionString\n    if (err) return cb(err)\n    self.native.connect(conString, function (err) {\n      if (err) {\n        self.native.end()\n        return cb(err)\n      }\n\n      // set internal states to connected\n      self._connected = true\n\n      // handle connection errors from the native layer\n      self.native.on('error', function (err) {\n        self._queryable = false\n        self._errorAllQueries(err)\n        self.emit('error', err)\n      })\n\n      self.native.on('notification', function (msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra,\n        })\n      })\n\n      // signal we are connected now\n      self.emit('connect')\n      self._pulseQueryQueue(true)\n\n      cb()\n    })\n  })\n}\n\nClient.prototype.connect = function (callback) {\n  if (callback) {\n    this._connect(callback)\n    return\n  }\n\n  return new this._Promise((resolve, reject) => {\n    this._connect((error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n// send a query to the server\n// this method is highly overloaded to take\n// 1) string query, optional array of parameters, optional function callback\n// 2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function (config, values, callback) {\n  var query\n  var result\n  var readTimeout\n  var readTimeoutTimer\n  var queryCallback\n\n  if (config === null || config === undefined) {\n    throw new TypeError('Client was passed a null or undefined query')\n  } else if (typeof config.submit === 'function') {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    result = query = config\n    // accept query(new Query(...), (err, res) => { }) style\n    if (typeof values === 'function') {\n      config.callback = values\n    }\n  } else {\n    readTimeout = this.connectionParameters.query_timeout\n    query = new NativeQuery(config, values, callback)\n    if (!query.callback) {\n      let resolveOut, rejectOut\n      result = new this._Promise((resolve, reject) => {\n        resolveOut = resolve\n        rejectOut = reject\n      }).catch(err => {\n        Error.captureStackTrace(err);\n        throw err;\n      })\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\n    }\n  }\n\n  if (readTimeout) {\n    queryCallback = query.callback\n\n    readTimeoutTimer = setTimeout(() => {\n      var error = new Error('Query read timeout')\n\n      process.nextTick(() => {\n        query.handleError(error, this.connection)\n      })\n\n      queryCallback(error)\n\n      // we already returned an error,\n      // just do nothing if query completes\n      query.callback = () => {}\n\n      // Remove from queue\n      var index = this._queryQueue.indexOf(query)\n      if (index > -1) {\n        this._queryQueue.splice(index, 1)\n      }\n\n      this._pulseQueryQueue()\n    }, readTimeout)\n\n    query.callback = (err, res) => {\n      clearTimeout(readTimeoutTimer)\n      queryCallback(err, res)\n    }\n  }\n\n  if (!this._queryable) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\n    })\n    return result\n  }\n\n  if (this._ending) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client was closed and is not queryable'))\n    })\n    return result\n  }\n\n  this._queryQueue.push(query)\n  this._pulseQueryQueue()\n  return result\n}\n\n// disconnect from the backend server\nClient.prototype.end = function (cb) {\n  var self = this\n\n  this._ending = true\n\n  if (!this._connected) {\n    this.once('connect', this.end.bind(this, cb))\n  }\n  var result\n  if (!cb) {\n    result = new this._Promise(function (resolve, reject) {\n      cb = (err) => (err ? reject(err) : resolve())\n    })\n  }\n  this.native.end(function () {\n    self._errorAllQueries(new Error('Connection terminated'))\n\n    process.nextTick(() => {\n      self.emit('end')\n      if (cb) cb()\n    })\n  })\n  return result\n}\n\nClient.prototype._hasActiveQuery = function () {\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\n}\n\nClient.prototype._pulseQueryQueue = function (initialConnection) {\n  if (!this._connected) {\n    return\n  }\n  if (this._hasActiveQuery()) {\n    return\n  }\n  var query = this._queryQueue.shift()\n  if (!query) {\n    if (!initialConnection) {\n      this.emit('drain')\n    }\n    return\n  }\n  this._activeQuery = query\n  query.submit(this)\n  var self = this\n  query.once('_done', function () {\n    self._pulseQueryQueue()\n  })\n}\n\n// attempt to cancel an in-progress query\nClient.prototype.cancel = function (query) {\n  if (this._activeQuery === query) {\n    this.native.cancel(function () {})\n  } else if (this._queryQueue.indexOf(query) !== -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\n  }\n}\n\nClient.prototype.ref = function () {}\nClient.prototype.unref = function () {}\n\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn)\n}\n\nClient.prototype.getTypeParser = function (oid, format) {\n  return this._types.getTypeParser(oid, format)\n}\n", "'use strict'\nmodule.exports = require('./client')\n", "'use strict'\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\nconst { DatabaseError } = require('pg-protocol')\nconst { escapeIdentifier, escapeLiteral } = require('./utils')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n  this.DatabaseError = DatabaseError\n  this.escapeIdentifier = escapeIdentifier\n  this.escapeLiteral = escapeLiteral\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n", "const crypto = require(\"crypto\");\n\nconst uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\nfunction valid(uuid) {\n  return uuidPattern.test(uuid);\n}\n\nfunction uuid4() {\n  var rnd = crypto.randomBytes(16);\n  rnd[6] = (rnd[6] & 0x0f) | 0x40;\n  rnd[8] = (rnd[8] & 0x3f) | 0x80;\n  rnd = rnd.toString(\"hex\").match(/(.{8})(.{4})(.{4})(.{4})(.{12})/);\n  rnd.shift();\n  return rnd.join(\"-\");\n}\nuuid4.valid = valid;\n\nmodule.exports = uuid4;\n", "import { APIGatewayProxyEvent, Handler } from 'aws-lambda'\n\nimport { UsersRequest } from '@functions/users/domain/UserRequest'\nimport { UserPostgreRepository } from '@functions/users/persistence/UserPostgreRepository'\nimport { HttpResponse } from '@infraestructure/http/HttpResponse'\nimport { prepareLog } from '@infraestructure/log/prepareLog'\nimport { PostgreSqlClient } from '@infraestructure/persistence/postgresql/PostgreSqlClientFactory'\nimport { parseBody } from '@libs/parseBody'\nimport { logger } from '@libs/powertools'\nimport middyfy from '@middy/core'\nimport inputOutputLogger from '@middy/input-output-logger'\n\nimport { SaveUser } from './saveUser'\n\nconst saveUser: Handler = async (_event: APIGatewayProxyEvent) => {\n  try {\n    logger.info('INFO', _event.body)\n\n    const User_data: UsersRequest = parseBody(_event.body)\n    const clientFactory = await PostgreSqlClient.getInstance().clientDB()\n    const UserRepository = new UserPostgreRepository(clientFactory)\n    const create = new SaveUser(UserRepository)\n    await create.execute(User_data)\n\n    return HttpResponse.ok({ success: true })\n  } catch (error) {\n    logger.error('ERROR', error)\n    return HttpResponse.error({ message: error.message, errorCode: error.statusCode })\n  }\n}\nexport const main = middyfy(saveUser).use(\n  inputOutputLogger({\n    logger: async request => await prepareLog(request, 'Creo un nuevo usuario '),\n    awsContext: true,\n  }),\n)\n", "import { Logger } from '@aws-lambda-powertools/logger'\nimport { Metrics } from '@aws-lambda-powertools/metrics'\nimport { Tracer } from '@aws-lambda-powertools/tracer'\n\nconst logger = new Logger({\n  persistentLogAttributes: {\n    aws_account_id: process.env.AWS_ACCOUNT_ID || 'N/A',\n    aws_region: process.env.AWS_REGION || 'N/A',\n  },\n})\n\nconst metrics = new Metrics({\n  defaultDimensions: {\n    aws_account_id: process.env.AWS_ACCOUNT_ID || 'N/A',\n    aws_region: process.env.AWS_REGION || 'N/A',\n  },\n})\n\nconst tracer = new Tracer()\n\nexport { logger, metrics, tracer }\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\ntype QueryProps<T> = {\n  data?: T\n  where?: T\n  orderBy?: T\n}\n\nexport class ParseQuery<T> {\n  protected data: T\n  protected where: T\n  protected orderBy: T\n  public valuesData: any[] = []\n  public valuesPosition: any[] = []\n\n  constructor({ data, where, orderBy }: QueryProps<T>) {\n    this.data = data\n    this.where = where\n    this.orderBy = orderBy\n  }\n\n  getData() {\n    return this.data\n  }\n\n  setData(data: T) {\n    this.data = data\n  }\n\n  getWhere() {\n    return this.where\n  }\n\n  setWhere(where: T) {\n    this.where = where\n  }\n\n  getOrderBy() {\n    return this.orderBy\n  }\n\n  setOrderBy(orderBy: T) {\n    this.orderBy = orderBy\n  }\n\n  public generateInsertQuery(): string {\n    const values = Object.keys(this.data)\n\n    const text: string[] = []\n\n    values.forEach((field, key) => {\n      text.push(`\"${field}\"`)\n      this.valuesData.push(this.data[field])\n      this.valuesPosition.push(`$${key + 1}`)\n    })\n\n    return text.join(',')\n  }\n\n  public generateUpdateQuery(): string {\n    const values = Object.keys(this.data)\n\n    const text: string[] = []\n\n    values.forEach((field, key) => {\n      text.push(`\"${field}\" = $${key + 1}`)\n      this.valuesData.push(this.data[field])\n    })\n\n    return text.join(',')\n  }\n\n  public whereQuery(): string {\n    const whereValues = Object.keys(this.where)\n\n    if (whereValues.length > 0) {\n      const text: string[] = []\n\n      const countData = Object.keys(this.data).length\n\n      whereValues.forEach((field, key) => {\n        text.push(`\"${field}\" = $${key + countData + 1}`)\n\n        this.valuesData.push(this.where[field])\n      })\n\n      return `WHERE ${text.join(' AND ')}`\n    }\n\n    return ''\n  }\n\n  public orderByQuery(): string {\n    if (this.orderBy) {\n      const keys = Object.keys(this.orderBy)\n      if (keys.length > 0) {\n        const sort = keys\n          .map(key => {\n            return `${key} ${this.orderBy[key]}`\n          })\n          .join(',')\n        return `ORDER BY ${sort}`\n      }\n    }\n\n    return ''\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { PoolClient, QueryResult } from 'pg'\n\nimport { logger } from '@libs/powertools'\n\nimport { ParseQuery } from './ParseQuery'\n\ntype UpdateQuery<T> = {\n  data: Partial<T>\n  where?: Partial<T>\n}\n\ntype SortQuery = 'DESC' | 'ASC'\n\ntype WhereQuery<T> = {\n  where?: Partial<T>\n  orderBy?: { [Property in keyof T]?: SortQuery }\n}\n\nexport class PostgreSqlRepository {\n  private table: string\n\n  constructor(private readonly _client: PoolClient) {}\n\n  setTable(table: string) {\n    this.table = table\n  }\n\n  getTable() {\n    return this.table\n  }\n\n  protected async saveQuery<T>(dataObject: Partial<T>): Promise<QueryResult<T>> {\n    const parse = new ParseQuery({ data: dataObject })\n    const insertValues = parse.generateInsertQuery()\n\n    const textQuery = `INSERT INTO ${this.table} (${insertValues}) VALUES (${parse.valuesPosition}) RETURNING *`\n\n    const query = {\n      text: textQuery,\n      values: parse.valuesData,\n    }\n    logger.info('QUERY', query)\n\n    try {\n      return this._client.query(query)\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  protected async updateQuery<T>({ data, where }: UpdateQuery<T>): Promise<QueryResult<T>> {\n    const parse = new ParseQuery({ data, where })\n\n    const values = Object.keys(data)\n\n    const valuesData: any[] = []\n\n    values.forEach(field => {\n      valuesData.push(data[field])\n    })\n\n    const setValues = parse.generateUpdateQuery()\n    const whereValues = parse.whereQuery()\n\n    const textQuery = `UPDATE ${this.table} SET ${setValues} ${whereValues} RETURNING *`\n\n    const query = {\n      text: textQuery,\n      values: parse.valuesData,\n    }\n\n    logger.info('QUERY', query)\n    try {\n      return await this._client.query(query)\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  protected async findOneQuery<T>({ where }: WhereQuery<T>): Promise<QueryResult<T>> {\n    const parse = new ParseQuery({ data: {}, where })\n\n    const values = Object.keys(where)\n\n    const valuesData: any[] = []\n\n    values.forEach(field => {\n      valuesData.push(where[field])\n    })\n\n    const whereValues = parse.whereQuery()\n\n    const textQuery = `SELECT * FROM ${this.table} ${whereValues} limit 1`\n\n    const query = {\n      text: textQuery,\n      values: parse.valuesData,\n    }\n\n    logger.info('QUERY', query)\n\n    try {\n      return await this._client.query(query)\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  protected async findQuery<T>({ where, orderBy }: WhereQuery<T>): Promise<QueryResult<T>> {\n    const parse = new ParseQuery({ data: {}, where, orderBy })\n\n    const values = Object.keys(where)\n\n    const valuesData: any[] = []\n\n    values.forEach(field => {\n      valuesData.push(where[field])\n    })\n\n    const whereValues = parse.whereQuery()\n    const orderByValues = parse.orderByQuery()\n\n    const textQuery = `SELECT * FROM ${this.table} ${whereValues} ${orderByValues}`\n\n    const query = {\n      text: textQuery,\n      values: parse.valuesData,\n    }\n\n    logger.info('QUERY', query)\n\n    try {\n      return await this._client.query(query)\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  protected async delete<T>({ where }: WhereQuery<T>): Promise<void> {\n    const parse = new ParseQuery({ data: {}, where })\n\n    const values = Object.keys(where)\n\n    const valuesData: any[] = []\n\n    values.forEach(field => {\n      valuesData.push(where[field])\n    })\n\n    const whereValues = parse.whereQuery()\n\n    const textQuery = `DELETE FROM ${this.table} ${whereValues}`\n\n    const query = {\n      text: textQuery,\n      values: parse.valuesData,\n    }\n\n    logger.info('QUERY', query)\n\n    try {\n      await this._client.query(query)\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  async begin(): Promise<void> {\n    await this._client.query('BEGIN')\n  }\n\n  async commit(): Promise<void> {\n    await this._client.query('COMMIT')\n  }\n\n  async rollback(): Promise<void> {\n    await this._client.query('ROLLBACK')\n  }\n\n  async release(): Promise<void> {\n    this._client.release(true)\n  }\n}\n", "import { PoolClient } from 'pg'\n\nimport { IUserProps, User } from '@functions/users/domain/User'\nimport { PostgreSqlRepository } from '@infraestructure/persistence/postgresql/PostgreSqlRepository'\nimport { logger } from '@libs/powertools'\n\nimport { UserRepository } from '../domain/UserRepository'\nimport { UserDTO } from '../dto/UserDTO'\n\nexport class UserPostgreRepository extends PostgreSqlRepository implements UserRepository {\n  constructor(protected readonly clientDB: PoolClient) {\n    super(clientDB)\n    this.setTable('users')\n  }\n\n  async create({ props, uuid, createdAt, updatedAt }: User): Promise<void> {\n    try {\n      await this.saveQuery<UserDTO>({\n        uuid,\n        coreCapitalId: props.coreCapitalId,\n        name: props.name,\n        lastName: props.lastName,\n        surName: props.surName,\n        dni: props.dni,\n        userName: props.userName,\n        isActive: props.isActive,\n        createdAt: createdAt,\n        updatedAt: updatedAt,\n      })\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  async update({ props, updatedAt }: User): Promise<void> {\n    try {\n      await this.updateQuery<UserDTO>({\n        data: {\n          coreCapitalId: props.coreCapitalId,\n          name: props.name,\n          lastName: props.lastName,\n          surName: props.surName,\n          dni: props.dni,\n          userName: props.userName,\n          updatedAt: updatedAt,\n        },\n        where: {\n          uuid: props.uuid,\n        },\n      })\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  async findOne(uuid: string): Promise<IUserProps> {\n    try {\n      const result = await this.clientDB.query<UserDTO>(`SELECT * FROM ${this.getTable()} WHERE \"uuid\" = $1`, [uuid])\n      if (result.rows) {\n        return result.rows[0]\n      }\n      return null\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  async findAll(): Promise<Array<IUserProps>> {\n    try {\n      const result = await this.clientDB.query<UserDTO>(`SELECT * FROM ${this.getTable()} ORDER BY name ASC`)\n      if (result.rows) {\n        return result.rows\n      }\n      return null\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  async alreadyExists({ props }: User): Promise<boolean> {\n    try {\n      const result = await this.clientDB.query<UserDTO>(\n        `SELECT * FROM ${this.getTable()} \n          WHERE \"userName\" = $1`,\n        [props.userName],\n      )\n      if (result.rows.length > 0) {\n        return true\n      }\n      return false\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n\n  async remove(uuid: string): Promise<void> {\n    try {\n      await this.delete<unknown>({\n        where: {\n          uuid: uuid,\n        },\n      })\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n}\n", "export enum HTTP_CODES {\n  'OK' = '200',\n  'BAD_REQUEST' = '400',\n  'UNAUTHORIZED' = '401',\n  'FORBIDDEN' = '403',\n  'NOT_FOUND' = '404',\n  'INTERNAL_SERVER' = '500',\n}\n\nexport type ERROR_RESPONSE = {\n  message: string\n  errorCode?: HTTP_CODES\n}\n\nconst swapped = () => {\n  const swap = Object.entries(HTTP_CODES).map(([key, value]) => [value, key])\n  return Object.fromEntries(swap)\n}\n\nexport class HttpResponse {\n  constructor() {}\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static ok(body?: Record<any, any> | any) {\n    return {\n      statusCode: HTTP_CODES.OK,\n      body: JSON.stringify(body || swapped[HTTP_CODES.OK]),\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': true,\n      },\n    }\n  }\n\n  static error({ message, errorCode }: ERROR_RESPONSE) {\n    return {\n      statusCode: errorCode || HTTP_CODES.INTERNAL_SERVER,\n      body: JSON.stringify(message || swapped[HTTP_CODES.INTERNAL_SERVER]),\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': true,\n      },\n    }\n  }\n}\n", "import { jwtDecode } from 'jwt-decode'\n\nimport { PostgreSqlClient } from '@infraestructure/persistence/postgresql/PostgreSqlClientFactory'\nimport { logger } from '@libs/powertools'\n\nimport { Log } from './ILogEntry'\nimport { LogRepository } from './LogRepository'\nimport { RequestData } from './persistence/RequestData'\n\nexport class AddLog {\n  async execute(request: RequestData, action: string) {\n    try {\n      const clientFactory = await PostgreSqlClient.getInstance().clientDB()\n      const logRespository = new LogRepository(clientFactory)\n      let decoded = []\n      if (request?.event?.['headers']?.['x-token']) {\n        decoded = jwtDecode(request?.event?.['headers']?.['x-token'])\n      }\n      const createLog = Log.create({\n        user: decoded?.['user'] ? decoded?.['user'] : 'UNKNOW',\n        userId: decoded?.['userId'],\n        lambda: request.context?.['functionName'],\n        route: request?.event?.['resource'],\n        action: action,\n      })\n      logRespository.addLogEntry(createLog)\n    } catch (error) {\n      logger.info('ERROR', error)\n      throw error\n    }\n  }\n}\n", "import { Pool, PoolClient } from 'pg'\n\nimport { logger } from '@libs/powertools'\n\nexport class PostgreSqlClientFactory {\n  static async createClient(): Promise<PoolClient> {\n    try {\n      const pool = new Pool({\n        user: process.env.PGUSER,\n        host: process.env.PGHOST,\n        database: process.env.PGDATABASE,\n        password: process.env.PGPASSWORD,\n        port: parseInt(process.env.PGPORT),\n        idleTimeoutMillis: 0,\n      })\n\n      return pool.connect()\n    } catch (error) {\n      logger.info('ERROR CONECTION BD', error)\n    }\n  }\n}\n\nexport class PostgreSqlClient {\n  private static instance: PostgreSqlClient\n\n  private constructor() {}\n\n  public static getInstance(): PostgreSqlClient {\n    if (!PostgreSqlClient.instance) {\n      PostgreSqlClient.instance = new PostgreSqlClient()\n    }\n\n    return PostgreSqlClient.instance\n  }\n\n  async clientDB(): Promise<PoolClient> {\n    return PostgreSqlClientFactory.createClient()\n  }\n}\n", "import uuid4 from 'uuid4'\n\nexport interface ILogEntry {\n  uuid?: string\n  userId?: string\n  user?: string\n  action?: string\n  route?: string\n  lambda?: string\n  createdAt?: Date\n}\n\nexport class Log {\n  private constructor(\n    readonly props: ILogEntry,\n    readonly uuid?: string,\n    readonly createdAt?: Date,\n    readonly updatedAt?: Date,\n  ) {}\n\n  static create(plainData: ILogEntry, _uuid?: string): Log {\n    return new Log(plainData, _uuid ?? uuid4(), new Date())\n  }\n\n  static toDomain(plainData: ILogEntry) {\n    return new Log(plainData, plainData.uuid, plainData.createdAt)\n  }\n}\n", "import { PoolClient } from 'pg'\n\nimport { PostgreSqlRepository } from '@infraestructure/persistence/postgresql/PostgreSqlRepository'\nimport { logger } from '@libs/powertools'\n\nimport { ILogEntry, Log } from './ILogEntry'\n\nexport class LogRepository extends PostgreSqlRepository {\n  constructor(protected readonly clientDB: PoolClient) {\n    super(clientDB)\n    this.setTable('logs')\n  }\n\n  async addLogEntry({ props, uuid, createdAt }: Log): Promise<void> {\n    try {\n      await this.saveQuery<ILogEntry>({\n        uuid,\n        user: props.user,\n        userId: props.userId,\n        lambda: props.lambda,\n        route: props.route,\n        action: props.action,\n        createdAt: createdAt,\n      })\n    } catch (error) {\n      logger.error('ERROR', error)\n      throw error\n    }\n  }\n}\n", "import { IDataPersistence } from './IDataPersistence'\n\nexport class MemoryDataPersistence<T> implements IDataPersistence<T> {\n  private data: T[] = []\n\n  async save(data: T): Promise<void> {\n    this.data.push(data)\n  }\n\n  async getData(): Promise<T[]> {\n    return this.data\n  }\n}\n", "import { logger } from '@libs/powertools'\n\nimport { AddLog } from './AddLog'\nimport { MemoryDataPersistence } from './persistence/MemoryDataPersistence'\nimport { RequestData } from './persistence/RequestData'\n\nconst memoryDataPersistence = new MemoryDataPersistence<RequestData>()\n\nexport const prepareLog = async (request, action: string) => {\n  try {\n    if (request?.event) {\n      const requestData: RequestData = { event: request?.event, context: request?.context }\n      await memoryDataPersistence.save(requestData)\n    }\n    if (request?.response?.statusCode == 200) {\n      const addLog = new AddLog()\n      await addLog.execute((await memoryDataPersistence.getData()).pop(), action)\n    }\n  } catch (error) {\n    logger.info('ERROR LOG', error)\n    throw error\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const parseBody = (body: any) => {\n  if (process.env.NODE_ENV === 'local') {\n    return JSON.parse(body)\n  }\n  const buff = Buffer.from(body, 'base64')\n  const eventBodyStr = buff.toString('utf-8')\n  return JSON.parse(eventBodyStr)\n}\n", "/* global awslambda */ import { Readable } from 'node:stream';\nimport { pipeline } from 'node:stream/promises';\nimport { setTimeout } from 'node:timers/promises';\nconst defaultLambdaHandler = ()=>{};\nconst defaultPlugin = {\n    timeoutEarlyInMillis: 5,\n    timeoutEarlyResponse: ()=>{\n        throw new Error('Timeout');\n    },\n    streamifyResponse: false // Deprecate need for this when AWS provides a flag for when it's looking for it\n};\nconst middy = (lambdaHandler = defaultLambdaHandler, plugin = {})=>{\n    // Allow base handler to be set using .handler()\n    if (typeof lambdaHandler !== 'function') {\n        plugin = lambdaHandler;\n        lambdaHandler = defaultLambdaHandler;\n    }\n    plugin = {\n        ...defaultPlugin,\n        ...plugin\n    };\n    plugin.timeoutEarly = plugin.timeoutEarlyInMillis > 0;\n    plugin.beforePrefetch?.();\n    const beforeMiddlewares = [];\n    const afterMiddlewares = [];\n    const onErrorMiddlewares = [];\n    const middyHandler = (event = {}, context = {})=>{\n        plugin.requestStart?.();\n        const request = {\n            event,\n            context,\n            response: undefined,\n            error: undefined,\n            internal: plugin.internal ?? {}\n        };\n        return runRequest(request, [\n            ...beforeMiddlewares\n        ], lambdaHandler, [\n            ...afterMiddlewares\n        ], [\n            ...onErrorMiddlewares\n        ], plugin);\n    };\n    const middy = plugin.streamifyResponse ? awslambda.streamifyResponse(async (event, responseStream, context)=>{\n        const handlerResponse = await middyHandler(event, context);\n        let handlerBody = handlerResponse;\n        if (handlerResponse.statusCode) {\n            handlerBody = handlerResponse.body ?? '';\n            responseStream = awslambda.HttpResponseStream.from(responseStream, handlerResponse);\n        }\n        // Source @datastream/core (MIT)\n        let handlerStream;\n        if (handlerBody._readableState) {\n            handlerStream = handlerBody;\n        } else if (typeof handlerBody === 'string') {\n            function* iterator(input) {\n                const size = 16384 // 16 * 1024 // Node.js default\n                ;\n                let position = 0;\n                const length = input.length;\n                while(position < length){\n                    yield input.substring(position, position + size);\n                    position += size;\n                }\n            }\n            handlerStream = Readable.from(iterator(handlerBody));\n        }\n        if (!handlerStream) {\n            throw new Error('handler response not a ReadableStream');\n        }\n        await pipeline(handlerStream, responseStream);\n    }) : middyHandler;\n    middy.use = (middlewares)=>{\n        if (!Array.isArray(middlewares)) {\n            middlewares = [\n                middlewares\n            ];\n        }\n        for (const middleware of middlewares){\n            const { before, after, onError } = middleware;\n            if (!before && !after && !onError) {\n                throw new Error('Middleware must be an object containing at least one key among \"before\", \"after\", \"onError\"');\n            }\n            if (before) middy.before(before);\n            if (after) middy.after(after);\n            if (onError) middy.onError(onError);\n        }\n        return middy;\n    };\n    // Inline Middlewares\n    middy.before = (beforeMiddleware)=>{\n        beforeMiddlewares.push(beforeMiddleware);\n        return middy;\n    };\n    middy.after = (afterMiddleware)=>{\n        afterMiddlewares.unshift(afterMiddleware);\n        return middy;\n    };\n    middy.onError = (onErrorMiddleware)=>{\n        onErrorMiddlewares.unshift(onErrorMiddleware);\n        return middy;\n    };\n    middy.handler = (replaceLambdaHandler)=>{\n        lambdaHandler = replaceLambdaHandler;\n        return middy;\n    };\n    return middy;\n};\nconst runRequest = async (request, beforeMiddlewares, lambdaHandler, afterMiddlewares, onErrorMiddlewares, plugin)=>{\n    let timeoutAbort;\n    const timeoutEarly = plugin.timeoutEarly && request.context.getRemainingTimeInMillis // disable when AWS context missing (tests, containers)\n    ;\n    try {\n        await runMiddlewares(request, beforeMiddlewares, plugin);\n        // Check if before stack hasn't exit early\n        if (typeof request.response === 'undefined') {\n            plugin.beforeHandler?.();\n            const handlerAbort = new AbortController();\n            if (timeoutEarly) timeoutAbort = new AbortController();\n            request.response = await Promise.race([\n                lambdaHandler(request.event, request.context, {\n                    signal: handlerAbort.signal\n                }),\n                timeoutEarly ? setTimeout(request.context.getRemainingTimeInMillis() - plugin.timeoutEarlyInMillis, undefined, {\n                    signal: timeoutAbort.signal\n                }).then(()=>{\n                    handlerAbort.abort();\n                    return plugin.timeoutEarlyResponse();\n                }) : Promise.race([])\n            ]);\n            timeoutAbort?.abort() // lambdaHandler may not be a promise\n            ;\n            plugin.afterHandler?.();\n            await runMiddlewares(request, afterMiddlewares, plugin);\n        }\n    } catch (e) {\n        timeoutAbort?.abort() // timeout should be aborted on errors\n        ;\n        // Reset response changes made by after stack before error thrown\n        request.response = undefined;\n        request.error = e;\n        try {\n            await runMiddlewares(request, onErrorMiddlewares, plugin);\n        } catch (e) {\n            // Save error that wasn't handled\n            e.originalError = request.error;\n            request.error = e;\n            throw request.error;\n        }\n        // Catch if onError stack hasn't handled the error\n        if (typeof request.response === 'undefined') throw request.error;\n    } finally{\n        await plugin.requestEnd?.(request);\n    }\n    return request.response;\n};\nconst runMiddlewares = async (request, middlewares, plugin)=>{\n    for (const nextMiddleware of middlewares){\n        plugin.beforeMiddleware?.(nextMiddleware.name);\n        const res = await nextMiddleware(request);\n        plugin.afterMiddleware?.(nextMiddleware.name);\n        // short circuit chaining and respond early\n        if (typeof res !== 'undefined') {\n            request.response = res;\n            return;\n        }\n    }\n};\nexport default middy;\n\n", "import { Transform } from 'node:stream'\n\nconst defaults = {\n  logger: console.log,\n  awsContext: false,\n  omitPaths: [],\n  mask: undefined,\n  replacer: undefined\n}\n\nconst inputOutputLoggerMiddleware = (opts = {}) => {\n  const { logger, awsContext, omitPaths, mask, replacer } = {\n    ...defaults,\n    ...opts\n  }\n\n  if (typeof logger !== 'function') {\n    throw new Error('logger must be a function', {\n      cause: {\n        package: '@middy/input-output-logger'\n      }\n    })\n  }\n\n  const omitPathTree = buildPathTree(omitPaths)\n  // needs `omitPathTree`, `logger`\n  const omitAndLog = (param, request) => {\n    const message = { [param]: request[param] }\n\n    if (awsContext) {\n      message.context = pick(request.context, awsContextKeys)\n    }\n\n    let cloneMessage = message\n    if (omitPaths.length) {\n      cloneMessage = structuredClone(message, replacer) // Full clone to prevent nested mutations\n      omit(cloneMessage, { [param]: omitPathTree[param] })\n    }\n    logger(cloneMessage)\n  }\n\n  // needs `mask`\n  const omit = (obj, pathTree = {}) => {\n    if (Array.isArray(obj) && pathTree['[]']) {\n      for (let i = 0, l = obj.length; i < l; i++) {\n        omit(obj[i], pathTree['[]'])\n      }\n    } else if (isObject(obj)) {\n      for (const key in pathTree) {\n        if (pathTree[key] === true) {\n          if (mask) {\n            obj[key] = mask\n          } else {\n            delete obj[key]\n          }\n        } else {\n          omit(obj[key], pathTree[key])\n        }\n      }\n    }\n  }\n\n  const inputOutputLoggerMiddlewareBefore = async (request) => {\n    omitAndLog('event', request)\n  }\n  const inputOutputLoggerMiddlewareAfter = async (request) => {\n    if (\n      request.response?._readableState ??\n      request.response?.body?._readableState\n    ) {\n      passThrough(request, omitAndLog)\n    } else {\n      omitAndLog('response', request)\n    }\n  }\n  const inputOutputLoggerMiddlewareOnError = async (request) => {\n    if (request.response === undefined) return\n    inputOutputLoggerMiddlewareAfter(request)\n  }\n\n  return {\n    before: inputOutputLoggerMiddlewareBefore,\n    after: inputOutputLoggerMiddlewareAfter,\n    onError: inputOutputLoggerMiddlewareOnError\n  }\n}\n\n// https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html\nconst awsContextKeys = [\n  'functionName',\n  'functionVersion',\n  'invokedFunctionArn',\n  'memoryLimitInMB',\n  'awsRequestId',\n  'logGroupName',\n  'logStreamName',\n  'identity',\n  'clientContext',\n  'callbackWaitsForEmptyEventLoop'\n]\n\n// move to util, if ever used elsewhere\nconst pick = (originalObject = {}, keysToPick = []) => {\n  const newObject = {}\n  for (const path of keysToPick) {\n    // only supports first level\n    if (originalObject[path] !== undefined) {\n      newObject[path] = originalObject[path]\n    }\n  }\n  return newObject\n}\n\nconst isObject = (value) =>\n  value && typeof value === 'object' && value.constructor === Object\n\nconst buildPathTree = (paths) => {\n  const tree = {}\n  for (let path of paths.sort().reverse()) {\n    // reverse to ensure conflicting paths don't cause issues\n    if (!Array.isArray(path)) path = path.split('.')\n    if (path.includes('__proto__')) continue\n    path\n      .slice(0) // clone\n      .reduce((a, b, idx) => {\n        if (idx < path.length - 1) {\n          a[b] ??= {}\n          return a[b]\n        }\n        a[b] = true\n        return true\n      }, tree)\n  }\n  return tree\n}\n\nconst passThrough = (request, omitAndLog) => {\n  // required because `core` remove body before `flush` is triggered\n  const hasBody = request.response?.body\n  let body = ''\n  const listen = new Transform({\n    objectMode: false,\n    transform (chunk, encoding, callback) {\n      body += chunk\n      this.push(chunk, encoding)\n      callback()\n    },\n    flush (callback) {\n      if (hasBody) {\n        omitAndLog('response', { response: { ...request.response, body } })\n      } else {\n        omitAndLog('response', { response: body })\n      }\n      callback()\n    }\n  })\n  if (hasBody) {\n    request.response.body = request.response.body.pipe(listen)\n  } else {\n    request.response = request.response.pipe(listen)\n  }\n}\n\nexport default inputOutputLoggerMiddleware\n", "import uuid4 from 'uuid4'\n\nexport interface IUserProps {\n  uuid?: string\n  coreCapitalId: string\n  name: string\n  lastName?: string\n  surName?: string\n  dni?: string\n  isActive?: boolean\n  userName: string\n  createdAt?: Date\n  updatedAt?: Date\n}\n\nexport class User {\n  private constructor(\n    readonly props: IUserProps,\n    readonly uuid?: string,\n    readonly createdAt?: Date,\n    readonly updatedAt?: Date,\n  ) {}\n\n  static create(plainData: IUserProps, _uuid?: string): User {\n    return new User(plainData, _uuid ?? uuid4(), new Date(), new Date())\n  }\n\n  static toDomain(plainData: IUserProps) {\n    return new User(plainData, plainData.uuid, plainData.createdAt, plainData.updatedAt)\n  }\n}\n", "export class CustomError extends Error {\n  protected readonly statusCode: number\n  constructor(message: string, statusCode?: number) {\n    super(message)\n    this.name = 'AnErrorHasOccurred'\n    this.statusCode = statusCode\n  }\n}\n", "import { User } from '@functions/users/domain/User'\nimport { UserRepository } from '@functions/users/domain/UserRepository'\nimport { UsersRequest } from '@functions/users/domain/UserRequest'\nimport { CustomError } from '@infraestructure/error/CustomError'\nimport { logger } from '@libs/powertools'\n\nexport class SaveUser {\n  constructor(private repository: UserRepository) {}\n\n  async execute(userRequest: UsersRequest) {\n    try {\n      await this.repository.begin()\n\n      if (!userRequest?.name || !userRequest?.user_name) {\n        throw new CustomError('Nombre y usuario son requeridos', 400)\n      }\n\n      const UserCreate = User.create({\n        name: userRequest.name,\n        lastName: userRequest.last_name,\n        surName: userRequest.sur_name,\n        userName: userRequest.user_name,\n        dni: userRequest.dni,\n        isActive: true,\n        coreCapitalId: userRequest.core_capital_id,\n      })\n\n      if (await this.repository.alreadyExists(UserCreate)) {\n        throw new CustomError('El usuario ya existe en el sistema', 400)\n      }\n\n      await this.repository.create(UserCreate)\n\n      await this.repository.commit()\n    } catch (error) {\n      logger.info('ERROR', error)\n      await this.repository.rollback()\n      throw new CustomError(error.message, error?.statusCode)\n    } finally {\n      await this.repository.release()\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["exports", "exports", "exports", "require_utils", "exports", "exports", "module", "Buffer", "Symbol", "Uint8Array", "Map", "isObject", "exports", "require_EnvironmentVariablesService", "require_config", "exports", "Logger", "logger", "exports", "require_middy", "logger", "require_middleware", "exports", "require_lib", "exports", "require_ConfigServiceInterface", "require_EnvironmentVariablesService", "require_config", "exports", "require_constants", "MetricUnits", "exports", "require_Metrics", "Metrics", "require_middy", "metrics", "require_middleware", "exports", "require_lib", "exports", "require_helpers", "require_ConfigServiceInterface", "require_EnvironmentVariablesService", "require_config", "exports", "module", "logger", "module", "self", "module", "self", "triggerId", "module", "logger", "module", "module", "module", "logger", "processAddress", "module", "logger", "module", "logger", "require_utils", "module", "logger", "j", "i", "patternChar", "module", "logger", "module", "module", "logger", "module", "logger", "module", "logger", "module", "getClientIp", "module", "module", "module", "logger", "loadRulesConfig", "parseRulesConfig", "key", "module", "module", "module", "logger", "constructStatisticsDocs", "assembleRules", "assembleTargets", "isRuleValid", "dateToEpoch", "getOptions", "module", "isExpired", "module", "logger", "refresh", "refreshWithFirewall", "refreshCache", "getJitter", "module", "logger", "refreshWithFirewall", "refresh", "getCandidates", "getJitter", "module", "logger", "processMatchedRule", "module", "logger", "module", "logger", "facadeSegment", "module", "module", "module", "logger", "module", "module", "logger", "module", "module", "logger", "module", "setAWSWhitelist", "appendAWSWhitelist", "module", "logger", "captureFunc", "captureAsyncFunc", "captureCallbackFunc", "require_constants", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "self", "module", "self", "module", "module", "module", "module", "module", "module", "module", "require_valid", "module", "module", "module", "module", "module", "module", "module", "require_semver", "module", "module", "logger", "throttledErrorDefault", "captureAWS", "captureAWSClient", "req", "HttpResponse", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "logger", "module", "logger", "captureHTTPsGlobal", "captureHTTPs", "errorCapturer", "module", "Promise", "module", "module", "require_lib", "module", "exports", "Tracer", "require_middy", "require_lib", "exports", "module", "module", "require_lib", "module", "module", "module", "module", "module", "module", "module", "module", "module", "bits", "value", "elementType", "i", "module", "module", "require_utils", "module", "defaults", "module", "module", "require_utils", "module", "module", "module", "module", "config", "module", "defaults", "module", "types", "module", "password", "query", "module", "module", "self", "net", "module", "Transform", "self", "module", "require_lib", "module", "module", "defaults", "self", "module", "Promise", "Pool", "err", "client", "response", "require_query", "module", "self", "require_client", "module", "self", "err", "module", "require_lib", "module", "defaults", "Pool", "Client", "module", "uuid4", "HTTP_CODES", "uuid4", "import_promises", "middy", "e", "import_node_stream", "logger", "import_uuid4", "uuid4"]
}
